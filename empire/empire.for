C 	PROGRAM EMPIRE
C
C This program is a war game simulation for video terminals.
C The game was originally written outside of Digital, probably a university.
C This version of the game was made runnable on Digital Equipment VAX/VMS
C FORTRAN by conversion from the TOPS-10/20 sources available around fall 1979.
C After debugging it, numerous changes have been made.
C
C Now that you are the proud owner of the source and you are all gung ho
C to do things right, there are a few things you should be aware of.
C There are many magic numbers controlling how many different kinds of
C units can exist and how many of each, so it is unfortunately not easy
C to add another unit type. Also, "slight changes" to the way the units
C work will typically have a fairly devastating affect on the computers
C strategy.  If you are interested in really hacking this, there is a plenty
C of room for enhanced computer strategy.  As you'll see, there are some
C very good debugging tools tucked inside, and you will soon discover weak
C points and bugs, that up until you, have remained problems (all the previous
C programmers got lazy or lost interest).  Finally, please be careful with
C the version number and identification at start up to avoid confusion of
C ongoing versions with private copies.  If you make a change don't remove
C the major version id, but rather add something like (V4.0 site.1 20-JUL-80).
C
	INCLUDE 'EMPIRE.INC/LIST'
	BYTE ODOR(2)
	EQUIVALENCE (ODOR(1),ORDERS)
C 
	INTEGER*4 BDESC(2),BUFFER(3)
	EXTERNAL IO$_SETMODE,TT$M_WRAP
C
	WIN=0				!**
	NCYCLE=1
	LOGFLAG=0
	PASS=.FALSE.
	AUTOMV=.FALSE.
C
C  TEMPORARILY FORCE PROGRAM INTO NOWRAP MODE BECAUSE OF BUG IN TERMINAL DRIVER
C
	CALL SYS$ASSIGN('TT',CHAN,,)
	BDESC(1)=12
	BDESC(2)=%LOC(BUFFER(1))
	CALL SYS$GETCHN(%VAL(CHAN),,BDESC(1),,)
	I=%LOC(TT$M_WRAP)
	BUFFER(3)=(BUFFER(3).OR.I)-I
	CALL SYS$QIOW(,%VAL(CHAN),%VAL(%LOC(IO$_SETMODE)),,,,BUFFER(2),,,,,)
C
C
	CALL ERASE_PAGE(1,1)
	TYPE 999
999	FORMAT(1X,//////////////)
	TYPE 998
998	FORMAT(' EMPIRE, Version 4.7 18-Oct-81'/)
	TYPE 997
997	FORMAT(' Please send bug reports to GAMEUTIL'/)
C	TYPE 996
C996	FORMAT(' Known bugs/restrictions'/
C	1' None'/
C	9)

	CALL STROUT('Detailed directions are in EMPIRE.DOC',1)
C
C	-1/0/1 = RESTORE/START/SAVE GAME
C
	CALL GAME(-1,0)		!Try to restore a previous game
	LASTSAVE=MDATE
C 
C COMMAND LOOP STARTS HERE.
C
100	IF (AUTOMV) GOTO 4200	!Don't ask if in auto move
	CALL LIB$SET_CURSOR(2,1)
	IF (LASTSAVE.NE.MDATE) THEN
	  CALL GAME(+1,0)
	  LASTSAVE=MDATE
	  CALL STROUT('Game saved.',1)
	ENDIF
	CALL LIB$SET_CURSOR(1,1)
	CALL STROUT('Your orders? ',13)
	ACCEPT 995, ORDERS
995	FORMAT(A2)
C
C 		SPECIAL HACK FOR JE COMMAND
	IF ((ODOR(1).GE.'a').AND.(ODOR(1).LE.'z')) ODOR(1)=ODOR(1)-32
	IF ((ODOR(2).GE.'a').AND.(ODOR(2).LE.'z')) ODOR(2)=ODOR(2)-32
	IF ((SPECAL).AND.(ORDERS.EQ.'JE')) GOTO 3900
C LOOKUP COMMAND
	DO 200 I=1,20
200	IF (ORDERS.EQ.COMSCN(I)) GOTO 300
	IF (PASS) GOTO 2200
	GOTO 100
C	       M,N,O,S,T,V,P,Y,C, L, H, J, G, R, x, Q , +, A
300	GOTO (400,500,600,700,800,900,1000,1100,1200,1300,
	1 1400,1500,1600,1700,1800,1900,2000,2100) I
	GOTO 100

400	GOTO 4200			!M - MOVE MODE

500	CALL LIB$SET_CURSOR(2,1)	!N - FREE ENEMY MOVES
	CALL STROUT('Number of free enemy moves:',12)
	ACCEPT 993,NCYCLE
	GOTO 5300

600	continue			!O - unused
1100	continue			!Y - unused
	call direc
	GOTO 100

700	CALL ERASE_PAGE(1,1)		!S - CLEAR THE SCREEN
	ISEC=-1
	GOTO 100

800	CALL BLOCK(PMAP(1))		!T - PRINT OUT MAP
	GOTO 100

1000	CALL SECTOR(PMAP(1))		!P - PRINT OUT A SECTOR
	GOTO 100

900	IF (GIGI.EQ.0) THEN
	  GIGI=-1			!V - SET VT125 DISPLAY MODE
	  CALL VT125_ON
	  CALL STROUT('VT125 mode enabled.',1)
	  GOTO 100
	ENDIF
	IF (GIGI.EQ.1) THEN
	  CALL DIREC			!ERROR MSG
	  GOTO 100
	ENDIF
	GIGI=0				!DISABLE VT125 MODE
	ISEC=-1
	CALL VT125_OFF
	CALL STROUT('VT125 mode disabled.',1)
	GOTO 100

1200	GOTO 5200			!C - GIVE ONE FREE ENEMY MOVE

1300	LOGFLAG=.NOT.LOGFLAG		!L - TURN ON/OFF GAME LOG
	GOTO 100

1400	CALL HELP			!H - HELP
	ISEC=-1
	GOTO 100

1500	MODE=1				!J - EDIT MODE
	Z6=0
	CALL EDIT(Z6)
	GOTO 100

1600	IF (GIGI.EQ.0) THEN		!G - GIGI ENABLE/DISABLE
	  GIGI=1
	  SWIDTH=56
	  CALL GIGI_ON
	  CALL STROUT('GIGI mode enabled.',1)
	  GOTO 100
	ENDIF
	IF (GIGI.EQ.-1) THEN
	  CALL DIREC
	  GOTO 100
	ENDIF
	GIGI=0
	SWIDTH=70
	ISEC=-1
	CALL GIGI_OFF
	CALL STROUT('GIGI mode disabled.',1)
	GOTO 100

1700	CALL LIB$SET_CURSOR(3,40)		!R - DISPLAY ROUND NUMBER
	CALL STROUT(' Round #',2)
	TYPE 994,MDATE
994	FORMAT('+',I4,1X,$)
	GOTO 100

1800	GOTO 100

1900	CALL LIB$SET_CURSOR(2,1)		!Q - QUIT
	CALL STROUT(' QUIT- Are you sure? ',2)
	E=GETCHX()
	IF (E.NE.'Y' .AND. E.NE.'y') GOTO 100
	CALL ERASE_PAGE(1,1)
	CALL EXIT

2000	E=GETCHX()			!+ - TURN ON PASS
	IF (E.EQ.'+') PASS=.TRUE.
	IF (E.EQ.'-') PASS=.FALSE.	! OR OFF
	GOTO 100

2100	AUTOMV=.TRUE.			!A - TURN ON AUTO MOVE MODE
	GOTO 4200

C 
2200	DO 2300 I=21,40			!DEBUGGING COMMANDS
2300	IF (ORDERS.EQ.COMSCN(I)) GOTO 2400
	GOTO 100
C	       LO,NU,LI,TR,AR,TA,PA,A1,T3,A0,CO,CH,Q0, Q1,JE,CY,EX
2400	GOTO (2500,2600,2700,2800,2900,3000,3100,3200,3300,
	1 3400,3500,3600,3700,3800,3900,4000,4100) I-20
	GOTO 100

2500	TYPE 986, ((LOCI(I,J),J=1,11),I=1,10) !LO -
	GOTO 100

2600	TYPE 989,NUMBER		!NU -
	GOTO 100

2700	TYPE 991, LIMIT		!LI -
	GOTO 100

2800	TYPE 990,TROOPT		!TR -
	GOTO 100

2900	TYPE 989,ARMTOT		!AR -
	GOTO 100

3000	TYPE 989,TARGET		!TA -
	ISEC=-1
	GOTO 100

3100	TYPE 988, SUCCES,FAILUR	!PA -
	GOTO 100

3200	CALL BLOCK(RMAP(1))		!A1 - PRINT REFERENCE MAP
	GOTO 100

3300	GOTO 100			!T3 - IGNORED

3400	CALL BLOCK(EMAP(1))		!A0 - PRINT COMPUTER'S MAP
	GOTO 100

3500	ACCEPT 993,I1			!CO -
	ACCEPT 993,I2
993	FORMAT(I)
	TYPE 987, (CODEFU(J),CODELA(J),J=I1,I1+I2)
	GOTO 100

3600	ACCEPT 985,CODER		!CH - SET CODER VARIABLE
	GOTO 100

3700	ISEC=-1				!Q0 - DISPLAY ENEMY MAP SECTOR
	CALL LIB$SET_CURSOR(1,40)
	CALL STROUT('Sector?',12)
	JECTOR=IPHASE(GETCHX())
	CALL SECTOR(EMAP(1))
	GOTO 100

3800	ISEC=-1				!Q1 - DISPLAY REFERENCE MAP SECTOR
	CALL LIB$SET_CURSOR(1,40)
	CALL STROUT('Sector?',12)
	JECTOR=IPHASE(GETCHX())
	CALL SECTOR(RMAP(1))
	GOTO 100

3900	ISEC=-1
	JECTOR=IPHASE(GETCHX())		!JE - DISPLAY ENEMY SECTOR OF CHOICE
	IF (JECTOR.LT.0.OR.JECTOR.GT.9) GOTO 3900
	CALL SECTOR(EMAP(1))
	ISEC=-1
	GOTO 100

4000	type *,'total player   city rounds=',pcityrounds
	type *,'total computer city rounds=',ccityrounds
	p=0
	c=0
	do 4010 i=1,8
	p=p+producedunits(1,i)*ph(i)
	c=c+producedunits(2,i)*ph(i)
4010	continue
	type *,'total player   production',p
	type *,'total computer production',c
	type 991,((producedunits(i,j),j=1,8),i=1,2)
	ISEC=-1
	GOTO 100			!CY - show running production totals

4100	EX=EXPL()			!EX - DISPLY EXPLORE FUNCTION VALUE
	TYPE 992,EX
	GOTO 100
C 
992	FORMAT('+EXP VALUE:',I5$)
991	FORMAT(1X,8I4)
990	FORMAT(1X,5I6)
989	FORMAT(1X,10I5)
988	FORMAT(' SUCCESS:',I6,' FAILURE:',I6)
987	FORMAT(1X,10I7)
986	FORMAT(11I5)
985	FORMAT(I)
C 
C BEGIN MOVEMENT
C 
C USER MOVE
C 
4200	IF (MODE.EQ.0) GOTO 4400
	IF (JECTOR.NE.-1) GOTO 4300
	CALL ERASE_PAGE(1,1)
	JECTOR=0
	ISEC=-1
4300	ISTART=ISEC
	IF (ISEC.LT.0) ISTART=0
4400	DO 4500 I=1,1500
4500	MOVEDFLAG(I)=0
	DO 4550 Y=1,70
	IF (OWNER(Y).eq.1) CALL SENSOR(X(Y))
4550	continue
	DO 4700 JECT=ISTART,ISTART+9
	IF (MODE.EQ.0) GOTO 4600
	JECTOR=JECT
	IF (JECT.GT.9) JECTOR=JECT-10
	LINE=KLINE(KI,JECTOR)
	IADJST=LINE+KI-300
4600	CALL SHIPMV(ITT,ITTH,5,'T',3)
	CALL SHIPMV(ICA,ICAH,7,'C',8)
	CALL SHIPMV(IBA,IBAH,8,'B',12)
	CALL SHIPMV(ICR,ICRH,6,'R',8)
	CALL SHIPMV(ISU,ISUH,4,'S',2)
	CALL SHIPMV(IDE,IDEH,3,'D',3)
	CALL ARMYMV
	CALL FIGHMV
	IF (MODE.EQ.0) GOTO 4800
4700	CONTINUE
4800	CONTINUE
C 
C HARDWARE PRODUCTION
C
	DO 5100 Y=1,70
	IF (OWNER(Y).NE.1) GOTO 5100
c	CALL SENSOR(X(Y))
	IF (PHASE(Y).EQ.8) GOTO 4900
	IF ((PHASE(Y).LT.1).OR.(PHASE(Y).GT.15)) GOTO 4900
	IF (MOD(PHASE(Y),2).EQ.0) GOTO 5000
	IF (MOD(PHASE(Y),5).EQ.0) GOTO 5000
	IF (PHASE(Y).EQ.1) GOTO 5000
C
C   CITY PHASE INCORRECT OR WE JUST TOOK IT
C
4900	CALL ERASE_PAGE(1,1)
	ISEC=-1
	TYPE 984,X(Y)
984	FORMAT(' Readout around city at',I5)
	I1=MODE
	MODE=0
	CALL LTR(X(Y),0)
	MODE=I1
	CALL STROUT('What are your production demands for this city? ',13)
	CALL PHASIN(Y,E)
	TYPE 977,E
977	FORMAT ('+',A1,$)
	GOTO 5100
5000	pcityrounds=pcityrounds+1
	IF (MDATE.LT.FOUND(Y)) GOTO 5100
	FOUND(Y)=MDATE+PHASE(Y)*5
	CALL LIB$SET_CURSOR(3,1)
	CALL STROUT('City #',10)
	CALL DECPRT(Y)
	CALL STROUT(' at',10)
	CALL DECPRT(X(Y))
	CALL STROUT(' has completed a',0)
	K=PHASE(Y)
CD	TYPE 983, HITS(K),X(Y),TIPE(K),CRAHIT(K),CRALOC(K),
CD	1 LOPMAX(K),K
CD983	FORMAT(' HITS:',I5,' X(Y):',I5,' TIPE(K):',I5,' CRAHIT(K):',I5,/
CD	1 ,' CRALOC(K):',I5,' LOPMAX(K):',I5,' K:',I)
	CALL PROD(HITS(K),X(Y),LIMIT(TIPE(K)),CRAHIT(K),CRALOC(K),
	1	LOPMAX(K),AR2S,TIPE(K)+1,RANGE)
	producedunits(1,tipe(k))=producedunits(1,tipe(k))+1
5100	CONTINUE
5200	CONTINUE
C 
C COMPUTER MOVE
C 
5300	CONTINUE
D	CALL PME_INIT
	DO 5500 I=1,NCYCLE
C
	CALL ARMCNT
	CALL TROOPM
C
	CALL LIB$SET_CURSOR(1,1)
	CALL STROUT('... My turn, thinking ...',3)
C
	CALL ARMYEN
C 
	CALL LIB$ERASE_LINE(1,1)	!BLANK THE THINKING
C
	CALL CARIER
	CALL ENEMYM('b',12,IBA2H,IBA2,8)
	CALL ENEMYM('r',8,ICR2H,ICR2,6)
	CALL ENEMYM('s',2,ISU2H,ISU2,4)
	CALL ENEMYM('d',3,IDE2H,IDE2,3)
C 
	CALL LIB$SET_CURSOR(1,1)
	CALL STROUT('... My turn, thinking ...',3)
	CALL FIGHTR
C
C AGE KNOWN ENEMY ARMY LOCATIONS
C
	DO 5350 K=1,10
	IF (LOCI(K,1)+17.GT.MDATE) GOTO 5350	!IF DATA IS NOT OLD
	DO 5340 J=1,11
5340	LOCI(K,J)=0				!ZERO THAT LINE
5350	CONTINUE
C 
C PRODUCTION OF ENEMY HARDWARE
C
	CALL CITYCT
	DO 5400 Y=1,70
	IF ((X(Y).EQ.0).OR.(OWNER(Y).NE.2)) GOTO 5400
	ccityrounds=ccityrounds+1
	CALL SONAR(X(Y))
	IF ((PHASE(Y).LE.0).OR.(MDATE.LT.FOUND(Y))) GOTO 5380
	K=PHASE(Y)
	J=0
	IF (K.EQ.1) J=1
	CALL PROD(HITS(K),X(Y),LIMIT(TIPE(K)+8),CRAHIT(K)+IDE2H,
	1	CRALOC(K)+1500,LOPMAX(K),AR2S,J,RANG)
	producedunits(2,tipe(k))=producedunits(2,tipe(k))+1
5380	IF ((PHASE(Y).LE.0).OR.(MDATE.GE.FOUND(Y))) CALL CITYPH(Y)
5400	CONTINUE
	MDATE=MDATE+1
	NEWRND=1
	IF (MOD(MDATE,4).EQ.0.OR.(MDATE.GT.160)) THEN
	  CALL GAME (+1,0)
	  LASTSAVE=MDATE
	ENDIF
	IF ((LOGFLAG.NE.0).AND.MOD(MDATE+12,20).EQ.0) CALL GAME(+1,1)
5500	CONTINUE
D	CALL PME_EXIT
	NCYCLE=1
C 
	IF (WIN.EQ.1) GOTO 100
	IF (WIN.EQ.2) GOTO 5700
	N=0
	DO 5600 J=1,70
5600	IF (OWNER(J).EQ.1) N=N+1
	IF (N.LT.30) GOTO 5700
	IF (NUMBER(9).GT.N/2) GOTO 5700
	TYPE 982
982	FORMAT(' The computer acknowledges defeat. Do'/
	1	' you wish to smash the rest of the enemy?')
	ACCEPT 981,ORDERS
981	FORMAT(4A1)
	IF ((ORDERS.NE.'Y').AND.(ORDERS.NE.'y')) CALL EXIT
	TYPE 980
980	FORMAT(' The enemy inadvertantly revealed its code used for'/
	1	' receiving battle information. You can display what they''ve'/
	1	' learned through the command ''JE''(cr)(lf), followed by the'/
	1	' sector number.')
	SPECAL=.TRUE.
	WIN=2
	AUTOMV=.FALSE.
	GOTO 100
5700	IF ((NUMBER(9).GT.0).OR.(LIMIT(9).GT.0)) GOTO 5800
	CALL ERASE_PAGE(1,1)
	TYPE 979
979	FORMAT(' The enemy is incapable of defeating you.'/
	1	' You are free to rape the empire as you wish.'/
	1	' There may be, however, remnants of the enemy fleet'/
	1	' to be routed out and destroyed.')
	WIN=1
	AUTOMV=.FALSE.
	GOTO 100
5800	DO 5900 I=1,70
5900	IF (OWNER(I).EQ.1) GOTO 100
	DO 6000 I=1,LIMIT(1)
6000	IF (RLMAP(I).NE.0) GOTO 100
	CALL ERASE_PAGE(1,1)
	WIN=1
	TYPE 978
978	FORMAT(' You have been rendered incapable of'/
	1	' defeating the rampaging enemy fascists! The'/
	1	' empire is lost. If you have any ships left, you may'/
	1	' attempt to harass enemy shipping.')
	AUTOMV=.FALSE.
	GOTO 100
	END

C BLOCK DATA FOR EMPIRE
C
	SUBROUTINE BLOCK_DATA_EMPDAT
C
	INCLUDE 'EMPIRE.INC/NOLIST'
C
	DATA COMMAN/'S','R','I','K','O','L','F','G','P','H',
	1	 'Y','T','V','J','?','U',0,'B','N','+'/

	DATA COMM/'D','E','W','Q','A','Z','X','C','S',
	1	 'L','B','F','T','G','V','J','U',-1,-1,
	2	 'O','P','R','I','M','K','N',
	3	 'S','?','Y','H'/

	DATA IOTAB/0,500,700,900,1100,1200,1300,1400,1500,2000,
	1	 2200,2400,2600,2700,2800,2900/

	DATA OVRPOP/
	1	 9,001,002,9,003,004,05,9,9,9,06,9,07,9,9,08,
	2	 0,499,199,0,199,199,83,0,0,0,99,0,99,0,0,99/

	DATA COMSCN/'M','N','O','S','T','V','P','Y','C','L','H','J',
	1	'G','R','0','Q','+','A','0',0,
	2	'LO','NU','LI','TR','AR','TA','PA','A1',
	3	'T3','A0','CO','CH','Q0','Q1','JE','CY','EX',0,0,0/

	DATA ARROW/-101,-100,-99,-1,0,1,99,100,101/
	DATA CMYTBL/6104,6103,6102,6105,6101,6106,6107,6108,0/
	DATA CRAHIT/0,0,0,0, 200, 400,0,0,0, 500,0, 600,0,0, 700/
	DATA CRALOC/0,500,0,700,900,1100,0,0,0,1200,0,1300,0,0,1400/
	DATA HITS/1,1,0,3,2,3,0,0,0,8,0,8,0,0,12/
	DATA IARROW/0,1,-99,-100,-101,-1,99,100,101,0/
	DATA INDEX/11,12,0,13,14,15,0,0,0,16,0,17,0,0,18/
	DATA KBFUDG/-101,-100,-99,-1,1,99,100,101,0/
	DATA KBTBL/'Q','W','E','A','D','Z','X','C',' '/
	DATA LOPMAX/500,200,0,200,200,100,0,0,0,100,0,100,0,0,100/
	DATA OKA/'+',' ','*','X','O'/
	DATA OKB/'+',' ','O','t','*'/
	DATA OKC/'.',' ','O','*','X'/
	DATA PH/1,2,4,5,6,10,12,15/
	DATA PHAZE/'A','F','D','S','T','R','C','B'/
	DATA STEP/37/,POSIT/65/,START/102/,GIGI/0/,SWIDTH/70/,OUTOFGAS/0/
	DATA TIPE/1,2,0,3,4,5,0,0,0,6,0,7,0,0,8/

	END

	SUBROUTINE GAME(ICODE,LFLAG)
C
C THIS SUBROUTINE READS IN THE GAME MAP AND INITIALIZES THE MAP ARRAYS
C  IT ALSO SAVES AND RESTORES THE GAME FROM THE SAVE FILE
C	ICODE: FUNCTION, -1=RESTORE, 0=INIT, 1=SAVE
C
	INCLUDE 'EMPIRE.INC/NOLIST'
	COMMON/CITIES/CITIES(128)
C
	DATA IFILE/'G','A','M','E','S',':','E','M','R','A',0/
C
	IF (ICODE) 1800,100,1500		!-1/0/+1 = RESTORE/INIT/SAVE
C
C HERE TO INITIALIZE THE GAME
C
100	DO 200 I=1,70			!CLEAR ARRAYS
	 X(I)=0
	 FOUND(I)=0
	 OWNER(I)=0
	 PHASE(I)=0
	 TARGET(I)=0
	 FIPATH(I)=0
200	CONTINUE
	DO 300 I=1,1500
	 CODEFU(I)=0
	 CODELA(I)=0
	 MYCODE(I)=0
300	CONTINUE
	DO 400 I=1,200
	 RANGE(I)=0
	 RANG(I)=0
400	CONTINUE
	DO 500 I=1,500
500	 AR2S(I)=0
	DO 600 I=1,3000
	 RLMAP(I)=0
600	CONTINUE
	DO 700 I=1,6000
	 EMAP(I)=' '
	 PMAP(I)=' '
700	CONTINUE
C
	MODE=1
	ISEC=-1
	CALL TIME(PAMELA)
	CALL DATE(REEED)
					!THIS GETS UPDATED IN TWO PLACES!!!!
	VERSION=8			!VERSION OF DATA WITHIN EMSAVE.DAT FILE
	IB=1

C-----MAP SELECTION-------
C PICK ONE OF THE MAPS RANDOMLY.  MAPS ARE IN FILES A-F
C
	TRY=0				!TRY AGAIN 
900	TRY=TRY+1
	IFILE(10)='A'
	IFILE(10)=IFILE(10)+RND(10)	!CURRENTLY SIX MAPS, ALLOW 4 EXTRA
	IF (TRY .LE. 8) GOTO 1000	!TRY AGAIN IF YOU DON'T HAVE ALL OF THEM
	TYPE 999
999	FORMAT(' Generating new map ...')
	CALL GEN
	TRY=0
	GOTO 1100
1000	OPEN(UNIT=1,NAME=IFILE,ACCESS='SEQUENTIAL',FORM='UNFORMATTED',
	1	TYPE='OLD',READONLY,ERR=900)
	READ(1) (D(I),I=1,223)
	READ(1) (D(I),I=224,446)
	READ(1) (D(I),I=447,667)
 	CLOSE(UNIT=1)
C
C-----CITY AND A-MAP INITIALIZATION--------
C
1100	CALL INITIA(TRY)		! TRANSFER MAP FROM D() INTO MAPBUF
1200	C=RND(70)+1				!** PICK OUR CITY
	ID=RND(70)+1				! PICK ENEMY CITY
	IF (X(C).EQ.0.OR.X(ID).EQ.0) GOTO 1200
	IF (X(C).EQ.X(ID)) GOTO 1200
	IF ((EDGER(X(C)).EQ.8).OR.(EDGER(X(ID)).EQ.8)) GOTO 1200
	IF (TRY.NE.0) GOTO 1300
1250	PCON=CITIES(RMAP(X(ID)))
	ECON=CITIES(RMAP(X(C)))
	IF (PCON.LE.100) GOTO 1200	! NOTE RMAP IS REALLY OWNER
	IF (ECON.LE.100) GOTO 1200	! FROM MAP GENERATOR
	PTOT=PCON/100+MOD(PCON,100)
	ETOT=ECON/100+MOD(ECON,100)
	IF (PTOT.LE.ETOT) GOTO 1275
	I=C
	C=ID
	ID=I
	GOTO 1250
1275	DIFF=MIN(11,((ETOT*2*100+45)/PTOT)/100)-1
	IF (PCON.EQ.ECON) DIFF=3
	K1=0
	DO 1280 I=1,70
	IF (X(I).EQ.0) GOTO 1280
	IF (RMAP(X(I)).NE.RMAP(X(ID))) GOTO 1280
	J1=0
	IF (IDIST(X(I),X(ID)).LE.6) J1=1
	IF (IDIST(X(I),X(ID)).LE.4) J1=2
	IF (IDIST(X(I),X(ID)).LE.3) J1=3
	K1=K1+J1
1280	CONTINUE
	K2=0
	DO 1290 I=1,70
	IF (X(I).EQ.0) GOTO 1290
	IF (RMAP(X(I)).NE.RMAP(X(C))) GOTO 1290
	J2=0
	IF (IDIST(X(I),X(C)).LE.6) J2=1
	IF (IDIST(X(I),X(C)).LE.4) J2=2
	IF (IDIST(X(I),X(C)).LE.3) J2=3
	K2=K2+J2
1290	CONTINUE
	TYPE 994,MAX(1,MIN(10,DIFF-K1+K2))
994	FORMAT(' Difficulty estimate:',I3,
	1 ' where 1 is easy and 10 is most challenging')
1300	Z6=X(ID)
	TYPE 998,X(ID)				! TELL US WHERE IT IS
998	FORMAT(' Your city is at ',I4)
	DO 1400 I=1,6000
1400	RMAP(I)=OMAP(I)
	RMAP(Z6)='O'				! MARK IT ON MAP
	RMAP(X(C))='X'
	CALL SONAR(X(C))			! DO SENSOR SCANS
	CALL SENSOR(Z6)
	MODE=0
	CALL LTR(Z6,0)				! SHOW THE CITY
	MODE=1
	CALL STROUT('What do you demand that this city produce?',13)
	OWNER(ID)=1
	MDATE=0
	CALL PHASIN(ID,E)
	TYPE 993,E
993	FORMAT('+',A1,$)
	OWNER(C)=2
	PHASE(C)=1
	FOUND(C)=5
	Z6=X(ID)
	RETURN			! RETURN TO ORDERS MODE
C
C HERE TO SAVE A GAME
C 
1500	IF (MODE.EQ.0) TYPE  997
997	FORMAT(' A few moments please ...'/)
1600	CONTINUE
	CALL TIME(PAMELA)
	CALL DATE(REEED)
	IF (LFLAG.EQ.0) THEN

	OPEN(UNIT=1,NAME='EMSAVE',ACCESS='SEQUENTIAL',FORM='UNFORMATTED',
	1	STATUS='UNKNOWN')

	ELSE

	AB=' '
	AC=' '
	I1=MDATE/100
	IF (I1.NE.0) AB=I1+48
	I2=(MDATE-(I1*100))/10
	IF ((I2.NE.0).OR.(AB.NE.' ')) AC=I2+48
	I3=MOD(MDATE,10)
	OPEN(UNIT=1,NAME='EMSAVE.'//CHAR(AB)//CHAR(AC)//CHAR(I3+48),
	1 ACCESS='SEQUENTIAL',FORM='UNFORMATTED',STATUS='NEW')
	END IF

	WRITE(1) LIMIT,MDATE,VERSION,PAMELA,REEED
	DO 1680 I=1,6000
	EMAP(I)=EMAP(I)-MOD(I,100)
	RMAP(I)=RMAP(I)-MOD(I,100)
	OMAP(I)=OMAP(I)-MOD(I,100)
1680	CONTINUE
	 WRITE(1) EMAP,RMAP,PMAP,OMAP
	DO 1690 I=1,6000
	EMAP(I)=EMAP(I)+MOD(I,100)
	RMAP(I)=RMAP(I)+MOD(I,100)
	OMAP(I)=OMAP(I)+MOD(I,100)
1690	CONTINUE
	 WRITE(1) RLMAP
	WRITE(1) TROOPT
	WRITE(1) NUMBER
	WRITE(1) X,TARGET,FOUND
	WRITE(1) OWNER,PHASE
	DO 1700 I=1,16
1700	CALL WRITE(IOTAB(I),LIMIT(I),I)
	WRITE(1) J1TS
	WRITE(1) OUTOFGAS
	WRITE(1) LOCI
	WRITE(1) NSHIFT,FIPATH
	write(1) ccityrounds,pcityrounds,producedunits
	WRITE(1) LOGFLAG
	CLOSE(UNIT=1)
	RETURN
C
C HERE TO RESTORE A GAME
C
1800	TYPE 997
	OPEN(UNIT=1,NAME='EMSAVE',ACCESS='SEQUENTIAL',FORM='UNFORMATTED',
	1 STATUS='OLD',ERR=2200)
	READ(1) LIMIT,MDATE,VERSION,PAMELA,REEED
	READ(1) EMAP,RMAP,PMAP,OMAP
	IF (VERSION.LT.8) GOTO 1830
	DO 1820 I=1,6000
	EMAP(I)=EMAP(I)+MOD(I,100)
	RMAP(I)=RMAP(I)+MOD(I,100)
	OMAP(I)=OMAP(I)+MOD(I,100)
1820	CONTINUE
1830	IF(VERSION.GE.6) GOTO 1850
	DO 1850 I=1,6000
	   IF((EMAP(I).GE.'1').AND.(EMAP(I).LE.'8')) CALL TRAN(EMAP(I))
	   IF((RMAP(I).GE.'1').AND.(RMAP(I).LE.'8')) CALL TRAN(RMAP(I))
	   IF((PMAP(I).GE.'1').AND.(PMAP(I).LE.'8')) CALL TRAN(PMAP(I))
1850	CONTINUE
	READ(1) RLMAP
	READ(1) TROOPT
	READ(1) NUMBER
	READ(1) X,TARGET,FOUND
	READ(1) OWNER,PHASE
	DO 1900 I=1,16
1900	CALL READ(IOTAB(I),LIMIT(I),I)
	IF (VERSION.LE.4) READ(1) (J1TS(I),I=1,1500)
	IF (VERSION.GE.5) READ(1) J1TS
	READ(1) OUTOFGAS
	READ(1) LOCI
	READ(1) NSHIFT,FIPATH
	if (version.ge.7) read(1,END=2000)ccityrounds,pcityrounds,producedunits
	IF (VERSION.GE.8) READ(1,END=2000)LOGFLAG
2000	VERSION=8			!TRANSLATE TO NEW VERSION
	CLOSE(UNIT=1)
	TYPE  996,PAMELA,REEED
996	FORMAT(' Ready to resume game terminated at ',8A1,' on ',
	1	9A1,/)

	MODE=1
	ISEC=-1
	RETURN

2200	TYPE 995
995	FORMAT (' Unable to open save file, EMSAVE.DAT, Starting new game.')
	GOTO 100	
	END
 
	SUBROUTINE READ(BEG,LIM,NUM)
C
	INCLUDE 'EMPIRE.INC/NOLIST'
C
	DO 100 J=BEG+1,BEG+LIM
	READ(1) K
	RLMAP(J)=K
	IF (NUM.LT.9) READ(1) MYCODE(J)
	IF (NUM.GT.8) READ(1) CODEFU(J-1500),CODELA(J-1500)
	IF (NUM.EQ.9) READ(1) AR2S(J-1500)
	IF (NUM.EQ.2) READ(1) RANGE(J-500)
	IF (NUM.EQ.10) READ(1) RANG(J-2000)
100	CONTINUE
	RETURN
	END
C 
	SUBROUTINE WRITE(BEG,LIM,NUM)
C
	INCLUDE 'EMPIRE.INC/NOLIST'
C
	DO 100 J=BEG+1,BEG+LIM
	K=RLMAP(J)
	WRITE(1) K
	IF (NUM.LT.9) WRITE(1) MYCODE(J)
	IF (NUM.GT.8) WRITE(1) CODEFU(J-1500),CODELA(J-1500)
	IF (NUM.EQ.9) WRITE(1) AR2S(J-1500)
	IF (NUM.EQ.2) WRITE(1) RANGE(J-500)
	IF (NUM.EQ.10) WRITE(1) RANG(J-2000)
100	CONTINUE
	RETURN
	END
C 
	SUBROUTINE INITIA(FLAG)
C
	INCLUDE 'EMPIRE.INC/NOLIST'
	BYTE DECODE
	EXTERNAL DECODE
C
	DO 300 I=1,6000
	IF (FLAG.NE.0) OMAP(I)=DECODE(I)
	IF (OMAP(I).NE.'*') GOTO 300
	N1=RND(70)+1				!**
	DO 100 N3=N1,N1+70
	N=N3
	IF (N.GT.70) N=N-70
100	IF (X(N).EQ.0) GOTO 200
200	X(N)=I
300	CONTINUE
	RETURN
	END

	SUBROUTINE TRAN(AB)
C
C TRANSLATE OLD ENEMY UNITS TO NEW CHARACTERS
C
	INCLUDE 'EMPIRE.INC/NOLIST'
	BYTE OLDE(8),NEWE(8)
	DATA OLDE/'1','2','3','4','5','6','7','8'/
	DATA NEWE/'a','f','d','s','t','r','c','b'/

	DO 10 I=1,8
10	  IF(AB.EQ.OLDE(I)) AB=NEWE(I)
	RETURN
	END


	SUBROUTINE EDIT(Z5)
C 
C EDIT MODE COMMAND SUBROUTINE
C TEST ROUTINES FOR PATH
C 
	INCLUDE 'EMPIRE.INC/NOLIST'
C 
	Z6=Z5
	WHTFLG=0
	MOVFLG=0
	OLDJ=JECTOR
	CALL SECTOR(PMAP(1))
100	LINE=KLINE(KI,JECTOR)
	IADJST=LINE+KI-300
	IF (Z6.EQ.0) Z6=IADJST+1240
	DIR=1
200	IF (GIGI.NE.0) CALL REGIS_ON
	CALL CURSOR(Z6-IADJST)
	IF (GIGI.NE.0) CALL CENTER_CURSOR
	E=GETCHX()
	IF (GIGI.NE.0) CALL REGIS_OFF
	Z7=Z6
	DO 300 I=1,8
300	IF (E.EQ.COMM(I)) Z6=Z6+IARROW(I+1)	!IF CURSOR MOVE, CHANGE LOCATION
	IF ((SCRCHK(Z6).EQ.1).AND.(ORDER(Z6).EQ.0)) GOTO 400
	Z6=Z7					!IF NOT ON SCREEN, GET BACK
	GOTO 4500

400	IF (Z6.EQ.Z7) GOTO 500
	GOTO 200
500	DO 600 I=10,30
	J=I
600	IF (E.EQ.COMM(I)) GOTO 700
	GOTO 4500
C			 L, B, F, T, G, V, J, U,-1,-1		PRIV CMDS
700	IF (PASS) GOTO (800,900,1000,1100,1200,1400,1500,1600,1700,1800) J-9
C		O, P, R, I, M, K, N, S, ?, Y, H			NORMAL CMDS
	GOTO (1300,1900,4300,2100,2500,2700,2900,3100,3200,4200,4400) J-19
	GOTO 4500

800	ISEC=-1					!N - DISPLAY ENEMY SECTOR
	CALL SECTOR(EMAP(1))
	GOTO 200

900	BEG=Z6					!B - SET BEG
	IX='B'
	TYPE 999,IX
999	FORMAT('+',A1,$)
	GOTO 200

1000	END=Z6					!F - SET END
	IX='E'
	TYPE 999,IX
	GOTO 200

1100	FLAG=1000				!T - SINGLE STEP & TRACE PATH
	CALL PATH(BEG,END,DIR,OKC,FLAG)
	GOTO 200

1200	FLAG=1001				!G - SHOW PATH CHOSEN
	CALL PATH(BEG,END,DIR,OKC,FLAG)
	GOTO 200

1300	CONTINUE				!O - RETURN TO CALLER
	JECTOR=OLDJ				!RESTORE SECTOR NUMBER
	LINE=KLINE(KI,JECTOR)
	IADJST=LINE+KI-300
	CALL SECTOR(PMAP(1))			! REFRESH OUR MAP
	RETURN

1400	DIR=-DIR				!V - REVERSE DIRECTION
	GOTO 200

1500	H2=30					!J - DISPLAY CODE VALUES FOR
	OWN2=RMAP(Z6)				!    ENEMY UNITS
	IF (OWN2.LT.'a' .OR. OWN2.GT.'9') GOTO 4500
	CALL FIND(OWN2,Z6,Z8,H2)
	CALL LIB$SET_CURSOR(1,50)
	CALL STROUT(' Code:',2)
	TYPE 998,CODEFU(Z8-1500),CODELA(Z8-1500)
998	FORMAT('+ ',2I6,1X$)
	GOTO 200

1600	ISEC=-1					!U - DISPLAY REFERENCE SECTOR
	CALL SECTOR(RMAP(1))
	GOTO 200

1700	CONTINUE	! SHOULDN'T HAPPEN
1800	CONTINUE
	STOP
C 
C P: PRINT OUT NEW SECTOR
C
1900	ISEC=-1
	CALL LIB$SET_CURSOR(2,40)
	CALL STROUT(' New Sector:',12)
	JECTOR=IPHASE(GETCHX())
	IF (JECTOR.LT.0.OR.JECTOR.GT.9) GOTO 1900
	CALL SECTOR(PMAP(1))
	ISEC=-1
	Z6=0
	GOTO 100
C 
C R: PRINT OUT THE ROUND NUMBER
C
C2000	CALL LIB$SET_CURSOR(2,50)
C	CALL STROUT(' Round #',12)
C	CALL DECPRT(MDATE)
C	CALL EOL
C	GOTO 200
C 
C I: DIRECTIONAL STASIS
C
2100	AB=RMAP(Z6)
	IF ((AB.LT.'A').OR.(AB.GT.'T')) GOTO 4500
	E=GETCHX()
	DO 2200 I=1,8
	J=I
2200	IF (COMM(I).EQ.E) GOTO 2300
	GOTO 4500
2300	IF (AB.NE.'O') GOTO 2400
	FIPATH(CITFND(Z6))=J+6100
	GOTO 200
2400	H2=30
	CALL FIND(AB,Z6,MOVFLG,H2)
	MYCODE(MOVFLG)=J+6100
	GOTO 200
C 
C M: SAY WE WANT TO MOVE TO A LOCATION
C
2500	AB=RMAP(Z6)
	IF ((AB.LT.'A').OR.(AB.GT.'T')) GOTO 4500
	IF (AB.NE.'O') GOTO 2600
	WHTFLG='CI'
	MOVFLG=CITFND(Z6)
	GOTO 200
2600	H2=30
	CALL FIND(AB,Z6,MOVFLG,H2)
	WHTFLG='UN'
	GOTO 200
C 
C K: WAKE UP ANYTHING AND EVERYTHING
C
2700	AB=RMAP(Z6)
	IF ((AB.LT.'A').OR.(AB.GT.'T')) GOTO 4500
	IF (AB.NE.'O') GOTO 2800
	FIPATH(CITFND(Z6))=0		!IF CITY, KILL FLIGHT PATH
	DO 2750 I=501,1500		!WAKE ANY FIGHTERS OR SHIPS
	IF (RLMAP(I).EQ.Z6) MYCODE(I)=0
2750	CONTINUE
	GOTO 200
2800	H2=30				!NOT A CITY, FIND THE UNIT
	CALL FIND(AB,Z6,MOVFLG,H2)
	MYCODE(MOVFLG)=0		!ZERO ANY FUNCTION CODE
	IF (AB.NE.'T') GOTO 2817	!IF TRANSPORT, WAKE ARMIES ABOARD
	DO 2816 J=1,500
2816	IF (RLMAP(J).EQ.Z6) MYCODE(J)=0
	GOTO 200
2817	IF (AB.NE.'C') GOTO 200		!IF CARRIER, WAKE FIGHTERS ABOARD
	DO 2818 J=501,700
2818	IF (RLMAP(J).EQ.Z6) MYCODE(J)=0
	GOTO 200
C 
C N: GO HERE
C
2900	IF (WHTFLG.NE.'CI') GOTO 3000
	FIPATH(MOVFLG)=Z6
	GOTO 200
3000	IF (WHTFLG.NE.'UN') GOTO 4500
	MYCODE(MOVFLG)=Z6
	GOTO 200
C 
C S: GOTO SLEEP
C
3100	AB=RMAP(Z6)
	IF ((AB.LT.'A').OR.(AB.GT.'T')) GOTO 4500
	IF (AB.EQ.'O') GOTO 4500
	H2=30
	CALL FIND(AB,Z6,MOVFLG,H2)
	MYCODE(MOVFLG)=50
	GOTO 200
C 
C ?: REQUEST INFO
C
3200	AB=RMAP(Z6)
	IF (AB.EQ.'O') GOTO 3800
	IF ((AB.EQ.'X').AND.(PASS)) GOTO 3800
	IF ((AB.GE.'A').AND.(AB.LE.'T')) GOTO 3250
	IF ((AB.GE.'a').AND.(AB.LE.'t').AND.(PASS)) GOTO 3250
	GOTO 4500

3250	H2=30
	CALL FIND(AB,Z6,MOVFLG,H2)
	IF (MOVFLG.LE.1500) THEN
	   DO 3300 I=1,8
3300	   IF (AB.EQ. PHAZE(I)) RELNUM=MOVFLG-CRALOC(PH(I))
	   CALL HEAD(AB,RELNUM,MOVFLG,Z6,H2)	!DISPLAY STANDARD HEADER
	 ELSE
	   CALL LIB$SET_CURSOR(1,1)
	   TYPE 989,MOVFLG,CODEFU(MOVFLG-1500),CODELA(MOVFLG-1500),H2
989	   FORMAT('+ UNIT=',I5,'  FUNCTION=',I5,'  SUB FUNC=',I5,
	1  ' HITS=',I2,$)
	   CALL LIB$ERASE_LINE
	ENDIF
	IF ((AB.EQ.'A').OR.(AB.EQ.'F').OR.(AB.EQ.'a').OR.(AB.EQ.'f')) GOTO 200
C	CALL LIB$SET_CURSOR(2,1)			!DO HITS FOR SHIPS
C	CALL STROUT(' Hits left:',10)
C	CALL DECPRT(H2)
C	CALL LIB$ERASE_LINE
	N=0
	BASE=0
	IF (MOVFLG.GT.1500) BASE=1500
	IF ((AB.NE.'T').AND.(AB.NE.'t')) GOTO 3500
	DO 3400 I=1,500				!COUNT ARMIES
3400	IF (RLMAP(I+BASE).EQ.Z6) N=N+1
	IF (N.EQ.0) GOTO 3700
	IF (MODE.EQ.1) CALL LIB$SET_CURSOR(3,1)
	CALL DECPRT(N)
	CALL STROUT(' armies aboard.',1)
	GOTO 200
3500	IF ((AB.NE.'C').AND.(AB.NE.'c')) GOTO 200
	DO 3600 I=1,200				!COUNT FIGHTERS
3600	IF (RLMAP(I+500+BASE).EQ.Z6) N=N+1
	IF (N.EQ.0) GOTO 3700
	IF (MODE.EQ.1) CALL LIB$SET_CURSOR(3,1)
	CALL DECPRT(N)
	CALL STROUT(' fighters aboard.',1)
	GOTO 200
3700	IF (MODE.EQ.1) CALL LIB$SET_CURSOR(3,1)		!NOTHING THERE
	CALL STROUT('Nothing aboard.',1)
	GOTO 200
C
C	DISPLAY CITIES INFO
C
3800	J=CITFND(Z6)				!FIND CITY
	BASE=0
	IF (OWNER(J).EQ.2) BASE=1500
	N=0
	DO 3900 I=BASE+501,BASE+700		!COUNT FIGHTERS
3900	IF (RLMAP(I).EQ.Z6) N=N+1
	CALL LIB$SET_CURSOR(2,1)
	CALL STROUT(' Fighters landed:',10)
	CALL DECPRT(N)
	N=0	
	DO 4000 I=BASE+701,BASE+1500		!COUNT SHIPS
4000	IF (RLMAP(I).EQ.Z6) N=N+1
	CALL STROUT('  Ships docked:',10)
	CALL DECPRT(N)
	CALL LIB$ERASE_LINE
4150	CALL LIB$SET_CURSOR(1,1)		!EXPLAIN PRODUCTION
	CALL STROUT(' City at location:',10) 
	CALL DECPRT(Z6)
	CALL STROUT('  Producing:',10)
	DO 4100 I=1,8
4100	IF (PHASE(J).EQ.PH(I)) TYPE 997,PHAZE(I)
997	FORMAT('+',A1,$)
	CALL STROUT('  Completion:',10) 
	CALL DECPRT(FOUND(J))
	CALL STROUT('  Fpath:',10)
	IF (FIPATH(J).LT.100) CALL STROUT('sit',0)
	IF ((FIPATH(J).GT.100).AND.(FIPATH(J).LT.6000))
	1	CALL DECPRT(FIPATH(J))
	IF (FIPATH(J).GT.6100) TYPE 997, COMM(FIPATH(J)-6100)
	CALL LIB$ERASE_LINE
	GOTO 200
C 
C Y: ENTER NEW CITY PRODUCTION
C
4200	AB=RMAP(Z6)
	IF (AB.NE.'O') GOTO 4500
	J=CITFND(Z6)
	CALL LIB$SET_CURSOR(2,40)
	CALL STROUT(' New Production:',13)
	CALL PHASIN(J,E)
	TYPE 999,E
	GOTO 4150
C 
C R: SET ARMY TO MOVE AT RANDOM
C
4300	AB=RMAP(Z6)
	IF (AB.NE.'A') GOTO 4500
	H2=30
	CALL FIND(AB,Z6,MOVFLG,H2)
	MYCODE(MOVFLG)=100
	GOTO 200
C 
C H: GET HELP
C
4400	CALL HELP
	E=GETCHX()
	ISEC=-1
	CALL SECTOR(PMAP(1))
	ISEC=-1
	GOTO 100
C 
4500	CALL HUH
	GOTO 200
	END

	SUBROUTINE MVE(OWN1,XXXMDATE,RELNUM,NUM,N2,Z6,Z7,DISAS,JURSOR)
C
C	INPUTS:
C		OWN1 = CHAR OF PIECE (IE: 'A' FOR ARMY)
C		XXXMDATE = ROUND NUMBER
C		RELNUM = RELATIVE PIECE NUMBER TO TYPE
C		NUM = PIECE INDEX TO RLMAP
C		N2 = PIECE INDEX TO HITS
C		Z6 = LOCATION, RETURN NEW LOCATION
C		Z7 = OLD LOCATION
C		DISAS = 0:OK, -2:STASIS
C		JURSOR = CURRENT CURSOR
C
	INCLUDE 'EMPIRE.INC/NOLIST'
C
C HANDLE PLAYER MOVE MODE
C
	DISAS=0
C GET COMMAND CHARACTER WITH NO ECHO
100	CALL SECTOR(PMAP(1))
	IB=J1TS(N2)
	CALL HEAD(OWN1,RELNUM,NUM,Z6,IB)		!DISPLAY HEADER
	IF (GIGI.NE.0) CALL REGIS_ON
	CALL CURSOR(JURSOR)
	IF (GIGI.NE.0) CALL CENTER_CURSOR
	E=GETCHX()
	IF (GIGI.NE.0) CALL REGIS_OFF
	CALL LIB$ERASE_LINE(2,1)
	CALL LIB$ERASE_LINE(3,1)
C 
C LOOK AT THE COMMAND
C
	Z7=Z6
	DO 300 I=1,9
	IND=I
300	IF (E.EQ.KBTBL(IND)) GOTO 400
	GOTO 500			!COMMAND IS NOT A DIRECTION
400	Z6=Z6+KBFUDG(IND)
	GOTO 4200
C 
500	END=16
	IF (PASS) END=20
	DO 600 I=1,END
600	IF (E.EQ.COMMAN(I)) GOTO 700
	I=0
C	       S,R,I,K,O,L,F,G,P, H, Y, T, V, J, ?,  U,  0, B, N, +
700	GOTO (900,1000,1100,1500,1900,2000,2300,2400,2500,2600,
	1 2700,2900,2900,3200,3300,2800,800,3800,3900,2600) I
800	GOTO 100
C 
C S: PUT TO SLEEP
C
900	IF (RMAP(Z6).EQ.'O') RETURN
	MYCODE(NUM)=50
	RETURN
C 
C R: RANDOM MOVEMENT
C
1000	IF (OWN1.NE.'A') GOTO 100		!ONLY FOR ARMIES
	MYCODE(NUM)=100
	Z6=Z6+IARROW(JIGGLE(Z6,NUM)+1)		!**
	RETURN
C 
C I: PUT IN DIRECTIONAL STASIS
C
1100	IF (GIGI.NE.0) CALL REGIS_ON
	CALL CURSOR(JURSOR)		!CUZ OF CLEAR LINES ABOVE
	IF (GIGI.NE.0) CALL CENTER_CURSOR
	E=GETCHX()
	IF (GIGI.NE.0) CALL REGIS_OFF
	DO 1200 I=1,9
	IF (E .EQ. KBTBL(I)) GOTO 1300
1200	CONTINUE
	GOTO 1400
1300	MYCODE(NUM)=CMYTBL(I)
1400	IF (MYCODE(NUM).EQ.0) GOTO 100
	DISAS=-2
	RETURN
C 
C K: KILL STASIS NUMBER ON PIECE
C
1500	MYCODE(NUM)=0			!ZERO FUNCTION CODE FOR ANYTHING

	IF (OWN1.NE.'T') GOTO 1700	!IF TRANSPORT, WAKE ARMIES ABOARD
	DO 1600 J=1,500
1600	IF (RLMAP(J).EQ.Z6) MYCODE(J)=0
	GOTO 100
1700	IF (OWN1.NE.'C') GOTO 100	!IF CARRIER, WAKE FIGHTERS ABOARD
	DO 1800 J=501,700
1800	IF (RLMAP(J).EQ.Z6) MYCODE(J)=0
	GOTO 100
C 
C O: CANCEL AUTO MOVE MODE
C
1900	AUTOMV=.FALSE.
	CALL LIB$SET_CURSOR(3,1)
	CALL STROUT(' Auto move mode canceled.',3)
	GOTO 100
C 
C L: SET UP CITY STASIS NUMBERS
C
2000	IF (OMAP(Z6).NE.'*') GOTO 2300		!BETTER BE A CITY
	E=GETCHX()
	DO 2100 I=1,9
	IF (E .EQ. KBTBL(I)) GOTO 2200
2100	CONTINUE
	GOTO 4100
2200	FIPATH(CITFND(Z6))=CMYTBL(I)		!SET STASIS NUMBER
	DISAS=-2
	RETURN
C 
C F:
C
2300	CALL DIREC
	GOTO 4100
C 
C G: PUT T/C TO SLEEP
C
2400	IF ((OWN1.NE.'T').AND.(OWN1.NE.'C')) GOTO 100
	MYCODE(NUM)=9997
	DISAS=-2
	RETURN
C 
C P: SECTOR PRINTOUT
C
2500	ISEC=-1
	CALL SECTOR(PMAP(1))
	GOTO 4100
C 
C H: GET HELP
C
2600	CALL HELP
	E=GETCHX()
	ISEC=-1
	GOTO 4100
C 
C Y: CHANGE PHASE OF A CITY
C
2700	CALL DIREC
	GOTO 4100
C
C U: RETURN FIGHTER TO CLOSEST LANDING AREA
C
2800	CONTINUE
	IF (OWN1.NE.'F') GOTO 100
	DIST=21
	DO 2820 I=1,LIMIT(7)
	LOC=ICA+I
	Z8=RLMAP(LOC)
	IF (Z8.EQ.0) GOTO 2820
	IF (IDIST(Z6,Z8).GE.DIST) GOTO 2820
	IF (IDIST(Z6,Z8).GT.RANGE(RELNUM)) GOTO 2820
	DIST=IDIST(Z6,Z8)
	TARG=Z8
	IF (DIST+3.LT.RANGE(RELNUM)) GOTO 2850
2820	CONTINUE
	DO 2840 I=1,70
	IF (OWNER(I).NE.1) GOTO 2840
	Z8=X(I)
	IF (IDIST(Z6,Z8).GE.DIST) GOTO 2840
	IF (IDIST(Z6,Z8).GT.RANGE(RELNUM)) GOTO 2840
	DIST=IDIST(Z6,Z8)
	TARG=Z8
2840	CONTINUE
2850	IF (DIST.EQ.21) GOTO 100
	DISAS=-2
	MYCODE(NUM)=TARG
	RETURN
C 
C T: BLOCK PRINTOUT
C
C	CALL CLEAR
C	CALL BLOCK(PMAP(1))
C	ISEC=-1
C	GOTO 4100
2900	CALL DIREC
	GOTO 100
C 
C J: PUT IN EDIT MODE
C
3200	CALL EDIT(Z6)
	DISAS=-2
	RETURN
C 
C ?: HOW MANY HITS? LOADED?
C
3300	IF ((OWN1.EQ.'A').OR.(OWN1.EQ.'F')) GOTO 100
	IB=J1TS(N2)				!DISPLAY HITS LEFT
	IF (MODE.EQ.1) CALL LIB$SET_CURSOR(2,1)
C	CALL STROUT(' Hits left:',10)
C	CALL DECPRT(IB)
	CALL LIB$ERASE_LINE
	N=0					!COUNT ARMIES
	IF (OWN1.NE.'T') GOTO 3500
	DO 3400 I=1,500
3400	IF (RLMAP(I).EQ.Z6) N=N+1
	IF (N.EQ.0) GOTO 3700
	IF (MODE.EQ.1) CALL LIB$SET_CURSOR(3,1)
	CALL DECPRT(N)
	CALL STROUT(' armies aboard.',1)
	GOTO 4100

3500	IF (OWN1.NE.'C') GOTO 4100
	DO 3600 I=1,200				!COUNT FIGHTERS
3600	IF (RLMAP(I+500).EQ.Z6) N=N+1
	IF (N.EQ.0) GOTO 3700
	IF (MODE.EQ.1) CALL LIB$SET_CURSOR(3,1)
	CALL DECPRT(N)
	CALL STROUT(' fighters aboard.',1)
	GOTO 4100

3700	IF (MODE.EQ.1) CALL LIB$SET_CURSOR(3,1)		!NOTHING ABOARD
	CALL STROUT('Nothing aboard.',1)
	GOTO 4100
C 
C B: CALL REFERENCE MAP
C
3800	ISEC=-1
	CALL SECTOR(RMAP(1))
	GOTO 4100
C 
C N: CALL ENEMY MAP
C
3900	ISEC=-1
	CALL SECTOR(EMAP(1))
	GOTO 4100
C 
C +: BLOCK PRINT REF. MAP
C
4000	CALL ERASE_PAGE(1,1)
	ISEC=-1
	CALL BLOCK(RMAP(1))
	E=GETCHX()
	GOTO 4100
C 
4100	CALL LTR(Z6,2)
	GOTO 100
4200	IF (ORDER(Z6).EQ.0) GOTO 4300
	IF (MODE.EQ.1) CALL LIB$SET_CURSOR(3,1)
	CALL STROUT('You cannot move onto the edge of the world.',1)
	Z6=Z7
	GOTO 4100
4300	RETURN
	END
C 
	SUBROUTINE LTR(Z6,ITURN)
C
C DOES SHORT RANGE SCAN AROUND LOCATION Z6
C
	INCLUDE 'EMPIRE.INC/NOLIST'
C
	IF (MODE.NE.1) GOTO 100
	CALL SENSOR(Z6)
	RETURN
100	IF (ITURN.NE.1) GOTO 700
	DO 200 I7=1,8
	I8=Z6+IARROW(I7+1)			!**
200	IF (RMAP(I8).NE.PMAP(I8)) GOTO 300
	GOTO 700
300	TYPE 999
999	FORMAT(' BEFORE SENSOR PROBE')
	L6=Z6
	IF (L6.LT.101) L6=L6+100
	IF (L6.GT.5900) L6=L6-100
	IF (L6/100*100.EQ.L6) L6=L6-1
	IF (L6/100*100+1.EQ.L6) L6=L6+1
	DO 600 I=-101,99,100
	DO 400 I9=0,2
400	D2(I9+1)=OMAP(L6+I+I9)			!**
	DO 500 I9=0,2
500	G2(I9+1)=PMAP(L6+I+I9)			!**
600	TYPE 998,(G2(J),J=1,3),(D2(J),J=1,3)
998	FORMAT(1X,3A1,3X,3A1)
	CALL SENSOR(Z6)
	TYPE 997
997	FORMAT(' AFTER SENSOR PROBE')
700	L6=Z6
	IF (L6.LT.301) L6=L6+300-(L6-1)/100*100
	IF (L6.GT.5700) L6=L6-(L6-1)/100*100+5600
	IF ((L6-1)/100*100+97.LT.L6) L6=97+(L6-1)/100*100
	IF ((L6-1)/100*100+4.GT.L6) L6=L6/100*100+4
	DO 900 I=-303,297,100
	DO 800 I9=0,6
800	G2(I9+1)=PMAP(L6+I+I9)			!**
900	TYPE 996, (G2(J),J=1,7)
996	FORMAT(1X,7A1)
1000	CALL STROUT(0,1)
	RETURN
	END

	SUBROUTINE FGHT(Z6,H1,H2,OWN1,OWN2)
C
	INCLUDE 'EMPIRE.INC/NOLIST'
C
	IF ((OWN2.LT.'A').OR.(OWN2.GT.'T')) GOTO 100
	IF (MODE.EQ.1) CALL LIB$SET_CURSOR(2,1)
	CALL IDEN(OWN2)
	CALL STROUT('is under attack at',10)
	CALL DECPRT(Z6)
	CALL STROUT('.',1)
100	CALL LIB$SET_CURSOR(3,1)
	S1=1
	S2=1
	IF ((OWN1.EQ.'S').OR.(OWN1.EQ.'s')) S1=3
	IF ((OWN2.EQ.'S').OR.(OWN2.EQ.'s')) S2=3
	IF (H2.EQ.0) GOTO 300
200	IF (RND(100).LE.50) GOTO 300		!**
	H1=H1-S2
	H=H2
	IF (H1.GT.0) GOTO 200
	OWN=OWN1
	CALL IDEN(OWN)
	OWN=OWN2
	CALL STROUT('destroyed,',10)
	GOTO 400
300	H2=H2-S1
	H=H1
	IF (H2.GT.0) GOTO 200
	OWN=OWN2
	CALL IDEN(OWN)
	OWN=OWN1
	CALL STROUT('destroyed,',10)
400	CALL IDEN(OWN)
	CALL STROUT('has',10)
	CALL DECPRT(H)
	CALL STROUT(' hits left.',2)
	IF (MODE.EQ.0) CALL STROUT(0,1)
	RETURN
	END

	FUNCTION PATH(BEG,END,DIR,OKVECT,FLAG)
C
C PATH SUBROUTINE FOR EMPIRE
C  FINDS DIRECTION TO MOVE UNIT, FROM BEG TO END, OKVECT SPECIFIES OK TERRAIN.
C
	INCLUDE 'EMPIRE.INC/NOLIST'
	BYTE	OKVECT(5)
C
	BACKUP=1
	TDIR=DIR		! GET A DIRECTION TO FIDDLE WITH
	DIR3=TDIR*3
	Z6=BEG
	MAXMVE=IDIST(BEG,END)+1
	I=2
	IF (RND(100).LE.12) I=3
	MAXMVE=MIN(100,I * MAXMVE) ! COMPUTE MAX MOVES TO GET THERE
	MOVNUM=MAXMVE
100	DO 200 I=1,100		! CLEAR G2 ARRAY
	G2(I)=0
200	CONTINUE

C STRGHT:			! TRY STRAIGHT MOVE FIRST
300	MOOVE= MOV(Z6,END)
	Z62=Z6+IARROW(MOOVE+1)
	AB=EMAP(Z62)
	IF (COMPAR(AB,Z62,OKVECT).EQ.0) GOTO 900  !IF NO GOOD, FOLLOW SHORE

C OKSET:			! STRAGHT MOVE WORKING
400	BAKADR=1

C OKMOVE:
500	IF (Z6 .EQ. BEG) MOVE1=MOOVE
	Z6=Z62
	IF (FLAG.GE.1000) CALL TEST4(Z6,FLAG,TDIR,MOVE1,MOVNUM,BEG,
	1 END,G2,BAKADR)
	IF (Z6 .EQ. END) GOTO 800 	! IF Z6=END, WE'RE DONE

C DOMORE:
600	MOVNUM=MOVNUM-1
	IF (MOVNUM .EQ. 0) GOTO 700	! REACHED MAX MOVES, TRY NEW DIRECTION
C		STRGHT,	CHKNXT
	GOTO	(300,	1300), BAKADR	! CONTINUE, IN SAME MANNER

C TRYDIR::
700	DIR3=-DIR3			! NEGATE CURRENT DIRECTION
	TDIR=-TDIR
	IF (TDIR .EQ. DIR) GOTO  1200	! GIVE UP IF BACK TO START
	MOVNUM=MAXMVE			! ELSE, TRY AGAIN
	BACKUP=1
	Z6=BEG
	GOTO 100

C SUCCES:				SUCCESS, RETURN
800	PATH=MOVE1
	SUCCES=SUCCES+1
	FLAG=1
	RETURN

C FOLSHR:				FOLLOW THE SHORE
900	MOV1=ICORR(MOOVE-DIR3)		! TRY AGAIN
	Z62=Z6+IARROW(MOV1+1)
	AB=EMAP(Z62)
	IF (COMPAR(AB,Z62,OKVECT).EQ.1) MOV1=MOOVE	! ???
C STFOL:
1000	DO 1100 IVAR= MOV1,MOV1+7*TDIR,TDIR
	MOOVE=ICORR(IVAR)
	Z62=Z6+IARROW(MOOVE+1)
	IF (ORDER(Z62) .NE. 0) GOTO 1100
	AB=EMAP(Z62)
	IF (COMPAR(AB,Z62,OKVECT).EQ.0) GOTO 1100
C OKSET2:
	BAKADR=2
	GOTO 500
1100	CONTINUE

C FAILUR:
1200	PATH=MOV(BEG,END)
	FAILUR=FAILUR+1
	FLAG=0
	RETURN

C CHKNXT:
1300	T1=MOV(Z6,END)
	Z62=Z6+IARROW(T1+1)
	AB=EMAP(Z62)
	IF (COMPAR(AB,Z62,OKVECT).EQ.0) GOTO 900
	DO 1400 IVAR=BACKUP,1,-1
	IF (Z6 .EQ. G2(IVAR)) GOTO 900
1400	CONTINUE
	G2(BACKUP)=Z6
	BACKUP=BACKUP+1
	IF (BACKUP .LE. 100) GOTO 300
	GOTO 700
C
	END
C
	FUNCTION COMPAR(AB,Z62,OKVECT)
C
C USED BY PATH, CHECKS IF AB OR LOCATION Z62 IS A TYPE CONTAINED IN OKVECT
C 
	IMPLICIT INTEGER(A-Z)
	BYTE OKVECT(5),AB
	BYTE OMAP(6000)
	COMMON/OMAP/OMAP
C
	COMPAR = 1
	IF (AB .EQ. OKVECT(1)) RETURN
	IF (OMAP(Z62) .EQ. OKVECT(1)) RETURN
	IF (AB .EQ. OKVECT(2)) RETURN
	IF (AB .EQ. OKVECT(3)) RETURN
	IF (AB .EQ. OKVECT(4)) RETURN
	IF (AB .EQ. OKVECT(5)) RETURN
	COMPAR = 0
	RETURN
	END

	SUBROUTINE TEST4(Z6,FLAG,DIR,MOVE1,MOVNUM,BEG,END,AG2,FLAG2)
C
C TEST SUBROUTINE FOR PATH, DISPLAYS CURRENT PATH PROGRESS
C
	INCLUDE 'EMPIRE.INC/NOLIST'
	INTEGER AG2(100)
C 
	IF (GIGI.NE.0) CALL REGIS_ON
	CALL CURSOR(Z6-IADJST)
	IF (GIGI.NE.0) CALL CENTER_CURSOR
	IF (FLAG.NE.1001) E=GETCHX()	!WAIT FOR CHAR IF TRACE MODE
	IF (GIGI.NE.0) CALL REGIS_OFF
 
	IX='G'				!DISPLAY CURRENT MOVE ON MAP
	IF (FLAG2.EQ.1) TYPE 999,IX
	IX='H'
	IF (FLAG2.EQ.2) TYPE 999,IX
	IF (FLAG.EQ.1001) RETURN
C					PROCESS THIS CHAR
	IF (E.EQ.' ') RETURN		!SPACE, CONTINUE
	IF (E.EQ.'G') GOTO 100		!G, DISPLAY G2 ARRAY
 
	CALL LIB$SET_CURSOR(1,1)	!IF NOT SPACE OR "G", SHOW PATH VARIABLES
	TYPE 998,Z6,MOVE1,MOVNUM
999	FORMAT('+',A1$)
998	FORMAT(' Z6:',I4,' MOVE1:',I1,' MOVNUM:',I3)
	CALL LIB$SET_CURSOR(2,1)
	TYPE 997,BEG,END,IADJST,DIR,FLAG
997	FORMAT(' BEG:'I4' END:'I4' IADJST:'I4' TDIR:'I2' FLAG:'I4)
 
	IF (FLAG2 .EQ. 1) TYPE 996
996	FORMAT(' FLAG2: MOVE ')
	IF (FLAG2 .EQ. 2) TYPE 995
995	FORMAT(' FLAG2: SHORE')
	RETURN
 
100	CALL LIB$SET_CURSOR(1,1)
	TYPE 994,AG2
994	FORMAT(1X,16I5)
	RETURN
	END

	SUBROUTINE SHIPMV (ACRALOC,ACRAHIT,NUM,OWN1,HITMAX)
C
C THIS SUBROUTINE HANDLES PLAYER'S SHIP MOVES
C
	INCLUDE 'EMPIRE.INC/NOLIST'
C 
	DO 2600 Y=1,LIMIT(NUM)
	LOC=ACRALOC+Y
	IF (MOVEDFLAG(LOC).NE.0) GOTO 2600
	Z6=RLMAP(LOC)
	IF (Z6.EQ.0) GOTO 2600
	IF ((MODE.EQ.1).AND.(POSCHK(Z6,OWN1).EQ.0)) GOTO 2600
	MOVEDFLAG(LOC)=1

	DO 2500 ITURN=1,2
	LOC=ACRALOC+Y
	Z6=RLMAP(LOC)
	IF (Z6.EQ.0) GOTO 2600
	JIT=ACRAHIT+Y
	H1=J1TS(JIT)
	IF ((ITURN.EQ.2).AND.(H1.LE.HITMAX/2)) GOTO 2600
	Z7=Z6
	AB=RMAP(Z6)
C 
C CHECK TO SEE IF SHIP WAS DESTROYED (IF THE CITY IT WAS IN WAS CAPTURED).
C
	IF ((AB.EQ.OWN1).OR.(AB.EQ.'O')) GOTO 100
	CALL HEAD(OWN1,Y,LOC,Z6,H1)
	CALL STROUT(' Destroyed.',1)
	GOTO 1500
C 
100	IF ((ITURN.EQ.1).AND.(AB.EQ.'O')) H1=H1+1	!REPAIR IF IN PORT
	IF (H1.GT.HITMAX) H1=HITMAX
	CALL STASIS(Z6,LOC)
200	MYCOD=MYCODE(LOC)			!GET MY FUNCTION CODE
	IF (MYCOD.EQ.0) GOTO 900		!IF ZERO, SKIP AHEAD
	IF ((MYCOD.NE.9997).OR.((OWN1.NE.'T').AND.(OWN1.NE.'C')))
	1	GOTO 500		!CHECK Transports and Carriers
	N=0				!FOR OVERLOADING
	NT=2
	IA=1
	IB=LIMIT(1)
	IF (OWN1.NE.'C') GOTO 300
	NT=1
	IA=501
	IB=LIMIT(2)+500
300	DO 400 J=IA,IB
400	IF (RLMAP(J).EQ.Z6) N=N+1
	IF (N.LT.NT*H1) GOTO 500
	MYCODE(LOC)=0
	GOTO 900

500	IF ((MYCOD.LT.101).OR.(MYCOD.GT.6108)) GOTO 1100
	IF (MYCOD.LE.6000) GOTO 600
	IF (MYCOD.GT.6100) GOTO 700
	GOTO 1100

600	Z6=Z6+IARROW(MOV(Z6,MYCOD)+1)		!DESTINATION MOVE
	GOTO 800

700	Z6=Z6+IARROW(MYCOD-6100+1)		!DIRECTIONAL MOVE
800	AD=RMAP(Z6)
	IF (((AD.EQ.'.').OR.(AD.EQ.'O')).AND.(ORDER(Z6).EQ.0)) GOTO 1100
	Z6=Z7
900	CALL SECTOR(PMAP(1))
1000	CALL LTR(Z6,ITURN)
	CALL MVE(OWN1,MDATE,Y,LOC,JIT,Z6,Z7,DISAS,Z6-IADJST)
	IF (DISAS.EQ.-2) GOTO 200
C 
C MOVE EVALUATION. Z6=TO, Z7=FROM, CHECK OUT NEW LOCATION
C
1100	IF (OMAP(Z7).NE.'*') RMAP(Z7)=OMAP(Z7)	!REMOVE UNIT FROM MAP
	AC=RMAP(Z6)
	AO=OMAP(Z6)
	IF (Z6.EQ.MYCODE(LOC)) MYCODE(LOC)=0	!ARRIVED AT DESTINATION
	IF (AC.NE.'O') GOTO 1200		!IS IT OUR CITY?
	CALL LIB$SET_CURSOR(3,1)		!DOCKED IN CITY
	CALL STROUT(' Ship is docked.',1)
	GOTO 1800

1200	IF (AO.EQ.'.') GOTO 1600 		!IF SEA, SKIP AHEAD
1300	IF (.NOT. FATAL(4)) GOTO 2700
	IF ((AC.NE.'+').AND.(AO.NE.'*')) GOTO 2400 !CHECK FOR ENEMY TO FIGHT
1400	CALL LIB$SET_CURSOR(2,1)
	CALL IDEN(OWN1)
	CALL STROUT('broke up on the shore.',1)
	GOTO 1500

1600	IF (AC.NE.'.') GOTO 2400		!
	RMAP(Z6)=OWN1				!NORMAL MOVE
1800	RLMAP(LOC)=Z6
	J1TS(JIT)=H1

1900	IF ((OWN1.NE.'T').AND.(OWN1.NE.'C')) GOTO 2500
	N=0			!IF WE'RE CARRING SOMETHING, BRING IT ALONG
	IA=0			!SET UP FOR TRANSPORT
	IB=LIMIT(1)
	NT=2
	IF (OWN1.NE.'C') GOTO 2000
	IA=500			!SET UP FOR CARRIER
	IB=LIMIT(2)
	NT=1
2000	DO 2300 I=IA+1,IA+IB		!FIND PIECES AND MOVE THEM
	IF (RLMAP(I).NE.Z7) GOTO 2300
	IF (N+1.GT.NT*H1) GOTO 2050
	RLMAP(I)=Z6
	N=N+1
	GOTO 2300
2050	IF (RMAP(Z7).EQ.'O') GOTO 2300
	RLMAP(I)=0
	CALL LIB$SET_CURSOR(2,1)
	IF (OWN1.EQ.'C') GOTO 2100
	CALL STROUT('Army #',0)
	GOTO 2200
2100	CALL STROUT('Fighter #',0)
2200	CALL DECPRT(I-IA)
	CALL STROUT(' was sunk.',1)
2300	CONTINUE
	GOTO 2500

2400	IF ((AC.GE.'A').AND.(AC.LE.'T')) THEN
		 IF (.NOT.FATAL(2)) GOTO 2700
		ENDIF
	H2=30				!GOING TO FIGHT ANOTHER UNIT
	OWN2=AC
	CALL FIND(OWN2,Z6,Z8,H2)
	CALL FGHT(Z6,H1,H2,OWN1,OWN2)
	CALL FIND(OWN2,Z6,Z8,H2)
	IF (H1.LE.0) GOTO 1500
	RMAP(Z6)=OWN1			!PUT US ON THE MAP
	IF ((OWN2.GE.'a').AND.(OWN2.LE.'t')) CALL SONAR(Z6)
	IF (AO.EQ.'.') GOTO 1800
	RMAP(Z6)=AO			!WON THE BATTLE, BUT....
	IF ((OWN2.GE.'a').AND.(OWN2.LE.'t')) CALL SONAR(Z6)
	CALL LIB$SET_CURSOR(2,1)
	CALL STROUT('Your ship successfully clears the enemy from the beach
	1 before, CRUNCH!, grounding itself.',1)

1500	RLMAP(LOC)=0			!KILL MY UNIT
	MYCODE(LOC)=0
	CALL SENSOR(Z6)
	H1=0
	GOTO 1900

2500	CALL SENSOR(Z6)
2600	CONTINUE
	RETURN
C
C RECOVER FROM FATAL MOVES
2700	Z6=Z7			!RESTORE OLD LOCATION
	RMAP(Z6)=AB		!RESTORE MAP
	GOTO 900		!TRY AGAIN

	END

	SUBROUTINE ARMYMV
C
C THIS SUBROUTINE HANDLES PLAYER'S ARMY MOVES
C 
	INCLUDE 'EMPIRE.INC/NOLIST'
	LOGICAL FATAL
C 
	ITURN=1
	DO 2700 Y=1,LIMIT(1)
	IF (MOVEDFLAG(Y).NE.0) GOTO 2700
	Z6=RLMAP(Y)
	IF (Z6.EQ.0) GOTO 2700
	MYCOD=MYCODE(Y)
	IF ((MODE.EQ.1).AND.(POSCHK(Z6,'A').EQ.0)) GOTO 2700
	MOVEDFLAG(Y)=1
	Z7=Z6
	AB=RMAP(Z6)
	IF ((AB.EQ.'A').OR.(AB.EQ.'T').OR.(AB.EQ.'O')) GOTO 200
100	CALL LIB$SET_CURSOR(3,1)
	CALL STROUT('Army #',10)
	CALL DECPRT(Y)
	CALL STROUT(' destroyed.',1)
	GOTO 2500
C 
200	IF (AB.NE.'T') GOTO 400

	DO 300 I=1,8
	IF (RMAP(Z6+IARROW(I+1)).EQ.'T') GOTO 400
300	IF (OMAP(Z6+IARROW(I+1)).NE.'.') GOTO 400  !DON'T ASK IF NOWHERE TO GO
	GOTO 2700
 
400	IF (MYCOD.EQ.0) GOTO 1000
	IF (MYCOD.NE.100) GOTO 500
	Z6=Z6+IARROW(JIGGLE(Z6,Y)+1)		! DO RANDOM MOVE
	GOTO 1200
500	CALL STASIS(Z6,Y)			! WAKE UP IF NEAR ENEMY
600	MYCOD=MYCODE(Y)
	IF (MYCOD.EQ.0) GOTO 1000
	IF ((MYCOD.LT.100).OR.(MYCOD.GT.6108)) GOTO 1200
	IF (MYCOD.GT.6100) GOTO 800
	IF (MYCOD.LE.6000) GOTO 700
	GOTO 1200
700	Z6=Z6+IARROW(MOV(Z6,MYCOD)+1)		! DO A MOVE TOWARD A LOCATION
	GOTO 900
800	Z6=Z6+IARROW(MYCOD-6100+1)		! DO DIRECTION MOVES
900	AD=RMAP(Z6)
	IF (((AD.EQ.'+').OR.(AD.EQ.'T')).AND.(ORDER(Z6).EQ.0)) GOTO 1200
	Z6=Z7
1000	CALL SECTOR(PMAP(1))
	CALL LTR(Z6,ITURN)
1100	CALL MVE('A',MDATE,Y,Y,1,Z6,Z7,DISAS,Z6-IADJST)
	IF (DISAS.EQ.-2) GOTO 600		!JUST PUT INTO STASIS
C 
C MOVE EVALUATION, Z6=TO, Z7=FROM, CHECK OUT NEW LOCATION
C
1200	IF ((RMAP(Z7).NE.'T').AND.(OMAP(Z7).NE.'*')) RMAP(Z7)=OMAP(Z7)
	IF (Z6.EQ.MYCODE(Y)) MYCODE(Y)=0
	AC=RMAP(Z6)
	AO=OMAP(Z6)
	IF (AC.EQ.'T') GOTO 1400		!GETTING ON A TRANSPORT?
	IF ((RMAP(Z7).NE.'T').OR.(AO.NE.'.')) GOTO 1300
	IF (.NOT. FATAL(1)) GOTO 2800		!CANNOT ATTACK ON TRANSPORTS,ASK
	CALL LIB$SET_CURSOR(2,1)
	CALL STROUT('You are incapable of attack while
	1 on a transport.',1)
	CALL STROUT('Your army jumped into the briny and drowned.',1)
	GOTO 2500

1300	IF (AO.NE.'.') GOTO 1600		!MAKE SURE NOT SEA
	IF (.NOT. FATAL(1)) GOTO 2800		!ASK ABOUT DROWNING
	IF (AC.NE.'.') GOTO 1800
	CALL LIB$SET_CURSOR(3,1)
	CALL STROUT('Your army marched dutifully into the
	1 sea and drowned.',1)
	GOTO 2500

1400	H1=30					!CHECK IF ROOM ON TRANSPORT
	CALL FIND('T',Z6,Z8,H1)
	N=0
	DO 1500 I=1,LIMIT(1)
	IF (RLMAP(I).NE.Z6) GOTO 1500
	IF (I.EQ.Y) GOTO 1500	!DONT COUNT OURSELF
	N=N+1
1500	CONTINUE
	IF (N.LT.H1*2) GOTO 1700
	IF (.NOT. FATAL(6)) GOTO 2800
	IF (MYCODE(Y).GT.50) MYCODE(Y)=0
	GOTO 1700

1600	IF (AC.NE.'+') GOTO 1800		!CHECK IF CLEAR
	RMAP(Z6)='A'				!PUT ARMY ON THE MAP
1700	RLMAP(Y)=Z6				!RECORD NEW LOCATION
	GOTO 2600

C  WE'RE ATTACKING SOMETHING
1800	H1=1					!ARMIES HAVE ONE HIT
	IF (OMAP(Z6).NE.'*') GOTO 2400
	DO 2300 IY=1,70				!IT'S A CITY, FIND WHO OWNS IT
	IF (X(IY).NE.Z6) GOTO 2300
	IF (OWNER(IY).NE.1) GOTO 1900
	DO 1850 JY=1,LIMIT(5)
	IF (Z6.EQ.RLMAP(ITT+JY)) GOTO 1400
1850	CONTINUE
	IF (.NOT. FATAL(5)) GOTO 2800		!ASK ABOUT FATAL MOVE
	RMAP(Z6)='O'
	CALL LIB$SET_CURSOR(2,1)
	CALL STROUT('BASTARDO! You attacked your own city!',1)
	CALL STROUT('Your impertinent attacking army was liquidated.',1)
	GOTO 2500

1900	IF (RND(100).LT.50) GOTO 2000
	CALL LIB$SET_CURSOR(3,1)
	CALL STROUT('The scum defending the city has crushed
	1 your attacking blitzkrieger!',1)
	GOTO 2300

2000	CALL SECTOR(PMAP(1))
	CALL LIB$SET_CURSOR(2,1)
	CALL STROUT('City #',10)
	CALL DECPRT(IY)
	CALL STROUT(' has been subjugated!',10)
	CALL STROUT('The army has been dispersed to enforce
	1 control.',1)
	CALL STROUT('What are your production demands for this city?',3)
	RMAP(Z6)='O'
	CALL SENSOR(Z6)
	IF (GIGI.NE.0) CALL REGIS_ON
	CALL CURSOR(Z6-IADJST)
	IF (GIGI.NE.0) CALL CENTER_CURSOR
	PHASE(IY)=0
	FOUND(IY)=10000
	CALL PHASIN(IY,E)
	IF (GIGI.NE.0) CALL REGIS_OFF
	CALL LIB$SET_CURSOR(3,49)
	TYPE 999,E
999	FORMAT('+',A1,$)
	IF (OWNER(IY).NE.2) GOTO 2200		!IF ENEMY OWNED IT, TELL HIM
	CALL SONAR(Z6)
	DO 2100 I=1,70
	IF (TARGET(I).EQ.Z6) GOTO 2200
	IF (TARGET(I).NE.0) GOTO 2100
	TARGET(I)=Z6
	GOTO 2200
2100	CONTINUE
2200	OWNER(IY)=1

2300	CONTINUE
	GOTO 2500

C    ATTACKING ANOTHER UNIT
2400	IF ((AC.GE.'A').AND.(AC.LE.'T')) THEN
		IF (.NOT.FATAL(2)) GOTO 2800
		ENDIF
	OWN1='A'
	OWN2=AC
	H1=1
	H2=30
	CALL FIND(OWN2,Z6,Z8,H2)
	CALL FGHT(Z6,H1,H2,OWN1,OWN2)
	CALL FIND(OWN2,Z6,Z8,H2)
	IF (H1.LE.0) GOTO 2500		! DID I LOSE?, YES, WIPE UP
	RMAP(Z6)='A'
	IF ((OWN2.GE.'a').AND.(OWN2.LE.'t')) CALL SONAR(Z6)
	IF (AO.EQ.'+') GOTO 1700
	RMAP(Z6)=AO
	IF ((OWN2.GE.'a').AND.(OWN2.LE.'t')) CALL SONAR(Z6)
	CALL LIB$SET_CURSOR(2,1)
	CALL STROUT('Your army regretfully drowns after its successful
	1 assault',1)

2500	RLMAP(Y)=0			!"KILL" MY ARMY
	MYCODE(Y)=0
2600	CALL SENSOR(Z6)
2700	CONTINUE
	RETURN
C
C RECOVER FROM FATAL MOVE, AND TRY AGAIN
C
2800	Z6=Z7				! GO BACK TO OLD LOCATION
	RMAP(Z6)=AB			! CHANGE IT BACK TO PREVIOUS
	GOTO 1000
	END

	LOGICAL FUNCTION FATAL(DUMMY)
C
C ASK PLAYER IF WANTS TO RECONSIDER
C
	IMPLICIT INTEGER(A-Z)
	BYTE YES(2)
	DATA YES/'Y','y'/

	CALL LIB$SET_CURSOR(2,1)
	GOTO (100,200,300,400,500,600) DUMMY
100	CALL STROUT('The troops cannot swim too well, Sir!
	1 Are you sure you want to GOTO sea?',13)
	GOTO 700
200	CALL STROUT('SIR! Those are OUR men! Do you really want to attack
	1 them?',13)
	GOTO 700
300	CALL STROUT('That''s NEVER worked before, Sir!  Are sure you want
	1 to try?',13)
	GOTO 700
400	CALL STROUT('Ships need SEA to float, Sir! Do you really want
	1 go on shore?',13)
	GOTO 700
500	CALL STROUT('That''s OUR city, Sir!  Do you really want to attack
	1 the garrison?',13)
	GOTO 700
600	CALL STROUT('Sorry Sir, there is no room left on the transport.
	1  Do you insist?',13)

700	E=GETCHX()
	CALL LIB$ERASE_LINE(2,1)
	IF (E.EQ.YES(1) .OR. E.EQ.YES(2)) THEN 
		FATAL=.TRUE.
	   ELSE	
		FATAL=.FALSE.
	   ENDIF
	RETURN
	END

	SUBROUTINE FIGHMV
C
C THIS SUBROUTINE HANDLES PLAYER'S FIGHTER MOVES
C
	INCLUDE 'EMPIRE.INC/NOLIST'
	LOGICAL FATAL
C 
	DO 2100 Y=1,LIMIT(2)
	LOC=500+Y
	IF (MOVEDFLAG(LOC).NE.0) GOTO 2100
	Z6=RLMAP(LOC)
	IF (Z6.EQ.0) GOTO 2100
	IF ((MODE.EQ.1).AND.(POSCHK(Z6,'F').EQ.0)) GOTO 2100
	MOVEDFLAG(LOC)=1
	Z3=MIN(RANGE(Y),4)
	IF (Z3.EQ.0) Z3=4

	DO 1900 ITURN=1,Z3
	LOC=500+Y
	Z6=RLMAP(LOC)
	IF (Z6.EQ.0) GOTO 2100
	AB=RMAP(Z6)
C 
C NOW CHECK TO SEE IF FIGHTER IS IN A CITY, IF IT IS CHANGE THE
C STASIS NUMBER OF THE FIGHTER TO THAT SPECIFIED BY FIPATH(I)
C
50	IF (AB.NE.'O') GOTO 300		!IF FIGHTER NOT IN CITY
	DO 100 I=1,70
100	IF (X(I).EQ.Z6) GOTO 200		!FIND CITY AT Z6
200	IF (FIPATH(I).NE.0) MYCODE(LOC)=FIPATH(I)!CHANGE STASIS OF FIGHTER
C 
C CHECK FOR FIGHTERS DESTROYED ALONG WITH CARRIER OR CITY
C
300	IF ((AB.EQ.'C').OR.(AB.EQ.'F').OR.(AB.EQ.'O')) GOTO 400
	CALL LIB$SET_CURSOR(3,1)
	CALL STROUT('Fighter #',0)
	CALL DECPRT(Y)
	CALL STROUT(' destroyed.',1)
	GOTO 1700
400	Z7=Z6
	CALL STASIS(Z6,LOC)
500	IF (RANGE(Y).NE.0) GOTO 600		!CHECK FOR FUEL
	CALL HEAD('F',Y,LOC,Z6,1)
	CALL LIB$SET_CURSOR(3,1)
	CALL STROUT('Ran out of fuel and crashed.',1)
	IF ((AB.NE.'C').AND.(OMAP(Z6).NE.'*')) RMAP(Z6)=OMAP(Z6)
	GOTO 1700

600	MYCOD=MYCODE(LOC)			!GET MY FUNCTION CODE
	IF (MYCOD.EQ.0) GOTO 1100		!NONE, SKIP AHEAD
	IF ((MYCOD.LT.101).OR.(MYCOD.GT.6108)) GOTO 1300
	IF (MYCOD.LE.6000) GOTO 700
	IF (MYCOD.GT.6100) GOTO 800
	GOTO 1300

700	DIR=MOV(Z6,MYCOD)
	Z6=Z6+IARROW(DIR+1)		!DESTINATION FUNCTION
	IF ((RANGE(Y).EQ.10).AND.(IDIST(Z6,MYCOD).LE.10)) GOTO 902
	GOTO 900

800	Z6=Z6+IARROW(MYCOD-6100+1)		!DIRECTIONAL FUNCTIONS
900	IF (RANGE(Y).EQ.10) GOTO 1000
902	IF (ORDER(Z6).NE.0) GOTO 1000
	AD=RMAP(Z6)				!CHECK NEW LOCATION
	IF ((AD.EQ.'C').OR.(AD.EQ.'O')) GOTO 1300
	IF ((AD.EQ.'+').OR.(AD.EQ.'.')) GOTO 1300
	IF (MYCOD.GT.6100) GOTO 1000
	IF ((AD.LT.'A').OR.(AD.GT.'T')) GOTO 1000
	IF (ORDER(Z6+IARROW(DIR+1)).NE.0) GOTO 1000
	AC=RMAP(Z6+IARROW(DIR+1))
	IF ((AC.NE.'C').AND.(AC.NE.'O').AND.(AC.NE.'+').AND.(AC.NE.'.'))
	1 GOTO 1000
	Z6=Z7+IARROW(ICORR(DIR+1)+1)
	IF (ORDER(Z6).NE.0) GOTO 950
	IF ((RMAP(Z6).EQ.'+').OR.(RMAP(Z6).EQ.'.')) GOTO 1300
950	Z6=Z7+IARROW(ICORR(DIR-1)+1)
	IF (ORDER(Z6).NE.0) GOTO 1000
	IF ((RMAP(Z6).EQ.'+').OR.(RMAP(Z6).EQ.'.')) GOTO 1300
1000	Z6=Z7
1100	CALL SECTOR(PMAP(1))
	CALL LTR(Z6,ITURN)
1200	CALL MVE('F',MDATE,Y,LOC,1,Z6,Z7,DISAS,Z6-IADJST)
	IF (DISAS.EQ.-2) GOTO 50
C 
C MOVE EVALUATION
C 
1300	AC=RMAP(Z6)
	AO=OMAP(Z6)
	IF (Z6.EQ.MYCODE(LOC)) MYCODE(LOC)=0	!ARRIVED AT DESTINATION
	IF ((AC.NE.'O').AND.(AC.NE.'C')) RANGE(Y)=RANGE(Y)-1
	IF (Z7.EQ.Z6) GOTO 2000		!DIDNT GO ANYWHERE, END MOVE
	IF ((AB.NE.'C').AND.(OMAP(Z7).NE.'*')) RMAP(Z7)=OMAP(Z7) !CHANGE PREV LOC
	IF (AO.EQ.'*') GOTO 1400	!CHECK ON CITIES
	IF (AC.EQ.'C') GOTO 1500	!LANDING ON A CARRIER
	IF ((AC.NE.'.').AND.(AC.NE.'+')) GOTO 1800 !ATTACK ANY OTHER UNITS

	RMAP(Z6)='F'			!NORMAL MOVE
	RLMAP(LOC)=Z6
	GOTO 1900

1400	IF (AC.NE.'O') GOTO 1600	! IS IT MY CITY?
1500	CALL LIB$SET_CURSOR(3,1)	!LANDED IN A CITY OR CARRIER
	IF (MYCODE(LOC).EQ.0) CALL STROUT('Landing confirmed.',1)
	MYCODE(LOC)=0			!ZERO MY FUNCTION
	RLMAP(LOC)=Z6
	RANGE(Y)=20
	GOTO 2000

1600	IF (.NOT.FATAL(3)) GOTO 2200	!ASK ABOUT FLYING OVER ENEMY CITY
	CALL LIB$SET_CURSOR(3,1)
	CALL STROUT('Fighter shot down.',1)
1700	RLMAP(LOC)=0
	GOTO 2000

C ATTACKING A UNIT
1800	IF ((AC.GE.'A').AND.(AC.LE.'T')) THEN
		IF (.NOT.FATAL(2)) GOTO 2200
		ENDIF
	H1=1
	OWN1='F'
	OWN2=AC
	H2=30
	CALL FIND(OWN2,Z6,Z8,H2)
	CALL FGHT(Z6,H1,H2,OWN1,OWN2)
	CALL FIND(OWN2,Z6,Z8,H2)
	IF (H1.LE.0) GOTO 1700
	RMAP(Z6)='F'
	RLMAP(LOC)=Z6
	IF ((OWN2.GE.'a').AND.(OWN2.LE.'t')) CALL SONAR(Z6)
1900	CALL SENSOR(Z6)			!BOTTOM OF PER TURN LOOP

2000	CALL SENSOR(Z6)			!BOTTOM OF PER UNIT LOOP
2100	CONTINUE
	RETURN
C
C RECOVER FROM FATAL MOVE
C
2200	Z6=Z7				!GO BACK TO OLD LOCATION
	RMAP(Z6)=AB			!RESTORE MAP TO PREVIOUS
	RANGE(Y)=RANGE(Y)+1		!GET YOUR FUEL BACK
	GOTO 1200
	END

	SUBROUTINE ARMYEN
C 
C THIS SUBROUTINE HANDLES ENEMY ARMY MOVES
C 
	INCLUDE 'EMPIRE.INC/NOLIST'
C
	MONKEY=0
	NUMBER(1)=0
	IF (CODER.EQ.1) TYPE 999
999	FORMAT(' ARMY CODES')
C 
C START ARMY MOVE LOOP
C
	DO 4200 Y=1,LIMIT(9)
	Z6=RLMAP(IAR2+Y)
	IF (Z6.EQ.0) GOTO 4200
	IF (CODER.NE.1) GOTO 200
	CALL LIB$SET_CURSOR(1,50)
	CALL DECPRT(Y)
	CALL LIB$SET_CURSOR(1,60)
	CALL DECPRT(NPATH)
	NPATH=0
200	Z7=Z6
	MONKEY=Y
	DIR=MOD(Y,2)*2-1		!SET DIR TO 1 OR -1
	P=0
	AB=RMAP(Z6)		!SET AB=WHAT IS SHOWING WHERE THE ARMY IS
	AC=0
	IF ((AB.NE.'a').AND.(AB.NE.'t').AND.(AB.NE.'X')) GOTO 3700
C 
C AGE AR2S
C
	IF ((AR2S(Y).LE.100).OR.(AR2S(Y).GT.1000)) AR2S(Y)=AR2S(Y)-1
	IF ((AR2S(Y).LT.0).OR.(AR2S(Y).EQ.1000)) AR2S(Y)=0
	IF (AB.EQ.'a') GOTO 300
	IF (AB.EQ.'X') THEN
	  DO 250 I=1,LIMIT(13)
	  IF (RLMAP(ITT2+I).EQ.Z6) GOTO 270
250	  CONTINUE
	  GOTO 300
	ENDIF
270	IF (ARMJMP(Z6,AR2S(Y)).EQ.0) GOTO 4150
C 
C MOVE SELECTION
C
300	IFO=CODEFU(Y)
	ILA=CODELA(Y)
C 
C IF A PRIORITY MOVE EXISTS, PICK IT AND DON'T BOTHER SLUGGING
C THHROUGH CODE SELECTION AND MOVE SELECTION
C
	MOVE1=PRIORI(Z6,IFO,ILA,DIR,AB)
	IF (MOVE1.NE.0) GOTO 2400
C 
CIFO=0: MOVE IN CERTAIN DIRECTION, OR FOLLOW SHORE
CIFO=1: MOVE TOWARDS TARGET CITY
CIFO=2: MOVE TOWARDS AN ENEMY ARMY
CIFO=3: MOVE TOWARDS A TROOP TRANSPORT
C 
	GOTO (400,500,600,700) IFO+1
C 
400	GOTO 800		!LOOK FOR TARGETS, LOCI, TT'S
C 
500	IF (RMAP(ILA).EQ.'X') GOTO 800	!CITY HAS BEEN CAPTURED
	GOTO 1600			!MOVE
C 
600	IF (ILA.EQ.Z6) GOTO 800		!ARRIVED AT ENEMY CONCENTRATION
	IF (RND(100).LE.12) GOTO 1050	!REEVALUTE DESTINATION EVERY SO OFTEN
	GOTO 1600			!MOVE
C 
700	IF (ILA.GT.100) GOTO 800	!INVALID VALUE FOR ILA
	IF (CODEFU(ILA+ITT2-1500).GE.6) GOTO 1200
	IF (RLMAP(ILA+ITT2).EQ.0) GOTO 1200			!TT SUNK
	IF (J1TS(ILA+ITT2H).LT.3) GOTO 1200		!TT DAMAGED
	GOTO 1700
C 
C SELECT A NEW CODE
C
800	CONTINUE
C 
C LOOK FOR TARGET CITY
C
	IF (NUMBER(10).EQ.0) GOTO 1050
	IA=RND(NUMBER(10))+1
	IB=IA+NUMBER(10)-1
	DO 1000 IC=IA,IB
	I=IC
	IF (I.GT.NUMBER(10)) I=I-NUMBER(10)
	IF (TARGET(I).EQ.0) GOTO 1000
	IF (IDIST(Z6,TARGET(I)).GT.14) GOTO 1000
	MOVE=PATH(Z6,TARGET(I),DIR,OKB,FLAG)
	NPATH=NPATH+1
	IF (FLAG.EQ.0) GOTO 1000		!CAN'T GET TO IT
	IFO=1
	ILA=TARGET(I)
	GOTO 1800				!MOVE
1000	CONTINUE
C 
C LOOK FOR AN ARMY THAT IS ON YOUR CONTINENT
C
1050	IF (LOCI(10,11).NE.0) LOCI(10,11)=0
	DO 1100 I=1,10
	TEMP=RND(9)+2				!**
	IF (LOCI(I,TEMP).EQ.0) TEMP=2
	IF (LOCI(I,TEMP).EQ.0) GOTO 1100
	TEMP=LOCI(I,TEMP)
	MOVE=PATH(Z6,TEMP,DIR,OKB,FLAG)
	NPATH=NPATH+1
	IF (FLAG.EQ.0) GOTO 1100
	IFO=2
	ILA=TEMP
	GOTO 1800
1100	CONTINUE
C 
C LOOK FOR TT THAT IS SHORT OF ARMIES
C
1200	IF (AR2S(Y).NE.0) GOTO 1400		!INELIGIBLE TO GET ON A TT
	IA=RND(LIMIT(13))+1			!**
	DO 1300 IC=IA,IA+LIMIT(13)
	I=IC
	IF (I.GT.LIMIT(13)) I=I-LIMIT(13)
	IF (RLMAP(ITT2+I).EQ.0) GOTO 1300		!TT DOESN'T EXIST
	IF (J1TS(ITT2H+I).LT.3) GOTO 1300	!DAMAGED, I.E. UNSUITABLE
	IF (IABS(CODEFU(ITT2+I-1500)).GE.6) GOTO 1300
	IF (IDIST(Z6,RLMAP(ITT2+I)).GT.20) GOTO 1300	!TOO FAR AWAY
	MOVE=PATH(Z6,RLMAP(ITT2+I),DIR,OKB,FLAG)
	NPATH=NPATH+1
	IF (FLAG.EQ.0) GOTO 1300			!CAN'T GET TO IT
	MOVE=MOV(Z6,RLMAP(ITT2+I))
	IFO=3
	ILA=I
	CODELA(ITT2+I-1500)=Y
	GOTO 1800
1300	CONTINUE
C 
C PICK A RANDOM DIRECTION (IFO=0)
C
1400	IF ((IFO.EQ.0).AND.(ILA.NE.0)) GOTO 1500	!IF ALREADY ASS'D DIREC
	IFO=0
	ILA=RND(8)+1				!**
C 
1500	MOVE=ILA
	I1=ICORR(MOVE-DIR*3)
	IF (RMAP(Z6+IARROW(I1+1)).NE.'+') MOVE=I1	!**
	GOTO 1800

1600	MOVE=PATH(Z6,ILA,DIR,OKB,FLAG)
	NPATH=NPATH+1
	IF (FLAG.EQ.0) GOTO 1400
	GOTO 1800

1700	MOVE=PATH(Z6,RLMAP(ILA+ITT2),DIR,OKB,FLAG)
	NPATH=NPATH+1
C 
1800	DO 2300 I=0,7*DIR,DIR
	MOVE1=ICORR(MOVE+I)
	LOC=Z6+IARROW(MOVE1+1)			!**
	AC=RMAP(LOC)
	IF (AC.NE.'t') GOTO 2200
	IF (IFO.EQ.3) IFO=0
	IF (AR2S(Y).NE.0) GOTO 2300
	NUMARM=0
	DO 1900 IZ=ITT2+1,LIMIT(13)+ITT2
1900	IF (RLMAP(IZ).EQ.LOC) GOTO 2000
2000	IF (J1TS(ITT2H-ITT2+IZ).LT.3) GOTO 2300
	DO 2100 IY=IAR2+1,LIMIT(9)+IAR2
	IF (RLMAP(IY).EQ.LOC) NUMARM=NUMARM+1
2100	IF (NUMARM.GE.6) GOTO 2300
	GOTO 2400
2200	IF ((AC.EQ.'+').AND.(ORDER(LOC).EQ.0)) GOTO 2400
2300	CONTINUE
	MOVE1=0
C 
2400	IF (IFO.EQ.0) ILA=IABS(MOVE1)
	CODEFU(Y)=IFO
	CODELA(Y)=ILA
	IF (CODER.EQ.1) TYPE 998,IFO,ILA
998	FORMAT(1X,7I,3X)
	Z6=Z6+IARROW(MOVE1+1)			!**
C 
	AC=RMAP(Z6)
	IF (AB.NE.'t') GOTO 2500
	IF (AC.EQ.'t') GOTO 3600
	CODEFU(Y)=0
	CODELA(Y)=0
	AR2S(Y)=1020
	GOTO 2600
2500	IF (OMAP(Z7).NE.'*') RMAP(Z7)=OMAP(Z7)
	IF (AC.NE.'t') GOTO 2600
	AR2S(Y)=100
	GOTO 3600
2600	IF (AC.EQ.'+') GOTO 3500
	IF ((AC.EQ.'X').OR.(AC.EQ.'.')) GOTO 3700
	IF (OMAP(Z6).NE.'*') GOTO 3400
	IF (RND(100).LT.50) THEN
	ID=10
	DO 2650 I=1,LIMIT(9)
	IF (RLMAP(IAR2+I).EQ.0) GOTO 2650
	IF (I.EQ.Y) GOTO 2650
	IF (CODEFU(I).NE.0) GOTO 2650
	IF (IDIST(RLMAP(IAR2+I),Z6).GE.ID) GOTO 2650
	MOVE=PATH(RLMAP(IAR2+I),Z6,1,OKB,FLAG)
	NPATH=NPATH+1
	IF (FLAG.EQ.0) GOTO 2650		!CAN'T GET TO IT
	ID=IDIST(RLMAP(IAR2+I),Z6)
	IY=I
2650	CONTINUE
	IF (ID.LT.10) THEN
	IFO=1
	ILA=Z6
	ENDIF
	GOTO 3700
	ENDIF

	DO 2700 I=1,70
2700	IF (TARGET(I).EQ.Z6) TARGET(I)=0
	DO 2800 I=1,LIMIT(9)
2800	IF (CODEFU(I).NE.1.OR.CODELA(I).NE.Z6) GOTO 2900
	CODEFU(I)=0
	CODELA(I)=0
2900	DO 3000 I=1,100
3000	IF (X(I).EQ.Z6) GOTO 3100
3100	OWNER(I)=2
	PHASE(I)=0
	IF (((AC.EQ.'O').OR.(AR2S(Y).GT.0)).AND.(EDGER(Z6).LT.8))
	1	PHASE(I)=-1
	IF (AC.NE.'O') GOTO 3200
	CALL LIB$SET_CURSOR(3,1)
	CALL STROUT('City at',10)
	 CALL DECPRT(Z6)
	CALL STROUT(' surrendered to enemy forces.',1)
	RMAP(Z6)='X'
	CALL SENSOR(Z6)
	GOTO 3700
3200	RMAP(Z6)='X'
	GOTO 3700
3300	AR2S(Y)=100
	GOTO 3600
3400	H1=1
	IF (Z7.EQ.Z6) GOTO 3600
997	FORMAT(1H+,/,' ERROR: ATTACKED ',A1,4I,1X)
	P=1
	OWN1='a'
	OWN2=AC
	H2=30
	CALL FIND(OWN2,Z6,Z8,H2)
	CALL FGHT(Z6,H1,H2,OWN1,OWN2)
	CALL FIND(OWN2,Z6,Z8,H2)
	IF (H1.LE.0) GOTO 3700
	RMAP(Z6)=OMAP(Z6)
	IF (RMAP(Z6).EQ.'.') GOTO 3700
3500	RMAP(Z6)='a'
3600	RLMAP(IAR2+Y)=Z6
	IF (P.EQ.1) CALL SENSOR(Z6)
	GOTO 4100
3700	RLMAP(IAR2+Y)=0
	IF (AC.NE.'X') GOTO 3900
	DO 3800 I=1,70
3800	IF (X(I).EQ.Z6) PHASE(I)=0
3900	IF (P.EQ.1) CALL SENSOR(Z6)
	IF (RMAP(Z6).NE.'O') GOTO 4000
	CALL LIB$SET_CURSOR(3,1)
	CALL STROUT('City at',10)
	CALL DECPRT(Z6)
	CALL STROUT(' repelled enemy invasion.',1)
4000	CODEFU(Y)=0
	CODELA(Y)=0
	AR2S(Y)=0
4100	CALL SONAR(Z6)
4150	IF (RLMAP(IAR2+Y).NE.0) NUMBER(1)=NUMBER(1)+1
4200	CONTINUE
	LIMIT(9)=MONKEY
	RETURN
	END

	SUBROUTINE TROOPM
C
C THIS SUBROUTINE HANDLES ENEMY TROOP TRANSPORT MOVES
C 
	INCLUDE 'EMPIRE.INC/NOLIST'
	INTEGER TTTC(-1:20,0:50)
C
	MONKEY=0
	NUMBER(5)=0
	IF (CODER.EQ.5) TYPE 999
999	FORMAT(' TROOP TRANSPORT CODES')
C 
	DO 2300 Y=1,LIMIT(13)
	Z6=RLMAP(ITT2+Y)
	IF (Z6.EQ.0) GOTO 2300
	MONKEY=Y
	DIR=MOD(Y,2)*2-1		!SET DIR TO 1 OR -1 CONSISTENTLY
	AB=RMAP(Z6)
	H1=J1TS(ITT2H+Y)
	IF (AB.EQ.'X') H1=H1+1
	IF (H1.GT.3)    H1=3
C 
C NOW COMPUTE THE NUMBER OF ARMIES ABOARD THE TROOP TRANSPORT
C
	NUMARM=0
	DO 100 I=1,LIMIT(9)
100	IF (Z6.EQ.RLMAP(IAR2+I)) NUMARM=NUMARM+1
	IF (NUMARM.GT.6) NUMARM=6		!MAX # ARMIES = 6
C 
	ORIG=Z6
	DO 2200 ITURN=1,2
	P=0
	Z7=Z6
	AB=RMAP(Z6)
	IF ((ITURN.EQ.2).AND.(H1.LE.1)) GOTO 2300
C
C MOVE SELECTION
C
	IFO=CODEFU(Y+ITT2-1500)
	ILA=CODELA(Y+ITT2-1500)
C 
C 300 IS THE STATEMENT NUMBER WHERE THE IFO AND ILA ARE
C PROCESSED TO COME UP WITH A MOVE, WHICH IS THEN FED THRU MOVCOR
C TO COME UP WITH A FINAL MOVE.
C 
C TAKE CARE OF DAMAGED SHIPS OR JUST REPAIRED SHIPS.
C (DAMAGED SHIPS WILL HAVE AN IFO OF 8)
C 
	IF (H1.LT.3) GOTO 200
	IF (IFO.EQ.8) IFO=0
	GOTO 300
200	IFO=8
	IF (ILA.EQ.0) GOTO 250
	IF (RMAP(ILA).EQ.'X') GOTO 1300
250	ILA=IPORT(Z6)
	GOTO 1300
C 
C IFO=10: MOVE TOWARD UNEXPLORED TERRITORY, LOCATION SPECIFIED BY ILA
C IFO=7: MOVE IN A CONSTANT DIRECTION SPECIFIED BY ILA
C IFO=9: MOVE TOWARD AN UNOWNED CITY (OR ENEMY CITY) SPECIFIED BY ILA
C IFO=0-6: ILA SPECIFIES LOCATION OF WHERE TO MOVE, EITHER
C	AN ARMY PRODUCING CITY OR AN ARMY LOOKING FOR A 't'.
C	IT COULD ALSO BE A DIRECTION. IFO IS THE NUMBER OF ARMIES ON
C	BOARD THE TROOP TRANSPORT.
C 
300	IF (IFO.LT.7) IFO=NUMARM
	IF (NUMARM.EQ.0) IFO=0
	IF ((IFO.EQ.10).AND.(EMAP(ILA).NE.' ')) GOTO 1000
	IF (IFO.EQ.10) GOTO 1300
	IF (IFO.EQ.7) GOTO 1350
	IF (IFO.NE.9) GOTO 500
C 
C IFO=9
C
	DO 400 I=1,70
	IF (TARGET(I).NE.ILA) GOTO 400
	MOVE=0
	IF ((ITURN.EQ.2).AND.(IDIST(Z6,ILA).EQ.1)) GOTO 1600
	GOTO 1300
400	CONTINUE
	IF ((IDIST(Z6,ILA).LT.10).AND.(EDGER(ILA).LT.8).AND.(RND(100).GT.10))
	1 GOTO 1300
C
C	IT SEEMS THAT IT'S TARGET IS NO LONGER ON THE HIT LIST,
C	MEANING IT WAS CAPTURED.
C 
500	IF (IFO.LE.2) GOTO 600
	IF (IFO.EQ.3) THEN
	 IF (RND(100).LT.96) GOTO 600
	ENDIF
	IF (IFO.EQ.4) THEN
	 IF (RND(100).LT.90) GOTO 600
	ENDIF
	GOTO 800			!SELECT A TARGET
C
C SELECT AN ARMY PRODUCING CITY AND MOVE TOWARDS IT.
C PICK THE CLOSEST ONE.
C
600	IF (ILA.EQ.0.OR.ILA.GT.500) GOTO 650
	IF ((CODEFU(ILA).EQ.3).AND.(RLMAP(IAR2+ILA).NE.0)) GOTO 1200
650	AFLAG=0
	ID=35
670	DO 700 I=1,70
	IF ((X(I).EQ.0).OR.(OWNER(I).NE.2)) GOTO 700
	IF (EDGER(X(I)).EQ.0) GOTO 700
	IF ((AFLAG.EQ.0).AND.(PHASE(I).NE.1)) GOTO 700
	IF (IDIST(Z6,X(I)).GE.ID) GOTO 700
	DO 680 J=1,LIMIT(13)
	IF (J.EQ.Y) GOTO 680
	IF (CODELA(J+ITT2-1500).NE.X(I)) GOTO 680
	IF (IDIST(RLMAP(J+ITT2),X(I)).LE.2) GOTO 700
680	CONTINUE
	ID=IDIST(Z6,X(I))
	ILA=X(I)
700	CONTINUE
	IF (ID.NE.35) GOTO 1300
	IF (AFLAG.EQ.1) GOTO 1000
	AFLAG=1
	GOTO 670
C 
C PERFORM TROOP TRANSPORT TO TARGET CITY ASSIGNMENT
C
800	IF (NUMBER(10).EQ.0) GOTO 1000
	TM=0
	DO 820 I=1,LIMIT(13)
	IF (RLMAP(ITT2+I).EQ.0) GOTO 820
	IF (I.EQ.Y) GOTO 810
	IF (CODEFU(ITT2-1500+I).EQ.8) GOTO 820
	IF (CODEFU(ITT2-1500+I).LE.3) GOTO 820
810	TM=TM+1
	IF (CODEFU(ITT2-1500+I).EQ.9) CODEFU(ITT2-1500+I)=0
	TTTC(TM,0)=I
820	CONTINUE
	CM=0
	DO 840 I=1,NUMBER(10)
	IF (TARGET(I).EQ.0) GOTO 840
	ILA=TARGET(I)
	IF (EDGER(ILA).EQ.0) GOTO 840
	CM=CM+1
	TTTC(0,CM)=ILA
	TTTC(-1,CM)=-1
	IF (RMAP(ILA).EQ.'O') TTTC(-1,CM)=1
840	CONTINUE
	DO 850 I=1,TM
	DO 850 J=1,CM
	TTTC(I,J)=IDIST(RLMAP(ITT2+TTTC(I,0)),TTTC(0,J))
850	CONTINUE

	AC='*'
860	MIN=1000
	DO 880 I=1,TM
	IF (TTTC(I,0).EQ.0) GOTO 880
	DO 880 J=1,CM
	IF (EMAP(TTTC(0,J)).NE.AC) GOTO 880
	IF (TTTC(I,J).GE.MIN) GOTO 880
	IF (TTTC(-1,J).EQ.0) THEN
	  DO 870 K=1,CM
	  IF (TTTC(-1,K).EQ.-1) GOTO 880
870	  CONTINUE
	ENDIF
	MOVE=PATH(RLMAP(ITT2+TTTC(I,0)),TTTC(0,J),1,OKC,FLAG)
	IF (FLAG.EQ.0) THEN
	  TTTC(I,J)=1000
	  GOTO 880
	ENDIF
	MIN=TTTC(I,J)
	IR=I
	IC=J
880	CONTINUE
	IF (MIN.NE.1000) THEN  !DON'T CHANGE FUNCTION IF DEST IS <3 FROM OLD?
	  CODEFU(ITT2-1500+TTTC(IR,0))=9
	  CODELA(ITT2-1500+TTTC(IR,0))=TTTC(0,IC)
	  CALL DIST(RLMAP(ITT2+TTTC(IR,0)),TTTC(0,IC))
	  TTTC(IR,0)=0
	  TTTC(IR,IC)=1001
	  TTTC(-1,IC)=0
	  GOTO 860
	ENDIF
	IFO=CODEFU(ITT2-1500+Y)
	ILA=CODELA(ITT2-1500+Y)
	IF (NUMBER(9)+NUMBER(10).LE.37) THEN
	  IF (IFO.EQ.9) GOTO 1500
	  GOTO 1000
	ENDIF
	IF (AC.EQ.'*') THEN
	  AC='O'
	  GOTO 860
	ENDIF
	IF (IFO.EQ.9) GOTO 1500
C 
C MOVE TOWARDS UNKNOWN TERRITORY
C
1000	IFO=10
	ILA=EXPL()
	IF (ILA.EQ.0) GOTO 1100
	CALL DIST(Z6,ILA)
	GOTO 1300
C 
C MOVE IN SPECIFIED DIRECTION (ILA SPECIFIES WHICH)
C
1100	IFO=7
	ILA=RND(8)+1				!**
	GOTO 1400
C 
C NOW PICK A MOVE ACCORDING TO IFO AND ILA
C
1200	MOVE=0
	IF (IDIST(Z6,RLMAP(IAR2+ILA)).EQ.1) GOTO 1600
	MOVE=MOV(Z6,RLMAP(IAR2+ILA))
	GOTO 1500
1300	MOVE=PATH(Z6,ILA,DIR,OKC,FLAG)
	IF (FLAG.EQ.0) GOTO 1100
	GOTO 1500
1350	IF (NUMBER(10).EQ.0) GOTO 1400
	IF (RND(100).LT.40) GOTO 800
1400	MOVE=ILA
1500	AGGR=-NUMARM
	IF ((NUMBER(5).GT.10).AND.(NUMARM.EQ.0)) AGGR=AGGR+2
	EXPLOR=0
	IF (IFO.GT.6.AND.IFO.NE.8) EXPLOR=1
	MOVE=MOVE*DIR
	DEST=-1
	IF ((IFO.EQ.9).OR.(IFO.EQ.10)) DEST=ILA
	MOVE=MOVCOR(IFO,ITURN,Z6,MOVE,H1,AGGR,'t',EXPLOR,DIR,DEST,ORIG,3)
	MOVE=IABS(MOVE)
	IF (IFO.EQ.7) ILA=MOVE
1600	CODEFU(ITT2-1500+Y)=IFO
	CODELA(ITT2-1500+Y)=ILA
	Z6=Z6+IARROW(MOVE+1)			!**
	IF (CODER.EQ.5) TYPE 997, IFO,ILA
997	FORMAT(1X,I)
C 
	IF (OMAP(Z7).NE.'*') RMAP(Z7)=OMAP(Z7)
	IF (RMAP(Z6).EQ.'.') GOTO 1700
	IF (RMAP(Z6).EQ.'X') GOTO 1800
	IF ((RMAP(Z6).EQ.'+').OR.(OMAP(Z6).EQ.'*')) GOTO 1900
	AB=RMAP(Z6)
	IF (CODER.EQ.5) TYPE 996,AB		!FIX THIS CONDITIONAL, KLUDGED
996	FORMAT(' ATTACKING ',A1)
	IF (AB.EQ.'.') GOTO 1700
	P=1
	H2=30
	OWN1='t'
	OWN2=RMAP(Z6)
	CALL FIND(OWN2,Z6,Z8,H2)
	CALL FGHT(Z6,H1,H2,OWN1,OWN2)
	CALL FIND(OWN2,Z6,Z8,H2)
	IF (H1.LE.0) GOTO 1900
	IF (OMAP(Z6).EQ.'+') GOTO 1900
	J1TS(ITT2H+Y)=H1
1700	RMAP(Z6)='t'
1800	RLMAP(ITT2+Y)=Z6
	J1TS(ITT2H+Y)=H1
	IF (ITURN.EQ.1) NUMBER(5)=NUMBER(5)+1
	GOTO 2000
1900	RLMAP(ITT2+Y)=0
	J1TS(ITT2H+Y)=0
2000	N=0
	IF (P.EQ.1) CALL SENSOR(Z6)
	DO 2100 U=IAR2+1,IAR2+LIMIT(9)
	IF (RLMAP(U).NE.Z7) GOTO 2100
	IF (N+1.GT.H1*2) THEN
	 IF (RMAP(Z7).NE.'X') RLMAP(U)=0
	 GOTO 2100
	ENDIF
	N=N+1
	RLMAP(U)=Z6
2100	CONTINUE
	IF (NUMARM.GT.2*H1) NUMARM=2*H1
	CALL SONAR(Z6)
2200	CONTINUE
2300	CONTINUE
	LIMIT(13)=MONKEY
	RETURN
	END

	SUBROUTINE ENEMYM(OWN1,HITMAX,ACRAHIT,ACRALOC,NUM)
C
C THIS SUBROUTINE HANDLES ENEMY SHIP MOVES OTHER THAN T'S AND C'S
C
	INCLUDE 'EMPIRE.INC/NOLIST'
C 
C NSHPRF IS AN ARRAY WHICH IS REFERENCED TO DETERMINE
C WHETHER A CERTAIN SHIP (D=1,S=2,R=3,B=4) WANTS TO ATTACK
C ANOTHER CERTAIN TYPE OF SHIP. 1 MEANS YES, 0 MEANS NO.
C SECOND VARIABLE: 1=D,2=S,3=T,4=R,5=C,6=B
C
	DATA NSHPRF/1,1,1,0,0,0,1,1,1,0,0,0,1,1,1,1,1,0,1,1,1,1,1,1/
C 
CTHE FOLLOWING NUMBERS ARE IFO VARIABLES RELATING TO
C CERTAIN TYPES OF MOVEMENT (CODES)
C 7: RANDOM DIRECTION
C 3: CITY TARGET LOC.
C 4: TT NUMBER ESCORT
C 5: TARGET
C 8: DAMAGED
C 10: LOOK AT UNEXPLORED TERRITORY
C
	IF (NUM.EQ.3) NUMSHP=1
	IF (NUM.EQ.4) NUMSHP=2
	IF (NUM.EQ.6) NUMSHP=3
	IF (NUM.EQ.8) NUMSHP=4
C 
	NUMBER(NUM)=0
	IF (CODER.EQ.NUM) TYPE 999,OWN1
999	FORMAT(1X,A1,' CODES')
	MONKEY=0
C 
	DO 2400 Y=1,LIMIT(NUM+8)
	Z6=RLMAP(Y+ACRALOC)
	IF (Z6.EQ.0) GOTO 2400
	DIR=MOD(Y,2)*2-1
	H1=J1TS(Y+ACRAHIT)
	AB=RMAP(Z6)
	IF (AB.EQ.'X') H1=H1+1
	IF (H1.GT.HITMAX) H1=HITMAX
C 
	ORIG=Z6
	DO 2300 ITURN=1,2
	P='NS'
	IF ((ITURN.EQ.2).AND.(H1.LE.HITMAX/2)) GOTO 2400
	Z7=Z6
C 
C MOVE SELECTION
C
	IFO=CODEFU(Y+ACRALOC-1500)
	ILA=CODELA(Y+ACRALOC-1500)
C
C DOES A NEW CODE NEED TO BE SELECTED? 800:YES, 1600:NO
C
	IF ((IFO.EQ.8).AND.(H1.EQ.HITMAX)) IFO=0
	IF ((IFO.EQ.8).AND.(RMAP(ILA).EQ.'X')) GOTO 1600
	IF (H1.EQ.HITMAX) GOTO 100
	IFO=8
	ILA=IPORT(Z6)
	GOTO 1600
100	GOTO (800,200,300,400,500,800,800,800,800,700) IFO
	GOTO 800
C 
200	GOTO 800
C 
300	IF (RMAP(ILA).EQ.'X') GOTO 800
	IF (IDIST(Z6,ILA).EQ.1) GOTO 800
	GOTO 1600
C 
400	IF (RLMAP(2600+ILA).EQ.0) GOTO 800
	IF (CODEFU(1100+ILA).LT.7) GOTO 800
	GOTO 1600
C 
500	IF (ILA.NE.Z6) GOTO 1600
	DO 600 I1=1,6
	DO 600 I2=1,5
	IF (TROOPT(I1,I2).NE.ILA) GOTO 600
	TROOPT(I1,I2)=0
600	CONTINUE
	GOTO 800
C 
700	IF (EMAP(ILA).NE.' ') GOTO 800
	GOTO 1600
C 
C NEW CODE SELECTION
C 5:TARGET
C
800	ID=500
	DO 900 N=1,6
	IF (NSHPRF(NUMSHP,N).EQ.0) GOTO 900
	DO 900 N2=1,5
	IF (TROOPT(N,N2).EQ.0) GOTO 900
	IF (IDIST(Z6,TROOPT(N,N2)).GE.ID) GOTO 900
	ID=IDIST(Z6,TROOPT(N,N2))
	ILA=TROOPT(N,N2)
	IFO=5
900	CONTINUE
	IF (ID.NE.500) GOTO 1600
	IF (RND(100).GT.40) GOTO 1200		!**
C
C 3:CITY TARGET LOC.
C
	IA=RND(20)+1				!**
	IB=IA+70
	DO 1100 IC=IA,IB
	I=IC
	IF (I.GT.70) I=IC-70
	IF (TARGET(I).EQ.0) GOTO 1100
	IF (RMAP(TARGET(I)).NE.'O') GOTO 1100
	IF (EDGER(TARGET(I)).EQ.0) GOTO 1100
	IFO=3
	ILA=TARGET(I)
	GOTO 1600
1100	CONTINUE
C
C 4:TT NUMBER ESCORT
C
1200	IA=RND(LIMIT(13))+1			!**
	IB=IA+LIMIT(13)
	DO 1300 IC=IA,IB
	I=IC
	IF (I.GT.LIMIT(13)) I=IC-LIMIT(13)
	IF (RLMAP(2600+I).EQ.0) GOTO 1300
	IF (CODEFU(1100+I).LT.9) GOTO 1300
	IFO=4
	ILA=I
	GOTO 1600
1300	CONTINUE
C 
C 10: EXPLORE
C
1400	I1=EXPL()
	IF (I1.EQ.0) GOTO 1500
	ILA=I1
	IFO=10
	GOTO 1600
C 
C 1: RANDOM DIRECTION
C
1500	IF (IFO.EQ.7) GOTO 1600
	ILA=RND(8)+1				!**
	IFO=7
C 
C MOVE CORRECTION
C
1600	IF (IFO.EQ.7) MOOV=ILA
	FLAG=1
	IF ((IFO.EQ.8).OR.(IFO.EQ.3).OR.(IFO.EQ.5))
	1	 MOOV=PATH(Z6,ILA,DIR,OKC,FLAG)
	IF (IFO.EQ.4) MOOV=PATH(Z6,RLMAP(ITT2+ILA),DIR,OKC,FLAG)
	IF (FLAG.EQ.0) GOTO 1400
	IF (IFO.EQ.10) MOOV=PATH(Z6,ILA,DIR,OKC,FLAG)
	IF (FLAG.EQ.0) GOTO 1500
	IF (IFO.NE.2) GOTO 1700
	MOOV=0
	IF (IDIST(Z6,ILA).GT.4) MOOV=MOV(Z6,ILA)
	IF (IDIST(Z6,ILA).LT.4) MOOV=ICORR(MOV(Z6,ILA)-4)
1700	AGGR=0
	MOOV=MOOV*DIR
	EXPLOR=1
	IF (OWN1.EQ.'d') GOTO 1750
	IF (H1.LE.HITMAX/2) EXPLOR=0
1750	MOOV=
	1 MOVCOR(IFO,ITURN,Z6,MOOV,H1,AGGR,OWN1,EXPLOR,DIR,-1,ORIG,HITMAX)
	IF (IFO.EQ.7) ILA=IABS(MOOV)
	CODEFU(Y+ACRALOC-1500)=IFO
	CODELA(Y+ACRALOC-1500)=ILA
	MOOV=IABS(MOOV)
	IF (CODER.EQ.NUM) TYPE 998,IFO,ILA
998	FORMAT(I)
C 
C MOVE EVALUATION
C
	Z6=Z6+IARROW(MOOV+1)			!**
	IF (OMAP(Z7).NE.'*') RMAP(Z7)=OMAP(Z7)
	AD=RMAP(Z6)
	IF (AD.EQ.'.') GOTO 1900
	IF (AD.EQ.'X') GOTO 2000
	IF ((AD.GE.'A').AND.(AD.LE.'T')) GOTO 1800
	TYPE 997,OWN1,Z6,AD
997	FORMAT(' ENEMY ',A1,' AT ',I4,' RAN AGROUND ON ',A1)
	GOTO 2100
1800	H2=30
	P='SE'
	OWN2=AD
	CALL FIND(OWN2,Z6,Z8,H2)
	CALL FGHT(Z6,H1,H2,OWN1,OWN2)
	CALL FIND(OWN2,Z6,Z8,H2)
	IF (H1.LE.0) GOTO 2100
1900	RMAP(Z6)=OWN1
2000	RLMAP(Y+ACRALOC)=Z6
	J1TS(Y+ACRAHIT)=H1
	IF (ITURN.EQ.1) NUMBER(NUM)=NUMBER(NUM)+1
	MONKEY=Y
	GOTO 2200
2100	RLMAP(Y+ACRALOC)=0
	CODEFU(Y+ACRALOC-1500)=0
	CODELA(Y+ACRALOC-1500)=0
	J1TS(Y+ACRAHIT)=0
2200	CALL SONAR(Z6)
	IF (P.EQ.'SE') CALL SENSOR(Z6)
2300	CONTINUE
2400	CONTINUE
	LIMIT(NUM+8)=MONKEY
	RETURN
	END

	SUBROUTINE CARIER
C
C THIS SUBROUTINE HANDLES ENEMY CARRIER MOVES
C 
	INCLUDE 'EMPIRE.INC/NOLIST'
C 
	NUMBER(7)=0
	IF (CODER.EQ.7) TYPE 999
999	FORMAT(' CARRIER CODES')
	OWN1='c'
	MONKEY=0
C 
C BEGIN LOOP
C
	DO 2700 Y=1,LIMIT(15)
	Z6=RLMAP(ICA2+Y)
	IF (Z6.EQ.0) GOTO 2700
	DIR=MOD(Y,2)*2-1
	H1=J1TS(ICA2H+Y)
	IF (RMAP(Z6).EQ.'X') H1=H1+1
	IF (H1.GT.8) H1=8
C 
	ORIG=Z6
	DO 2600 TURN=1,2
	IF ((TURN.EQ.2).AND.(H1.LE.4)) GOTO 2700	!MOVE AT 1/2 SPEED
	P='NS'
	N=0
	Z7=Z6
	AB=RMAP(Z6)
	IF ((AB.NE.'c').AND.(AB.NE.'X')) GOTO 1800
C 
C MOVE SELECTION
C
	IFO=CODEFU(Y+ICA2-1500)
	ILA=CODELA(Y+ICA2-1500)
	IF (H1.EQ.8) GOTO 100
	IF ((IFO.EQ.8).AND.(RMAP(ILA).EQ.'X')) GOTO 1300
	IFO=8
	ILA=IPORT(Z6)
	GOTO 1300
C 
C IFO=7: RANDOM DIRECTION
C IFO=6: HEADING TOWARDS STATION
C IFO=8: DAMAGED
C IFO=9: STATIONED
C 
C DOES A NEW CODE NEED TO BE SELETED? 800:YES, 1300:NO
C
100	GOTO (200,300,400,500) IFO-5
	GOTO 800
C 
200	GOTO 1300
C 
300	GOTO 800
C
400	GOTO 800
C 
500	DO 600 I=1,70
	IF (TARGET(I).EQ.0) GOTO 600
	IF ((EMAP(TARGET(I)).EQ.'O').AND.(IDIST(Z6,TARGET(I)).LE.10))
	1	 GOTO 1300
600	CONTINUE
	DO 700 I=1,10
700	IF (IDIST(Z6,LOCI(I,2)).LE.10) GOTO 1300
	GOTO 800
C 
C NEW CODE SELECTION
C 
800	DO 1200 J=1,10
	IF (LOCI(J,2).EQ.0) GOTO 1200
	LOC=LOCI(J,2)
	KDORK=0
	ID=500
	DO 900 K=1,70
	IF (OWNER(K).NE.2) GOTO 900
	IF (IDIST(X(K),LOC).GE.ID) GOTO 900
	ID=IDIST(X(K),LOC)
	IF (ID.LT.10) GOTO 1200
	KDORK=X(K)
900	CONTINUE
	DO 1000 K=ICA2+1,ICA2+LIMIT(15)
	IS=RLMAP(K)
	IF (IS.EQ.0) GOTO 1000
	IF (IDIST(IS,LOC).GE.ID) GOTO 1000
	IF (CODEFU(K-1500).NE.9) GOTO 1000
	ID=IDIST(IS,LOC)
	IF (ID.LT.10) GOTO 1200
	KDORK=IS
1000	CONTINUE
	IF (KDORK.EQ.0) GOTO 1200
1100	IF (IDIST(KDORK,LOC).LT.1) GOTO 1200
	LOC=LOC+IARROW(MOV(LOC,KDORK)+1)	!**
	IF (IDIST(KDORK,LOC).GT.19) GOTO 1100
	AD=EMAP(LOC)
	IF ((AD.NE.' ').AND.(AD.NE.'.')) GOTO 1100
	IFO=6
	ILA=LOC
	GOTO 1300
1200	CONTINUE
C 
C RANDOM DIRECTION SELECTION
C
	IF (IFO.EQ.7) GOTO 1300
	IFO=7
	KDORK=0
	ILA=RND(8)+1				!**
C 
C NOW PICK THE MOVE SPECIFIED BY IFO AND ILA
C
1300	IF (IFO.EQ.8) GOTO 1500
	IF (IFO.NE.7) GOTO 1400
	MOVE=ILA
	 GOTO 1700
1400	IF (IFO.NE.6) GOTO 1600
	IF (ILA.NE.Z6) GOTO 1500
	IFO=9
	GOTO 1600
1500	MOVE=PATH(Z6,ILA,DIR,OKC,FLAG)
	GOTO 1700
1600	IF (Z6.NE.ILA) MOVE=MOV(Z6,ILA)
	IF (Z6.EQ.ILA) MOVE=RND(8)+1		!**
C 
C MOVE CORRECTION
C
1700	AGGR=0
	IF ((NUMBER(7).GT.3).AND.(IFO.NE.9)) AGGR=5
	EXPLOR=1
	IF (H1.LT.6) EXPLOR=0
	MOVE=MOVCOR(IFO,TURN,Z6,MOVE,H1,AGGR,'c',EXPLOR,DIR,-1,ORIG,8)
	IF (IFO.EQ.7) ILA=IABS(MOVE)
	CODEFU(Y+ICA2-1500)=IFO
	CODELA(Y+ICA2-1500)=ILA
	IF (CODER.EQ.7) TYPE 998,IFO,ILA
998	FORMAT(1X,I)
C 
C MOVE EVALUATION
C
	Z6=Z6+IARROW(IABS(MOVE)+1)
	IF (OMAP(Z7).NE.'*') RMAP(Z7)=OMAP(Z7)
	AB=RMAP(Z6)
	IF (AB.EQ.'.') GOTO 2000
	IF (AB.EQ.'X') GOTO 2100
	IF ((AB.GE.'A').AND.(AB.LE.'T')) GOTO 1900
	TYPE 997,OWN1,Z6,AB
997	FORMAT(' ENEMY ',A1,' AT ',I4,' RAN AGROUND ON ',A1)
1800	H1=0
	GOTO 2200
1900	H2=30
	P='SE'
	OWN2=AB
	CALL FIND(OWN2,Z6,Z8,H2)
	CALL FGHT(Z6,H1,H2,'c',OWN2)
	CALL FIND(OWN2,Z6,Z8,H2)
	IF (H1.LE.0) GOTO 2200
2000	RMAP(Z6)=OWN1
2100	RLMAP(Y+ICA2)=Z6
	J1TS(Y+ICA2H)=H1
	IF (TURN.EQ.1) NUMBER(7)=NUMBER(7)+1
2200	N=0
	IF (P.EQ.'SE') CALL SENSOR(Z6)
	DO 2300 I=1,LIMIT(10)
	IF (Z7.NE.RLMAP(I+2000)) GOTO 2300
	IF (N+1.GT.H1) THEN
	  IF (RMAP(Z7).NE.'X') RLMAP(I+2000)=0
	  GOTO 2300
	ENDIF
	N=N+1
	RLMAP(I+2000)=Z6
2300	CONTINUE
	IF (H1.LE.0) GOTO 2400
	MONKEY=Y
	GOTO 2500
2400	RLMAP(Y+ICA2)=0
	CODEFU(Y+ICA2-1500)=0
	CODELA(Y+ICA2-1500)=0
	J1TS(ICA2H+Y)=0
2500	CALL SONAR(Z6)
2600	CONTINUE
2700	CONTINUE
	LIMIT(15)=MONKEY
	RETURN
	END

	FUNCTION MOVCOR
	1	(IFO,ITURN,Z6,MOVE,IH1,AGGR,OWN1,EXPLOR,DIR,DEST,ORIG,HMAX)
C
	INCLUDE 'EMPIRE.INC/NOLIST'
C 
C CHECK FOR IMPOSSIBLE CONDITION FOR MOVE
C
	IF ((.NOT.PASS).OR.(IABS(MOVE).LE.8)) GOTO 100
	CALL ERASE_PAGE(1,1)
	TYPE 999,OWN1,Z6,MOVE,IFO
999	FORMAT(1X,A1,' @ ',I4,' ATTEMPTED ',I,' WITH IFO ',I4)
C 
100	MOVE=IABS(MOVE)
C 
	IF (ITURN.EQ.1) BLAH=0			!**
	IF (BLAH.LT.0) MOVE=ICORR(I2+RND(3)-1)	!**
C 
C CHECK FOR SOMETHING TO ATTACK, OR, SOMETHING TO RUN FROM
C BLAH.LT.0: RUN
C BLAH.GE.0: ATTACK
C
	DO 200 IX=1,8
	I1=IX
	LOC=Z6+IARROW(I1+1)			!**
	AB=RMAP(LOC)
	IF (OMAP(LOC).NE.'.') GOTO 200
	IF ((AB.LT.'B').OR.(AB.GT.'T')) GOTO 200	!IF SH/PL, LOOK
	BLAH=ATTACK(OWN1,AB,IH1,AGGR)
	IF (BLAH.GE.0) GOTO 1200			!** ATTACK IT
	GOTO 300				!RUN FROM IT
200	CONTINUE
	I1=0				!NOTHING OF INTEREST HERE
	GOTO 800
C 
C SELECT AN APPROPRIATE ESCAPE MOVE
C
300	IS=RND(3)
	DO 600 IN=1,8
	I2=IN
	IF ((IS.EQ.0).OR.(IN.GT.3)) GOTO 500
	IF (IS.NE.1) GOTO 400
	IF (IN.EQ.1) I2=2
	IF (IN.EQ.2) I2=3
	IF (IN.EQ.3) I2=1
	GOTO 500
400	IF (IN.EQ.1) I2=3
	IF (IN.EQ.2) I2=1
	IF (IN.EQ.3) I2=2
500	I=IARROW(ISCAPE(I2,I1)+1)+Z6		!**
	IF ((RMAP(I).EQ.'.').AND.(ORDER(I).EQ.0)) GOTO 700
600	CONTINUE
	I1=0
	GOTO 800
700	I1=ISCAPE(I2,I1)
	IF (OMAP(I).NE.'.') CALL STROUT('ISCAPE ERROR',1)
	GOTO 1200
C 
800	IF (EXPLOR.EQ.0) GOTO 1000		!**
	EXPMAX=0
	DO 900 IX=MOVE,MOVE+7
	I1=ICORR(IX)
	LOC1=Z6+IARROW(I1+1)			!**
	IF (ORDER(LOC1).NE.0) GOTO 900
	IF (RMAP(LOC1).NE.'.') GOTO 900
	IF (DEST.GT.0) THEN
	  IF (IDIST(Z6,DEST).LT.IDIST(LOC1,DEST)) GOTO 900
	ENDIF
	NEXP=0
	IF (EMAP(LOC1+IARROW(I1+1)).EQ.' ') NEXP=1		!**
	IF (EMAP(LOC1+IARROW(ICORR(I1-1)+1)).EQ.' ') NEXP=NEXP+1	!**
	IF (EMAP(LOC1+IARROW(ICORR(I1+1)+1)).EQ.' ') NEXP=NEXP+1	!**
	IF (EMAP(LOC1+IARROW(ICORR(I1+2)+1)).EQ.' ') NEXP=NEXP+1	!**
	IF (EMAP(LOC1+IARROW(ICORR(I1-2)+1)).EQ.' ') NEXP=NEXP+1	!**
	IF (NEXP.EQ.5) GOTO 1200
	IF (NEXP.LE.EXPMAX) GOTO 900
	EXPMAX=NEXP
	I11=I1
900	CONTINUE
	I1=0
	IF (EXPMAX.EQ.0) GOTO 1000
	I1=I11
	GOTO 1200
1000	I2=MOVE
	LOC1=Z6+IARROW(MOVE+1)			!**
	AB=RMAP(LOC1)
	IF (LOC1.NE.ORIG) THEN
	  IF (((AB.EQ.'.').OR.(AB.EQ.'X')).AND.(ORDER(LOC1).EQ.0)) GOTO 1200
	ENDIF
	M=MOVE
	IA=ICORR(M-DIR*3)
	IF (RMAP(Z6+IARROW(IA+1)).NE.'.') M=IA	!**
	DO 1100 I=0,7*DIR,DIR
	I2=ICORR(M+I)
	I3=Z6+IARROW(I2+1)			!**
	IF ((RMAP(I3).EQ.'.').AND.(ORDER(I3).EQ.0).AND.(I3.NE.ORIG)) GOTO 1200
1100	CONTINUE
	I2=0
1200	IF (I1.NE.0) I2=I1
	IF (RMAP(Z6+IARROW(MOVE+1)).NE.'X') MOVE=I2	!**
	IF ((RMAP(Z6).EQ.'X').AND.(IH1.LT.HMAX)) MOVE=0
	MOVCOR=MOVE
	RETURN
	END

	SUBROUTINE FIGHTR
C
C THIS SUBROUTINE HANDLES ENEMY FIGHTER MOVES
C
	INCLUDE 'EMPIRE.INC/NOLIST'
C 
C IFO=7: CITY LOCATION
C IFO=6: CARRIER NUMBER
C IFO=5: TARGET LOCATION
C IFO=4: TARGET LOCATION, KAMIKAZE MISSION
C IFO=3: DIRECTIONAL
C IFO=2: DIRECTIONAL, KAMIKAZE MISSION
C
	MONKEY=0
	NUMBER(2)=0
	DO 3600 Y=1,LIMIT(10)
	DO 3500 I1=1,4
	Z6=RLMAP(2000+Y)
	IF (Z6.EQ.0) GOTO 3600
	MONKEY=Y
	STOPF=1
	P=0
	Z7=Z6
	AB=RMAP(Z6)
	DO 100 IA=1,6
	DO 100 IB=1,5
100	IF (TROOPT(IA,IB).EQ.Z6) TROOPT(IA,IB)=0
	IF ((AB.NE.'f').AND.(AB.NE.'X').AND.(AB.NE.'c')) GOTO 3400
	IF ((AB.EQ.'X').OR.(AB.EQ.'c')) RANG(Y)=20
	IF (RANG(Y).NE.0) GOTO 200
	OUTOFGAS=OUTOFGAS+1
	IF (CODER.EQ.12) TYPE 999,OUTOFGAS,CODEFU(Y+IFI2-1500),
	1 CODELA(Y+IFI2-1500)
999	FORMAT(' LOST FIGHTERS= ',I4,'FIGHTER CODE WAS',2I4)
	RMAP(Z6)=OMAP(Z6)
	GOTO 3400
C 
C MOVE SELECTION
C
200	IF (CODELA(Y+IFI2-1500).EQ.Z6) GOTO 1100
	IFO=CODEFU(Y+IFI2-1500)
	ILA=CODELA(Y+IFI2-1500)
C 
C DOES A NEW CODE NEED TO BE SELECTED? 1100:YES, 2600:NO
C
	GOTO (1100,300,600,700,800,900,1000) IFO
	GOTO 1100
C 
300	IF (RND(100).LT.5) ILA=ICORR(ILA+1)	!**
	IF (RANG(Y).GT.10) GOTO 2600
	DO 400 I=1,70
	IF (X(I).EQ.0.OR.OWNER(I).NE.2) GOTO 400
	IF (IDIST(Z6,X(I)).GT.RANG(Y)) GOTO 400
	IFO=7
	ILA=X(I)
	GOTO 2600
400	CONTINUE
C 
600	IF (RND(100).LT.10) ILA=ICORR(ILA+1)	!**
	IF (RANG(Y).LE.11) GOTO 1100
	GOTO 2600
C 
700	IF (ILA.EQ.Z6) GOTO 1100
	IF (IDIST(Z6,ILA).EQ.1) GOTO 1100
	GOTO 2600
C 
800	IF ((ILA.EQ.Z6).OR.(RANG(Y).LE.11)) GOTO 1100
	IF (IDIST(Z6,ILA).EQ.1) GOTO 1100
	GOTO 2600
C 
900	IF (Z6.EQ.RLMAP(ILA+2800)) GOTO 1100	!IF LANDED
	IF (RLMAP(ILA+2800).EQ.0) GOTO 1100	!IF CARRIER DOESN'T EXIST
	IF (IDIST(Z6,RLMAP(ILA+2800)).GT.RANG(Y)) GOTO 1100	!IF OUT OF RANG
	GOTO 2600
C 
1000	IF (Z6.EQ.ILA) GOTO 1100			!IF LANDED
	IF (IDIST(Z6,ILA).GT.RANG(Y)) GOTO 1100	!IF OUT OF RANG
	GOTO 2600
C 
C NEW CODE SELECTION
C
1100	ID=0
	FUEL=RANG(Y)/2	!DO THIS SO CRAFT CAN RETURN TO REFUEL
	GOTO 1400	!NO KAMIKAZE ON FIRST TRY
1200	FUEL=RANG(Y)	!BE KAMIKAZE
C
C CURRENTLY THIS PATH IS EXECUTED TWICE.
C
C LOOK FOR ENEMY TROOP TRANSPORTS, THEN SUBMARINES
C
1400	DO 1700 ISHIPT=3,2,-1	!ENEMY TROOP TRANSPORTS, THEN SUBS
	DO 1600 I=1,5
	IF (TROOPT(ISHIPT,I).EQ.0) GOTO 1600
	IF (IDIST(Z6,TROOPT(ISHIPT,I)).GT.FUEL) GOTO 1600	!OUT OF RANG
	IFO=5
	IF (FUEL.EQ.RANG(Y)) IFO=4
	ILA=TROOPT(ISHIPT,I)
	GOTO 2600	!PROCEED TO MOVE CORRECTION
1600	CONTINUE
1700	CONTINUE
C
C MOVE TOWARD AN ENEMY CONCENTRATION WITHIN RANG IN SUPPORT OF OUR ARMIES,
C INCLUDING OUR TROOP TRANSPORTS
C
	TRY=0
	IF (RND(100).LT.25) GOTO 1950
1900	IK=RND(LIMIT(9))+1
	DO 2000 IK=IK,IK+LIMIT(9)-1	!FIRST SUPPORT LAND ARMIES
	K=IK
	IF (K.GT.LIMIT(9)) K=K-LIMIT(9)
	IF (RLMAP(K+IAR2).EQ.0) GOTO 2000
	IF (CODEFU(K).EQ.2) GOTO 1920
	IF (CODEFU(K).NE.1) GOTO 2000
	IF (EMAP(CODELA(K)).NE.'O') GOTO 2000
1920	IF (IDIST(RLMAP(K+IAR2),CODELA(K)).GT.7) GOTO 2000 !DON'T BE TO SOON
	DIST=IDIST(Z6,CODELA(K))
	IF (DIST.LT.2) GOTO 2000	!IF WE ARE THERE ALREADY, DO SOMETHING
	IF (DIST.GT.FUEL) GOTO 2000	!IF OUT OF RANG
	IFO=5
	IF (FUEL.EQ.RANG(Y)) IFO=4	!KAMIKAZE
	ILA=CODELA(K)
	GOTO 2600			!PROCEED TO MOVE CORRECTION
2000	CONTINUE
	TRY=TRY+1
	IF (TRY.GT.1) GOTO 2075
C
C SUPPORT A TROOP TRANSPORT LANDING
C
1950	DO 2050 K=1,LIMIT(13)		!NOW TRY TO SUPPORT ATTACKS BY TT'S
	IF (RLMAP(K+ITT2).EQ.0) GOTO 2050
	IF (CODEFU(K+ITT2-1500).NE.9) GOTO 2050
	IF (EMAP(CODELA(K+ITT2-1500)).EQ.'*') GOTO 2050
	IF (IDIST(RLMAP(K+ITT2),CODELA(K+ITT2-1500)).GT.15) GOTO 2050
	DIST=IDIST(Z6,CODELA(K+ITT2-1500))
	IF (DIST.LT.2) GOTO 2050	!DO SOMETHING ELSE IF THERE
	IF (DIST.GT.FUEL) GOTO 2050	!IF OUT OF RANG
	IFO=5
	IF (FUEL.EQ.RANG(Y)) IFO=4	!KAMIKAZE
	ILA=CODELA(K+ITT2-1500)
	GOTO 2600			!PROCEED TO MOVE CORRECTION
2050	CONTINUE
	TRY=TRY+1
	IF (TRY.LE.1) GOTO 1900
2075	IF (ID.EQ.1000) GOTO 1800	!USE FIGHTER FOR EXPLORATION
C
C NOW MOVE TOWARDS A CITY OR CARRIER CLOSER TO OUR FRONT LINE ARMIES
C
2100	IK=RND(LIMIT(9))+1
	DO 2150 IK=IK,IK+LIMIT(9)-1	!FIRST SUPPORT LAND ARMIES
	K=IK
	IF (K.GT.LIMIT(9)) K=K-LIMIT(9)
	IF (RLMAP(K+IAR2).EQ.0) GOTO 2150
	IF ((CODEFU(K).NE.1).AND.(CODEFU(K).NE.2)) GOTO 2150
	CALL FTRCTY(Z6,RANG(Y),CODELA(K),IFO,ILA,ID,6)
	IF (ID.NE.1000) GOTO 2600	!FOUND A CLOSER CITY OR CARRIER
2150	CONTINUE
C
C NOW TRY A CITY CLOSER TO AN ATTACKING TROOP TRANSPORT
C
	DO 2200 K=1,LIMIT(13)		!NOW TRY TO SUPPORT ATTACKS BY TT'S
	IF (RLMAP(K+ITT2).EQ.0) GOTO 2200
	IF (CODEFU(K+ITT2-1500).NE.9) GOTO 2200
	CALL FTRCTY(Z6,RANG(Y),CODELA(K+ITT2-1500),IFO,ILA,ID,4)
	IF (ID.NE.1000) GOTO 2600	!FOUND A CLOSER CITY OR CARRIER
2200	CONTINUE
C
	IF (RANG(Y).NE.FUEL) GOTO 1200	!NOW SEARCH AS KAMIKAZE
					!SINCE NO CITY CLOSER TO ENEMY
C
C FIGHTER IS NOT USEFUL IN SUPPORT OF ANYTHING, USE IT TO EXPLORE
C
1800	IF ((RND(100).LT.50).AND.(RANG(Y).GT.11)) GOTO 1850
	LOC=EXPL()
	IF (RANG(Y).LE.11) LOC=Z6
	CALL FTRCTY(Z6,RANG(Y),LOC,IFO,ILA,ID,2)
	IF (ID.NE.1000) GOTO 2600	!FOUND A CLOSER CITY OR CARRIER
1850	IFO=3
	ILA=RND(8)+1
	IF (RND(100).LT.5) IFO=2	!** ONE OUT OF 20 WILL BE KAMIKAZE
	IF (NUMBER(2).LE.2) IFO=3
C
C MOVE CORRECTION
C
2600	IZOT=0
	MOOV=0
	IF (ILA.GT.100) IZOT=MOV(Z6,ILA)
	IF (ILA.LT.10) IZOT=ILA
	IF (IFO.EQ.6) IZOT=MOV(Z6,RLMAP(2800+ILA))
	IF ((IFO.LT.4).AND.(RND(100).LT.5)) IZOT=ICORR(IZOT+1)	!**
	DO 2700 I=1,8
	AC=RMAP(Z6+IARROW(I+1))		!**
	IF ((AC.NE.'C').AND.(AC.NE.'S').AND.(AC.NE.'T').AND.(AC.NE.'A')
	1	.AND.(AC.NE.'F')) GOTO 2700
	MOOV=I
	GOTO 3100
2700	CONTINUE
C 
C LOOK FOR TERRITORY TO EXPLOR IN FRONT
C
	IF (RANG(Y).LE.10) GOTO 2900		!IF LOW ON FUEL
	IZOT2=IZOT				!STORE IZOT A MOMENT
	J=-1
	IF (RND(100).LT.50) J=1
	DO 2800 J=J,-J,-2*J			!TRY BOTH SIDES OF DIRECTION
	DIR=IARROW(ICORR(IZOT2+J)+1)
	Z62=Z6
	DO 2750 I=1,7				!TRY SEVERAL MOVES AWAY
	Z62=Z62+DIR
	IF (ORDER(Z62).NE.0) GOTO 2760		!IF ON THE EDGE OF THE MAP
	IF (EMAP(Z62).EQ.' ') IZOT=ICORR(IZOT2+J)	!IF Z62 IS UNEXPLORED
2750	CONTINUE
2760	IF (IZOT.NE.IZOT2) GOTO 2900
2800	CONTINUE
C 
2900	DESTIN=ILA
	IF (IFO.EQ.6) DESTIN=RLMAP(2800+ILA)
	ID=IZOT
	DO 3000 I=0,7
	IZOT=ICORR(ID+I)
	NEWLOC=Z6+IARROW(IZOT+1)		!**
	IF (IFO.GT.3) THEN
	  IF (IDIST(Z6,DESTIN).LE.IDIST(NEWLOC,DESTIN)) GOTO 3000
	ENDIF
	AC=RMAP(NEWLOC)
	IF ((	(AC.EQ.'.').OR.(AC.EQ.'+').OR.
	1	(AC.EQ.'A').OR.(AC.EQ.'T').OR.
	1	(AC.EQ.'C').OR.(AC.EQ.'S').OR.
	1	(AC.EQ.'F').OR.
	1	(AC.EQ.'X').OR.(AC.EQ.'c') ).AND.(ORDER(NEWLOC).EQ.0))
	1	GOTO 3100
3000	CONTINUE
	IZOT=0
3100	CODEFU(IFI2-1500+Y)=IFO
	CODELA(IFI2-1500+Y)=ILA
	IF (IFO.LT.4) CODELA(IFI2-1500+Y)=IZOT
	IF (CODER.EQ.2) TYPE 998,IFO,CODELA(IFI2-1500+Y)
998	FORMAT(I)
	IF (MOOV.NE.0) IZOT=MOOV
	Z6=Z6+IARROW(IZOT+1)			!**
C 
C MOVE EVALUATION
C
	IF (AB.EQ.'f') RMAP(Z7)=OMAP(Z7)
	AB=RMAP(Z6)
	IF ((AB.EQ.'.').OR.(AB.EQ.'+')) GOTO 3200
	IF ((AB.EQ.'X').OR.(AB.EQ.'c')) GOTO 3300
	IF (OMAP(Z6).EQ.'*') GOTO 3400
	H2=30
	P=1
	H1=1
	OWN1='f'
	OWN2=AB
	CALL FIND(OWN2,Z6,Z8,H2)
	CALL FGHT(Z6,H1,H2,OWN1,OWN2)
	CALL FIND(OWN2,Z6,Z8,H2)
	IF (H1.LE.0) GOTO 3400
3200	RMAP(Z6)='f'
	STOPF=0
3300	RANG(Y)=RANG(Y)-1
	IF (I1.EQ.1) NUMBER(2)=NUMBER(2)+1
	RLMAP(2000+Y)=Z6
	CALL SONAR(Z6)
	IF (P.EQ.1) CALL SENSOR(Z6)
	IF (STOPF.EQ.1) GOTO 3600
3500	CONTINUE
	GOTO 3600
3400	RLMAP(2000+Y)=0
	CALL SONAR(Z6)
	IF (P.EQ.1) CALL SENSOR(Z6)
3600	CONTINUE
	RETURN
	END

	SUBROUTINE FTRCTY(Z6,MRANGE,LOC,IFO,ILA,ID,FLIM)
	INCLUDE 'EMPIRE.INC/NOLIST'

	ID=1000
	IGARBG=RND(70+LIMIT(15))+1		!**
	DO 2500 ILOOP=IGARBG,IGARBG+70+LIMIT(15)
	IA=ILOOP
	IF (IA.GT.70+LIMIT(15)) IA=IA-70-LIMIT(15)
	IF (IA.GT.70) GOTO 2400
	IF (OWNER(IA).NE.2) GOTO 2500
	IF (IDIST(Z6,X(IA)).GT.MRANGE) GOTO 2500
	IF (IDIST(X(IA),LOC).GE.ID) GOTO 2500
	IFO=7
	ILA=X(IA)
	ID=IDIST(X(IA),LOC)
	GOTO 2500
2400	IB=IA-70
	IF (RLMAP(2800+IB).EQ.0) GOTO 2500
	IF (IDIST(Z6,RLMAP(2800+IB)).GT.MRANGE) GOTO 2500
	IF (IDIST(RLMAP(2800+IB),LOC).GE.ID) GOTO 2500
	IF ((IDIST(Z6,RLMAP(2800+IB)).GT.MRANGE-MRANGE/2)
	1   .AND.(CODEFU(1300+IB).NE.9)) GOTO 2500
	IFO=6
	ILA=IB
	ID=IDIST(RLMAP(2800+IB),LOC)
2500	CONTINUE
	K=0
	DO 100 I=1,LIMIT(10)
	IF (RLMAP(I+2000).EQ.0) GOTO 100
	IF (CODEFU(I+IFI2-1500).NE.IFO) GOTO 100
	IF (CODELA(I+IFI2-1500).NE.ILA) GOTO 100
	K=K+1
	IF (K.LE.FLIM) GOTO 100
	ID=1000
	GOTO 2600
100	CONTINUE
2600	RETURN
	END

	SUBROUTINE CITYCT
C
	INCLUDE 'EMPIRE.INC/NOLIST'
C
	NUMBER(9)=0
	DO 100 I=11,18
100	NUMBER(I)=0
	DO 200 I=1,70
	IF (OWNER(I).NE.2) GOTO 200
	NUMBER(9)=NUMBER(9)+1
	IF (PHASE(I).LE.0) GOTO 200		!HANDLES JUST CAPTURED CITY
	INDEXX=INDEX(PHASE(I))
	NUMBER(INDEXX)=NUMBER(INDEXX)+1
200	CONTINUE
C 
C NOW LET NUMBER(10)=LAST FILLED SLOT IN TARGET
C
	DO 300 I=70,1,-1
	IF (TARGET(I).EQ.0) GOTO 300
	NUMBER(10)=I
	GOTO 400
300	CONTINUE
	NUMBER(10)=0
400	RETURN
	END
C 
	SUBROUTINE CITYPH(I)
C
	INCLUDE 'EMPIRE.INC/NOLIST'
C 
C NUMBER(1-8): NUMBERS OF UNITS
C NUMBER(11-18): NUMBERS OF CITIES WITH EACH PHASE
C NUMBER(9): NUMBER OF CITIES
C NUMBER(10): NUMBER OF TARGET CITIES
C 
	INT=PHASE(I)
	IF (PHASE(I).NE.-1) GOTO 100
	PHASE(I)=1
	GOTO 1400
100	EDGE=EDGER(X(I))
C 
C IF WE HAVE A PHASE OF 0, MAKE SOMETHING!
C
	IF (PHASE(I).EQ.0) GOTO 600
C 
C IF CITY IS SURROUNDED BY ARMIES, MAKE SOMETHING ELSE
C
	IF (PHASE(I).NE.1) GOTO 300
	DO 200 J=1,8
200	IF (RMAP(X(I)+IARROW(J+1)).EQ.'+') GOTO 300	!**
	GOTO 600
C 
C IF CRAFT NUMBERS ARE GETTING GROSSLY LARGE, PRODUCE SOMETHING ELSE
C
300	IF (NUMBER(OVRPOP(PHASE(I)+1,1)).GT.
	1	OVRPOP(PHASE(I)+1,2)) GOTO 600		!**
C 
	IF (EDGE.NE.8) GOTO 400
	IF ((NUMBER(9).GT.1).AND.(PHASE(I).EQ.1)) GOTO 1100
	IF (NUMBER(9).GT.1) GOTO 1400
	IF (NUMBER(5).LT.1) PHASE(I)=6
	IF (NUMBER(5).GT.0) PHASE(I)=1
	GOTO 1400
C 
400	IF (PHASE(I).NE.1) GOTO 600
	N=0
	DO 500 J=IAR2+1,IAR2+LIMIT(9)
	Z=RLMAP(J)
	IF (Z.EQ.0) GOTO 500
	IF (IDIST(X(I),Z).GT.6) GOTO 500
	IF (EMAP(Z).EQ.'t') GOTO 500
	MOVE=PATH(X(I),Z,1,OKA,FLAG)
	IF (FLAG.EQ.0) GOTO 500
	N=N+1
	IF ((N.GT.6).AND.(NUMBER(11).GT.1)) GOTO 800
500	CONTINUE
	IF ((N.GT.3).AND.(NUMBER(11).GT.1)) GOTO 600
	GOTO 1400
C 
C SELECT A NEW PHASE FOR THE CITY
C
600	CONTINUE
C
C IF THERE ARE ENEMY ARMIES ON THE CONTINENT, PRODUCE ARMIES!
C
	IF (EDGE.EQ.8) GOTO 1050
	DO 700 J=1,10
	IF (LOCI(J,2).EQ.0) GOTO 700
	MOVE=PATH(X(I),LOCI(J,2),1,OKA,FLAG)
	IF (FLAG.EQ.0) GOTO 700
	PHASE(I)=1
	GOTO 1300
700	CONTINUE
C 
800	PHASE(I)=2
	IF (EDGE.GT.0) GOTO 900			!IF NOT LANDLOCKED
	IF (NUMBER(1).LE.4*NUMBER(2)) PHASE(I)=1!4 TO 1 IN FAVOR OF ARMIES
	GOTO 1300
C 
900	PHASE(I)=1
	N=0
	DO 1000 J=IAR2+1,IAR2+LIMIT(9)
	Z=RLMAP(J)
	IF (Z.EQ.0) GOTO 1000
	IF (IDIST(X(I),Z).GT.6) GOTO 1000
	IF (EMAP(Z).EQ.'t') GOTO 1000		!IF ON TROOP TRANSPORT
	MOVE=PATH(X(I),Z,1,OKA,FLAG)
	IF (FLAG.EQ.0) GOTO 1000
	N=N+1
1000	CONTINUE
	IF (N.LT.3) GOTO 1300
1050	PHASE(I)=2
	IF (NUMBER(2)*2.GT.NUMBER(9)) GOTO 1100
	IF ((NUMBER(5).LT.3).AND.(NUMBER(15).LT.2)) GOTO 1100
	IF (NUMBER(2)*4.LT.NUMBER(9)) GOTO 1300
	IF (INT.EQ.2) GOTO 1300
	IF (INT.GT.2) GOTO 1100
	IF (RND(100).LT.50) GOTO 1300
C 
C SELECT A SHIP, GUARANTEEING AT LEAST TWO CITIES PRODUCING TROOP TRANSPORTS
C
1100	PHASE(I)=PH(8)
	DO 1200 J=8,4,-1
1200	IF (NUMBER(J+10).GE.NUMBER(J+9)) PHASE(I)=PH(J-1)
	IF (NUMBER(9).GT.(4*NUMBER(15)+2*NUMBER(5))) PHASE(I)=6
	IF (INT.GT.2) PHASE(I)=INT
	IF (NUMBER(17).EQ.0) PHASE(I)=12
	IF (NUMBER(15).LT.2) PHASE(I)=6
C 
1300	IF ((NUMBER(9).GT.1).AND.(NUMBER(15).EQ.0).AND.(EDGE.GT.0))
	1	PHASE(I)=6
1400	FOUND(I)=5*PHASE(I)+MDATE
	IF (INT.EQ.PHASE(I)) GOTO 1500
	FOUND(I)=6*PHASE(I)+MDATE
	CALL CITYCT
	IF (CODER.NE.9) GOTO 1500
	CALL LIB$SET_CURSOR(2,1)
	TYPE 999,X(I),INT,PHASE(I),EDGE
999	FORMAT('+CITY:',I4,' FROM:',I2,' TO:',I2,' EDGE:',I1,3X,$)
	CALL GETCHX(E)
1500	RETURN
	END

C 
	SUBROUTINE FIND(OWN,Z6,Z8,H2)
C
C CROSS-REFERENCE SUBROUTINE, IT FINDS DATA ON WHATEVER
C CRAFT IS AT POINT Z6.
C 
	INCLUDE 'EMPIRE.INC/NOLIST'
C
	IF (H2.GT.0) GOTO 1100
C 
C NOW WE MUST DESTROY OWN
C FIRST OF ALL, UPDATE TROOPT
C
	ISHP=0
	IF (OWN.EQ.'D') ISHP=1
	IF (OWN.EQ.'S') ISHP=2
	IF (OWN.EQ.'T') ISHP=3
	IF (OWN.EQ.'R') ISHP=4
	IF (OWN.EQ.'C') ISHP=5
	IF (OWN.EQ.'B') ISHP=6
	IF (ISHP.EQ.0) GOTO 200
	DO 100 Z=1,5
100	IF (TROOPT(ISHP,Z).EQ.Z6) TROOPT(ISHP,Z)=0
C 
C  NOW DESTROY THE CRAFT, SET RLMAP(N)=0
C 
200	IF (OWN.NE.'C') GOTO 400
	DO 300 Z=1,200
	IF (RLMAP(500+Z).NE.Z6) GOTO 300
	RLMAP(500+Z)=0
	IF (MODE.EQ.1) CALL LIB$SET_CURSOR(2,60)
	TYPE 999,Z
999	FORMAT('+Fighter #'I3' sunk.'$)
300	CONTINUE
C 
400	IF (OWN.NE.'T') GOTO 600
	DO 500 Z=1,500
	IF (RLMAP(Z).NE.Z6) GOTO 500
	RLMAP(Z)=0
	IF (MODE.EQ.1) CALL LIB$SET_CURSOR(2,60)
	TYPE 998,Z
998	FORMAT('+Army #'I3' sunk.'$)
500	CONTINUE
C 
600	IF (OWN.NE.'t') GOTO 800
	DO 700 Z=1501,2000
700	IF (RLMAP(Z).EQ.Z6) RLMAP(Z)=0
C 
800	IF (OWN.NE.'c') GOTO 1000
	DO 900 Z=2001,2200
900	IF (RLMAP(Z).EQ.Z6) RLMAP(Z)=0
C 
1000	RLMAP(Z8)=0
	IF ((OWN.GE.'a').AND.(OWN.LE.'t')) CALL SONAR(Z6)
	IF ((OWN.GE.'A').AND.(OWN.LE.'T')) CALL SENSOR(Z6)
	RETURN
C 
1100	IF (H2.EQ.30) GOTO 1200
	IF ((OWN.EQ.'A').OR.(OWN.EQ.'F').OR.(OWN.EQ.'a').OR.(OWN.EQ.'f'))
	1	 GOTO 1500
	IF ((OWN.GE.'A').AND.(OWN.LE.'T')) J1TS(Z8-700)=H2
	IF ((OWN.GE.'a').AND.(OWN.LE.'t')) J1TS(Z8-1400)=H2
	GOTO 1500
1200	H2=0
	IA=1
	IF (OWN.EQ.'T') IA=1101
	IF (OWN.EQ.'C') IA=1301
	IF (OWN.EQ.'a') IA=1501
	IF (OWN.EQ.'f') IA=2001
	IF (OWN.EQ.'t') IA=2601
	IF (OWN.EQ.'c') IA=2801
	DO 1300 Z8=IA,3000
1300	IF (RLMAP(Z8).EQ.Z6) GOTO 1400
	PAUSE ' ERROR IN SUBROUTINE FIND, "CONTINUE" TO CONTINUE'
997	FORMAT(' ERROR IN SUB. FIND')
	GOTO 1500
1400	IF ((OWN.EQ.'A').OR.(OWN.EQ.'F').OR.(OWN.EQ.'a').OR.(OWN.EQ.'f'))
	1	H2=1
	IF (H2.EQ.1) GOTO 1500
	IF ((OWN.GE.'A').AND.(OWN.LE.'T')) H2=J1TS(Z8-700)
	IF ((OWN.GE.'a').AND.(OWN.LE.'t')) H2=J1TS(Z8-1400)
1500	RETURN
	END
C 
	SUBROUTINE SONAR(Z6)
C
C UPDATES COMPUTER'S MAP AROUND LOCATION Z6
C
	INCLUDE 'EMPIRE.INC/NOLIST'
C 
	DO 1300 I=0,8
	LOCUS=Z6+IARROW(I+1)			!**
	AB=RMAP(LOCUS)
	AC=EMAP(LOCUS)
	IF (AB.NE.AC) EMAP(LOCUS)=AB
	IF (AB.EQ.'A') GOTO 90
	IF (AC.NE.'A') GOTO 90
C
C NOW WE HAVE A LOCATION THAT USED TO BE A PLAYER ARMY- CLEAN LOCI FOR IT
C
	DO 440 K=1,10
	IF (LOCI(K,2).EQ.0) GOTO 440
	DO 430 J=2,10
	IF (LOCI(K,J).EQ.LOCUS) GOTO 450
430	CONTINUE
440	CONTINUE
	GOTO 90

450	DO 420 J=J,10
	LOCI(K,J)=LOCI(K,J+1)
420	CONTINUE
	LOCI(K,11)=0

90	IF (I.EQ.0) GOTO 1300
	IF ((AB.NE.'*').AND.(AB.NE.'O')) GOTO 400
	DO 100 I1=1,70
100	IF (TARGET(I1).EQ.LOCUS) GOTO 1300
	DO 200 I1=1,70
200	IF (TARGET(I1).EQ.0) GOTO 300
300	TARGET(I1)=LOCUS
400	IF ((AB.LT.'A').OR.(AB.GT.'T')) GOTO 1300
	IF (AB.NE.'A'.AND.AB.NE.'O') GOTO 1100
	IF (AC.EQ.'A') GOTO 520
C 
C WE MUST NOW FIGURE OUT IF THE ARMY IS A THREAT TO ANY OF THE COMPUTER'S
C CITIES, I.E. IF IT IS ON THE CONTINENT WITH ANY OF THEM. IF SO, PUT
C THE ARMY IN THE LOCI ARRAY. THE FIRST INDEX IS THE CONTINENT, THE
C SECOND IS THE NTH ARMY DISCOVERED ON THAT CONTINENT - 1. THE (N,1)
C ARGUMENT IS THE DATE OF THE LAST ARMY DISCOVERED ON THE
C NTH CONTINENT. THUS WE HAVE A MEANS OF DETERMINING THE AGE OF THE DATA
C 
	ARMDEF=0
	DO 480 Y=1,LIMIT(9)
	IF (RLMAP(IAR2+Y).EQ.0) GOTO 480
	IF (IDIST(LOCUS,RLMAP(IAR2+Y)).GT.14) GOTO 480
	MOVE=PATH(RLMAP(IAR2+Y),LOCUS,1,OKA,FLAG)
	IF (FLAG.NE.0) ARMDEF=ARMDEF+1
480	CONTINUE
	IF (ARMDEF.GE.7) GOTO 520

	DO 500 K=1,70
	IF ((OWNER(K).NE.2).OR.(PHASE(K).EQ.1)) GOTO 500
	IF (FOUND(K)-MDATE-5.LE.0) GOTO 500
	IF (IDIST(X(K),LOCUS).GT.18) GOTO 500
	MOVE=PATH(X(K),LOCUS,1,OKA,FLAG)
	IF (FLAG.NE.0) PHASE(K)=-1
500	CONTINUE
C 
520	IF (AB.EQ.'O') GOTO 1300
	DO 600 K=1,10
	IF (LOCI(K,2).EQ.0) GOTO 600
	IF (LOCI(K,2).EQ.LOCUS) GOTO 1050
	DO 550 J=3,10
	IF (LOCI(K,J).EQ.LOCUS) GOTO 800
550	CONTINUE
	MOVE=PATH(LOCUS,LOCI(K,2),1,OKA,FLAG)
	J=11
	IF (FLAG.NE.0) GOTO 800
600	CONTINUE

	DO 700 K=1,10
700	IF (LOCI(K,2).EQ.0) GOTO 760

	OLDEST=10000
	DO 750 J=1,10
	IF (LOCI(J,1).LT.OLDEST) THEN
	  OLDEST=LOCI(J,1)
	  K=J
	ENDIF
750	CONTINUE
760	DO 770 J=2,11
770	LOCI(K,J)=0
	GOTO 1000

800	DO 900 J=J,3,-1
900	LOCI(K,J)=LOCI(K,J-1)			!SHIFT EVERYTHING UP THE ARRAY
1000	LOCI(K,2)=LOCUS
1050	LOCI(K,1)=MDATE
	GOTO 1300
C 
1100	ISHIPT=0
	IF (AB.EQ.'D') ISHIPT=1
	IF (AB.EQ.'S') ISHIPT=2
	IF (AB.EQ.'T') ISHIPT=3
	IF (AB.EQ.'R') ISHIPT=4
	IF (AB.EQ.'C') ISHIPT=5
	IF (AB.EQ.'B') ISHIPT=6
	IF (ISHIPT.EQ.0) GOTO 1300
	DO 1200 IB=1,4
1200	TROOPT(ISHIPT,IB)=TROOPT(ISHIPT,IB+1)
	TROOPT(ISHIPT,5)=LOCUS
1300	CONTINUE
	IF (CODER.EQ.10) CALL SENSOR(Z6)
	RETURN
	END

	SUBROUTINE HELP
C
C HELP - PRINT HELP FILE
C
	CALL ERASE_PAGE(1,1)
	CALL STROUT('EMPIRE.HLP  (see EMPIRE.DOC for more detail)',1)
	CALL STROUT('ORDERS MODE-----------
	1	MOVE MODE-------------	EDIT MODE-------------',0)
	CALL LIB$SET_CURSOR(6,1)
	CALL STROUT('A: Stay in Move mode',1)
	CALL STROUT('C: Give 1 free move',1)
	CALL STROUT('G: GIGI color terminal',1)
	CALL STROUT('H: This text',1)
	CALL STROUT('J: Enter Edit mode',1)
	CALL STROUT('L: Log every 20 moves',1)
	CALL STROUT('M: Enter Move mode',1)
	CALL STROUT('N: Give n free moves',1)
	CALL STROUT('P: Refresh sector',1)
	CALL STROUT('Q: Quit game',1)
	CALL STROUT('R: Display round #',1)
	CALL STROUT('S: Clear screen',1)
	CALL STROUT('T: Print out map',1)
	CALL STROUT('V: VT125 graphics',0)
C
	CALL LIB$SET_CURSOR(4,25)
	CALL STROUT('QWE: Movement',0)
	CALL LIB$SET_CURSOR(5,25)
	CALL STROUT('A D  direction',0)
	CALL LIB$SET_CURSOR(6,25)
	CALL STROUT('ZXC',0)
	CALL LIB$SET_CURSOR(7,25)
	CALL STROUT('<space>: Sit',0)
	CALL LIB$SET_CURSOR(8,25)
	CALL STROUT('G: Sleep till full T,C',0)
	CALL LIB$SET_CURSOR(9,25)
	CALL STROUT('H: This text',0)
	CALL LIB$SET_CURSOR(10,25)
	CALL STROUT('I: Set direction',0)
	CALL LIB$SET_CURSOR(11,25)
	CALL STROUT('J: Enter Edit mode',0)
	CALL LIB$SET_CURSOR(12,25)
	CALL STROUT('K: Wake piece',0)
	CALL LIB$SET_CURSOR(13,25)
	CALL STROUT('L: Set city direction',0)
	CALL LIB$SET_CURSOR(14,25)
	CALL STROUT('O: Cancel Auto moves',0)
	CALL LIB$SET_CURSOR(15,25)
	CALL STROUT('P: Refresh screen',0)
	CALL LIB$SET_CURSOR(16,25)
	CALL STROUT('R: Random for Armies',0)
	CALL LIB$SET_CURSOR(17,25)
	CALL STROUT('S: Sentry',0)
	CALL LIB$SET_CURSOR(18,25)
	CALL STROUT('U: Go land to refuel',0)
	CALL LIB$SET_CURSOR(19,25)
	CALL STROUT('?: Display function',0)
C
	CALL LIB$SET_CURSOR(4,49)
	CALL STROUT('QWE: Cursor',0)
	CALL LIB$SET_CURSOR(5,49)
	CALL STROUT('A D  direction',0)
	CALL LIB$SET_CURSOR(6,49)
	CALL STROUT('ZXC',0)
C	CALL LIB$SET_CURSOR(8,49)
C	CALL STROUT('G: Sleep til full T,C',0)
	CALL LIB$SET_CURSOR(9,49)
	CALL STROUT('H: This text',0)
	CALL LIB$SET_CURSOR(10,49)
	CALL STROUT('I: Set direction',0)
	CALL LIB$SET_CURSOR(11,49)
	CALL STROUT('K: Wake anything',0)
	CALL LIB$SET_CURSOR(12,49)
	CALL STROUT('M: Set path start',0)
	CALL LIB$SET_CURSOR(13,49)
	CALL STROUT('N: Set path end',0)
	CALL LIB$SET_CURSOR(14,49)
	CALL STROUT('O: Exit Edit mode',0)
	CALL LIB$SET_CURSOR(15,49)
	CALL STROUT('P: Change sector',0)
	CALL LIB$SET_CURSOR(16,49)
	CALL STROUT('R: Random for armies',0)
	CALL LIB$SET_CURSOR(17,49)
	CALL STROUT('S: Sentry ',0)
	CALL LIB$SET_CURSOR(18,49)
	CALL STROUT('Y: Set city production',0)
	CALL LIB$SET_CURSOR(19,49)
	CALL STROUT('?: Display function',1)
	CALL STROUT('Piece---Yours-Enemy-Moves-Hits-Cost
	1	Piece---Yours-Enemy-Moves-Hits-Cost',1)
	CALL STROUT('Army        A a       1    1     5
	1	Transport   T t       2    3    30',1)
	CALL STROUT('Fighter     F f       4    1    10
	1	Cruiser     R r       2    8    50',1)
	CALL STROUT('Destroyer   D d       2    3    20
	1	Carrier     C c       2    8    60',1)
	CALL STROUT('Submarine   S s       2    2    25
	1	Battleship  B b       2   12    75',0)
C
	RETURN
	END
C 
	FUNCTION EXPL
C 
C THIS SUBROUTINE SEARCHES FOR UNKNOWN TERRITORY AND RETURNS A VALUE
C IN EXPL.
C 
	INCLUDE 'EMPIRE.INC/NOLIST'
C
	IF (FULL.EQ.2) GOTO 300
	BEGPOS=START
	GOTO 200
100	IF ((EMAP(POSIT).EQ.' ').AND.(ORDER(POSIT).EQ.0)) GOTO 400
200	POSIT=POSIT+STEP
	IF (POSIT.LT.5900) GOTO 100
	START=START+1
	POSIT=START
	IF (START.EQ.BEGPOS+37) GOTO 300
	GOTO 100
300	EXPL=0
	FULL=2
C	CALL LIB$SET_CURSOR(1,1)
C	TYPE 999,POSIT,STEP,START,BEGPOS,KNOWN
C999	FORMAT('+POSIT,STEP,START,BEGPOS,KNOWN:',5I5$)
	RETURN
400	EXPL=POSIT
	RETURN
	END
C 
	FUNCTION IPORT(Z6)
C
	INCLUDE 'EMPIRE.INC/NOLIST'
C
	IPORT=0
	ID=500
	DO 100 I=1,70
	IF (X(I).EQ.0) GOTO 100
	IF (RMAP(X(I)).NE.'X') GOTO 100
	IF (EDGER(X(I)).EQ.0) GOTO 100
	IF (IDIST(X(I),Z6).GE.ID) GOTO 100
	IPORT=X(I)
	ID=IDIST(X(I),Z6)
100	CONTINUE
	IF (IPORT.NE.0) RETURN
	IPORT=RND(5798)+102
	RETURN
	END
C 
	INTEGER FUNCTION HITS(OWN)
	IMPLICIT INTEGER(A-Z)
	INTEGER B(8)
	BYTE ATYP(8),OWN
	DATA ATYP/'A','F','D','S','T','R','C','B'/
	DATA B/ 1 , 1,  3,  2,  3,  8,  8, 12 /
C
	HITS=0
	DO 100 I=1,8
	IF (OWN.EQ.ATYP(I)) GOTO 200
100	CONTINUE
	RETURN
200	HITS=B(I)
	RETURN
	END
C 
	FUNCTION ATTACK(OWN1,OWN2,IH1,AGGR)
	IMPLICIT INTEGER(A-Z)
	BYTE OWN1,OWN2
C
	H1=IH1
	C1=COST(OWN1,H1)
	C2=COST(OWN2,0)
	S1=1
	S2=1
	IF (OWN1.EQ.'s') S1=3
	IF (OWN2.EQ.'S') S2=3
	H2=HITS(OWN2)
	H1=(H1+S2-1)/S2
	H2=(H2+S1-1)/S1
	ATTACK=(((C2*100)*H1)/H2)-(C1*100)+(AGGR*100)
	RETURN
	END
C 
	FUNCTION COST(OWN,H)
	IMPLICIT INTEGER(A-Z)
	INTEGER COSVAL(14)
	BYTE	COSTAB(14),OWN
	DATA COSVAL/0,2,4,6,3,5,4,1,3,3,7,5,11,11/
	DATA COSTAB/'F','D','S','T','R','C','B',
	1			    'f','d','s','t','r','c','b'/
	DO 100 I=1,14
100	IF (OWN.EQ.COSTAB(I)) GOTO 200
	PAUSE 'BAD CALL TO FUNCTION COST!'
	COST=0
	RETURN
200	COST=COSVAL(I)
	IF (I.GE.9)COST=COST-H
	RETURN
	END
C 
	FUNCTION POSCHK(Z6,OWN)
C
C DETERMINES IF Z6 IS IN CURRENT UPDATE SECTOR SHOWING
C	0=NO, 1=YES
C
	INCLUDE 'EMPIRE.INC/NOLIST'
	INTEGER LOWSCRS(5),HIGHSCRS(5)
	DATA LOWSCRS/1,14,24,34,44/
	DATA HIGHSCRS/15,25,35,45,58/
C
	IF (MODE.EQ.1) GOTO 100
	POSCHK=1
	GOTO 400
100	JECT=JECTOR
	POSCHK=0
	IY=(Z6-1)/100
	IX=Z6-IY*100
	ADJUST=1
	IF (OWN.EQ.'F') ADJUST=0
	IF (JECT.GT.4) GOTO 200
	IF (IX.GT.(SWIDTH-5+ADJUST)) GOTO 400
	GOTO 300
200	IF (IX.LT.(100-(SWIDTH-5)-ADJUST)) GOTO 400
	JECT=JECT-5
300	IF ((IY.LT.(LOWSCRS(JECT+1)-ADJUST)).OR.
	1   (IY.GT.(HIGHSCRS(JECT+1)+ADJUST))) GOTO 400
	POSCHK=1
400	RETURN
	END
C 
	FUNCTION SCRCHK(Z6)
C
C DETERMINES IF Z6 IS IN CURRENT SCREEN SECTOR SHOWING
C	0=NO, 1=YES
C
	INCLUDE 'EMPIRE.INC/NOLIST'
C
	IF (MODE.EQ.1) GOTO 100
	SCRCHK=1
	GOTO 400
100	JECT=JECTOR
	SCRCHK=0
	IY=(Z6-1)/100
	IX=Z6-IY*100
	IF (JECT.GT.4) GOTO 200  !CHECK X COORD FIRST
	IF (IX.GT.SWIDTH) GOTO 400
	GOTO 300
200	IF (IX.LT.(100-SWIDTH)) GOTO 400
	JECT=JECT-5
300	IF ((IY.LT.(JECT*10)).OR.(IY.GT.(JECT*10+19))) GOTO 400
	SCRCHK=1			!PASSED, IT'S GOOD
400	RETURN
	END

	SUBROUTINE PROD(AHITS,Z6,ALIMIT,ACRAHIT,
	1		ACRALOC,ALOPMAX,AAR2S,J,ARANGE)
C
	INCLUDE 'EMPIRE.INC/NOLIST'
	INTEGER AAR2S(500),ARANGE(200)
C
	DO 1000 I=ACRALOC+1,ALOPMAX+ACRALOC
	IF (RLMAP(I).NE.0) GOTO 1000
	IF (I.GT.ALIMIT+ACRALOC) ALIMIT=I-ACRALOC
	RLMAP(I)=Z6
	IF (AHITS.GT.1) J1TS(ACRAHIT+I-ACRALOC)=AHITS
	IF (J.GT.1) MYCODE(I)=0
	IF (J.LT.2) CODEFU(I-1500)=0
	IF (J.LT.2) CODELA(I-1500)=0
	IF (J.EQ.1) AAR2S(I-1500)=0
	IF (ACRALOC.EQ.2000) ARANGE(I-2000)=20
	IF (J.EQ.3) ARANGE(I-500)=20
	GOTO(100,200,300,400,500,600,700,800,900) J
100	RETURN
200	CALL STROUT('n Army',1)
	RETURN
300	CALL STROUT(' Fighter',1)
	RETURN
400	CALL STROUT(' Destroyer',1)
	RETURN
500	CALL STROUT(' Submarine',1)
	RETURN
600	CALL STROUT(' Troop Transport',1)
	RETURN
700	CALL STROUT(' Cruiser',1)
	RETURN
800	CALL STROUT(' Aircraft Carrier',1)
	RETURN
900	CALL STROUT(' Battleship',1)
	RETURN
1000	CONTINUE
	RETURN
	END
C
	SUBROUTINE ARMCNT
C
	INCLUDE 'EMPIRE.INC/NOLIST'
C
	DO 100 I=1,20
100	ARMTOT(I)=0
	DO 300 I=1,LIMIT(9)
	IF (CODEFU(I).NE.1) GOTO 300
	ILA=CODELA(I)
	DO 200 I2=1,20
200	IF (TARGET(I2).EQ.ILA) ARMTOT(I2)=ARMTOT(I2)+1
300	CONTINUE
	RETURN
	END
C 
	FUNCTION ARMJMP(Z6,AR2SC)
C 
C THIS SUBROUTINE DETERMINES WHETHER OR NOT AN ARMY SHOULD GET OFF
C THE TROOP TRANSPORT IT IS ON. 0=NO, 1=YES
C 
	INCLUDE 'EMPIRE.INC/NOLIST'
C
	ARMJMP=0
	DO 100 I=1,8
100	IF (OMAP(Z6+IARROW(I+1)).NE.'.') GOTO 200	!** NOT ALL SEA SURROUND
	RETURN
C 
200	IF (AR2SC.EQ.0) GOTO 400		!BEEN ON TROOP TRANSPORT
C						!FOR A LONG TIME
	DO 300 I=1,8
	LOC=Z6+IARROW(I+1)			!**
	IF (OMAP(LOC).EQ.'.') GOTO 300
	IF (ORDER(LOC).NE.0) GOTO 300
	AB=RMAP(LOC)
	IF ((AB.EQ.'A').OR.(AB.EQ.'F')) GOTO 400
	IF ((AB.EQ.'*').OR.(AB.EQ.'O')) GOTO 400
	LOC=Z6+2*IARROW(I+1)			!**
	AB=EMAP(LOC)
	IF (AB.EQ.' ') GOTO 400
300	CONTINUE
	RETURN					!DON'T JUMP
400	ARMJMP=1
	RETURN					!JUMP
	END
C 
	FUNCTION PRIORI(Z6,IFO,ILA,DIR,AC)
C
	INCLUDE 'EMPIRE.INC/NOLIST'
	BYTE GROUND,OK
C 
	DO 100 I=1,7
100	PRIOR(I)=0
	EXPMAX=0
C 
C NOW MAKE A GUESS AS TO WHAT THE MOVE WILL BE
C
	MOVE1=ILA
	IF (IFO.EQ.1.OR.IFO.EQ.2) MOVE1=MOV(Z6,ILA)
	IF (IFO.EQ.3) MOVE1=MOV(Z6,RLMAP(ITT2+ILA))
C 
C NOW SEE IF ANY PRIORITY MOVES EXIST
C
	DO 200 I=0,7*DIR,DIR
	MOVE=ICORR(MOVE1+I)
	LOC=Z6+IARROW(MOVE+1)			!**
	IF (ORDER(LOC).NE.0) GOTO 200
	AB=RMAP(LOC)
C 
C CHECK IF ARMY CAN ATTACK SOMETHING OVER WATER
C
	GROUND=OMAP(LOC)
	OK='Y'
	IF ((AC.EQ.'t').AND.(GROUND.EQ.'.')) OK='N'
C 
	IF (AB.EQ.'O') PRIOR(1)=MOVE
	IF ((AB.EQ.'T').AND.(OK.EQ.'Y')) PRIOR(3)=MOVE
	IF (AB.EQ.'*') PRIOR(2)=MOVE
	IF (AB.EQ.'A') PRIOR(5)=MOVE
	IF ((AB.EQ.'S').AND.(OK.EQ.'Y')) PRIOR(6)=MOVE
	IF ((IFO.EQ.0).AND.(AB.GE.'A').AND.(AB.LE.'T').AND.(OK.EQ.'Y'))
	1	 PRIOR(7)=MOVE
C 
	IF (GROUND.NE.'+') GOTO 200
	N=0
	IF (EMAP(LOC+IARROW(ICORR(MOVE-2)+1)).EQ.' ') N=1	!**
	IF (EMAP(LOC+IARROW(ICORR(MOVE-1)+1)).EQ.' ') N=N+1	!**
	IF (EMAP(LOC+IARROW(MOVE+1)).EQ.' ') N=N+1		!**
	IF (EMAP(LOC+IARROW(ICORR(MOVE+1)+1)).EQ.' ') N=N+1	!**
	IF (EMAP(LOC+IARROW(ICORR(MOVE+2)+1)).EQ.' ') N=N+1	!**
C	TYPE 999,N,EXPMAX
C999	FORMAT(' N:',I2,' EXPMAX:',I2)
	IF (N.LE.EXPMAX) GOTO 200
	PRIOR(4)=MOVE
	EXPMAX=N
200	CONTINUE
C	TYPE 998
C998	FORMAT(' XXXXXXXXXXXXXXXX')
C 
C NOW SELECT THE HIGHEST PRIORITY MOVE
C
	DO 300 I=1,7
300	IF (PRIOR(I).NE.0) GOTO 400
	PRIORI=0
	RETURN
400	PRIORI=PRIOR(I)
	RETURN
	END
C 
	FUNCTION MOV(I6,I7)
C
C RETURNS THE INDEX-1 INTO IARROW FOR THE DIRECTION  OF THE MOVE
C   FROM I6 TO I7
C
	INCLUDE 'EMPIRE.INC/NOLIST'
	LOGICAL XMAJOR
C
	IY6=(I6-1)/100
	IY7=(I7-1)/100
	IX6=I6-(100*IY6)
	IX7=I7-(100*IY7)
	IY=IY7-IY6
	IX=IX7-IX6

C  SCREEN OUT TRIVIAL CASES
	IF (IX.EQ.0) THEN
	   DIR=SIGN(100,IY)
	   GOTO 100
	   ENDIF
	IF (IY.EQ.0) THEN
	   DIR=SIGN(1,IX)
	   GOTO 100
	   ENDIF

C  THIS ATTEMPTS A LINE-OF-SIGHT APPROXIMATION
C   unfortunately a true LOS requires knowing where you came from!
C   this routine currently tries to keep near a 3 to 1 ratio.
	DX=ABS(IX)			!GET DELTA X
	DY=ABS(IY)			!GET DELTA Y
	XMAJOR=.TRUE.			!ASSUME X IS MAJOR CHANGE
	IF (DY.GT.DX) THEN		! IF WRONG, SWITCH
	   DX=DY
	   DY=ABS(IX)
	   XMAJOR=.FALSE.
	   ENDIF	
C					! the divisor determines the slope
C					! perfect case would be delta y at start
	IF (IFIX(FLOAT(DX)/3+.5).GT.DY) THEN	!IF MAJOR IS LONG, GO STRAIGHT
	     IF (XMAJOR) THEN
		DIR=SIGN(1,IX)
	     ELSE
		DIR=SIGN(100,IY)
	     ENDIF
	   ELSE					!OTHERWISE, TAKE DIAGONAL
		DIR=SIGN(100,IY)+SIGN(1,IX)
	   ENDIF
100	DO 200 I=1,9				!FIND THE INDEX
200	IF (IARROW(I).EQ.DIR) GOTO 300
300	MOV=I-1					!FOR COMPATIBILITY (?)


C OLD WAY: FOR HISTORIANS
C	THIS DOES NOT DO A "TRUE" LINE OF SIGHT, FAVORS DIAGONALS
C	IF ((IY.LT.0).AND.(IX.GT.0)) MOV=2
C	IF ((IY.LT.0).AND.(IX.EQ.0)) MOV=3
C	IF ((IY.LT.0).AND.(IX.LT.0)) MOV=4
C	IF ((IY.EQ.0).AND.(IX.LT.0)) MOV=5
C	IF ((IY.GT.0).AND.(IX.LT.0)) MOV=6
C	IF ((IY.GT.0).AND.(IX.EQ.0)) MOV=7
C	IF ((IY.GT.0).AND.(IX.GT.0)) MOV=8
C	IF ((IY.EQ.0).AND.(IX.GT.0)) MOV=1
C	IF ((IX.EQ.0).AND.(IY.EQ.0)) MOV=0

	RETURN
	END

	SUBROUTINE BLOCK(AMAP)
C
C  THIS SUBROUTINE MAKES A COPY OF MAP II INTO SUPPLIED FILE SPEC
C
	INCLUDE 'EMPIRE.INC/NOLIST'
	BYTE AMAP(6000)
C
	ISEC=-1
	CALL ERASE_PAGE(1,1)
	JECTOR=-1
	CALL STROUT(' Output file:',12)
	ACCEPT 999,TTY
999	FORMAT(20A1)
	CALL ERASE_PAGE(1,1)
	TTY(20)=0
	OPEN(UNIT=2,NAME=TTY,ACCESS='SEQUENTIAL',FORM='FORMATTED',
	1 STATUS='NEW',ERR=600)
	DO 500 J=0,5900,100
	DO 200 K=100,1,-1
	AB=AMAP(K+J)
200	IF (AB.NE.' ') GOTO 300
	GOTO 500
300	DO 400 L=1,K
400	G2(L)=AMAP(J+L)
	WRITE(2,998) (G2(L),L=1,K)
998	FORMAT(1X,100A1)
500	CONTINUE
	CLOSE(UNIT=2)
	RETURN

600	TYPE 997,TTY
997	FORMAT (' ERROR, Unable to open output file ',20A1)
	RETURN
	END
C 
C 
	SUBROUTINE IDEN(OWN)
C
	INCLUDE 'EMPIRE.INC/NOLIST'
C
	IF ((OWN.GE.'a').AND.(OWN.LE.'t')) CALL STROUT('Enemy',10)
	IF ((OWN.LE.'T').AND.(OWN.GE.'A')) CALL STROUT('Your',10)
	IF ((OWN.EQ.'A').OR.(OWN.EQ.'a')) GOTO 100
	IF ((OWN.EQ.'F').OR.(OWN.EQ.'f')) GOTO 200
	IF ((OWN.EQ.'D').OR.(OWN.EQ.'d')) GOTO 300
	IF ((OWN.EQ.'S').OR.(OWN.EQ.'s')) GOTO 400
	IF ((OWN.EQ.'T').OR.(OWN.EQ.'t')) GOTO 500
	IF ((OWN.EQ.'R').OR.(OWN.EQ.'r')) GOTO 600
	IF ((OWN.EQ.'C').OR.(OWN.EQ.'c')) GOTO 700
C
C THEN IT IS A BATTLESHIP!
C
	CALL STROUT('Battleship',10)
	RETURN
100	CALL STROUT('Army',10)
	RETURN
200	CALL STROUT('Fighter',10)
	RETURN
300	CALL STROUT('Destroyer',10)
	RETURN
400	CALL STROUT('Submarine',10)
	RETURN
500	CALL STROUT('Troop Transport',10)
	RETURN
600	CALL STROUT('Cruiser',10)
	RETURN
700	CALL STROUT('Aircraft Carrier',10)
	RETURN
	END
C 
	SUBROUTINE HEAD(OWN1,Y,NUM,Z6,H1)
C
	INCLUDE 'EMPIRE.INC/NOLIST'
C
	CALL LIB$SET_CURSOR(1,1)
	CALL IDEN(OWN1)
	CALL DECPRT(Y)
	CALL STROUT(' at',10)
	CALL DECPRT(Z6)
	CALL LIB$ERASE_LINE
	CALL STSOUT(MYCODE(NUM))
	IF (OWN1 .EQ. 'F') THEN
	   CALL LIB$SET_CURSOR(1,60)
	   CALL STROUT('Range:',10)
	   CALL DECPRT(RANGE(Y))
	   ENDIF
	IF ((OWN1.NE.'F').AND.(OWN1.NE.'A')) THEN
	   CALL LIB$SET_CURSOR(1,60)
	   CALL STROUT('Hits left:',10)
	   CALL DECPRT(H1)
	   ENDIF
	RETURN
	END
C 
	SUBROUTINE STSOUT(MYCOD)
C
C DISPLAY MYCOD FUNCTION IN ENGLISH
C
	INCLUDE 'EMPIRE.INC/NOLIST'
C
	CALL LIB$SET_CURSOR(1,40)
	CALL STROUT('Function:',10)
	IF (MYCOD.LT.6100) GOTO 200
	IF (MYCOD.EQ.9997) THEN			!=9997, FILL FUNCTION
	  CALL STROUT('Fill',13)
	  GOTO 300
	  ENDIF
	DO 100 I=6101,6108
100	IF (I.EQ.MYCOD) TYPE 999,COMM(I-6100)	!6101<=MYCOD<=6108, DIRECTION
999	FORMAT('+',A1,$)
	GOTO 300
200	IF (MYCOD.GT.100) THEN			!100<MYCOD<6101, LOCATION
	  CALL DECPRT(MYCOD)
	  GOTO 300
	  ENDIF
	IF (MYCOD.EQ.0) THEN			!=0, AWAKE (NORMAL)
	  CALL STROUT('Awake',13)
	  GOTO 300
	ENDIF
	IF (MYCOD.EQ.100) THEN			!=100, RANDOM ARMY
	  CALL STROUT('Random',13)
	  GOTO 300
	ENDIF
	CALL STROUT('Sentry',13)		!0<MYCOD<100, SENTRY 
300	CALL LIB$ERASE_LINE
	RETURN
	END
C 
	FUNCTION CITFND(Z6)
C
C FIND CITY AT LOCATION Z6, RETURN INDEX INTO X()
C
	INCLUDE 'EMPIRE.INC/NOLIST'
C
	DO 100 I=1,70
100	IF (X(I).EQ.Z6) GOTO 200
	IF (.NOT.PASS) RETURN
	CALL STROUT('CITFND ERROR',2)
	RETURN
200	CITFND=I
	RETURN
	END
C 
	FUNCTION JIGGLE(Z6,NUM)
C
C DO RANDOM MOVE FOR PLAYER'S ARMY
C
	INCLUDE 'EMPIRE.INC/NOLIST'
C
	DO 100 I=1,9
100	AB9(I)=RMAP(Z6+IARROW(I+1))		!**
	IF (AB9(9).NE.'T') GOTO 200
	JIGGLE=0
	MYCODE(NUM)=0
	RETURN
C 
200	DO 300 I1=1,9
300	IF ((AB9(I1).EQ.'*').OR.(AB9(I1).EQ.'X')) GOTO 400
	I1=9
400	DO 500 I2=1,9
500	IF ((AB9(I2).GE.'a').AND.(AB9(I2).LE.'t')) GOTO 600
	I2=9
600	DO 700 I3=1,9
700	IF (AB9(I3).EQ.'T') GOTO 800
	I3=9
800	M1=RND(8)+1				!**
	M2=M1+7
	DO 900 I4=M1,M2
	I5=ICORR(I4)
	I=Z6+IARROW(I5+1)			!**
900	IF ((ORDER(I).EQ.0).AND.(AB9(I5).EQ.'+')) GOTO 1000
	I4=0
1000	M=I1
	IF (M.EQ.9) M=I3
	IF (M.EQ.9) M=I2
	IF (M.EQ.9) M=I5
	IF (I4.EQ.0) M=9
	JIGGLE=M
	RETURN
	END
C 
	SUBROUTINE PHASIN(NUM,E)
C
C PROMPT FOR CITY PRODUCTION TYPE, SET PROD ACCORDINGLY
C
	INCLUDE 'EMPIRE.INC/NOLIST'
C
	E=GETCHX()
	DO 200 I=1,8
200	IF (E.EQ.PHAZE(I)) GOTO 300
	CALL HUH
	E=' '
	RETURN			!IF HE DOESN'T DO IT RIGHT, LEAVE IT

300	PHASE(NUM)=PH(I)
	FOUND(NUM)=MDATE+6*PHASE(NUM)
	RETURN
	END

C
	SUBROUTINE CURSOR(N)
C
C POSITION CURSOR TO MAP LOCATION N
C
	CALL SET_CURSOR(N/100+1,MOD(N,100)+1)
	END
C
	SUBROUTINE STROUT(LINE,N)
C
C TYPE OUT ASCIZ TEXT 'LINE' AND WHERE N IS A TWO DIGIT NUMBER 'AB'
C A=NUMBER OF TRAILING SPACES (1-4),
C B=0 MEANS DO NOTHING ELSE, B=1 MEANS CLEAR LINE AND TYPE CRLF,
C B=3 MEANS CLEAR LINE
C 
	IMPLICIT INTEGER(A-Z)
	LOGICAL*1 LINE(80),BLANKS(4)
	DATA BLANKS/' ',' ',' ',' '/
C
C FIND LENGTH OF STRING AND PRINT IT.
	J=1
	DO 100 I=1,80
	  IF (LINE(I).EQ.0) GOTO 200
	  IF (LINE(I).NE.' ') J=I
100	CONTINUE
200	TYPE 300,(LINE(I),I=1,J)
300	FORMAT('+',<J>A1,$)
C
C NOW SEPARATE PIECES OF N
	J=MIN0(IABS(N/10),4)
	IF (J.NE.0) TYPE 300,(BLANKS(I),I=1,J)
C
	J=MOD(N,10)
	IF (J.NE.0) CALL LIB$ERASE_LINE
	IF (J.EQ.1) TYPE 400
400	FORMAT(1X)
	RETURN
	END
C
	SUBROUTINE DECPRT(N)
C
C PRINT INTEGER N, WITH MINIMAL LEADING BLANKS
C
	IMPLICIT INTEGER(A-Z)
C
	IF (N.LT.0) TYPE 999
999	FORMAT('+-',$)
	J=IABS(N)
	IF (J.GE.10000) GOTO 500
	IF (J.GE.1000) GOTO 400
	IF (J.GE.100) GOTO 300
	IF (J.GE.10) GOTO 200
100	TYPE 998,J
998	FORMAT('+',I1,$)
	RETURN
C
200	TYPE 997,J
997	FORMAT('+',I2,$)
	RETURN
C
300	TYPE 996,J
996	FORMAT('+',I3,$)
	RETURN
C
400	TYPE 995,J
995	FORMAT('+',I4,$)
	RETURN
C
500	TYPE 994,J
994	FORMAT('+',I5,$)
	RETURN
	END
C
	SUBROUTINE HUH
	IMPLICIT INTEGER(A-Z)
C
	CALL LIB$SET_CURSOR(1,40)
	CALL STROUT('  Huh?',2)
	RETURN
	END
C
	FUNCTION GETCHX
C
C READS A CHARACTER WITH NO ECHO
C
	IMPLICIT INTEGER (A-Z)
	EXTERNAL IO$_READVBLK,IO$M_NOECHO
	BYTE CHAR
	INTEGER*2 CHAN
	COMMON /CHAN/ CHAN

	IF (CHAN.EQ.0) CALL SYS$ASSIGN('TT',CHAN,,)
	CALL SYS$QIOW(,%VAL(CHAN),
	1 %VAL(%LOC(IO$_READVBLK).OR.%LOC(IO$M_NOECHO)),,,,
	2 CHAR,%VAL(1),,,,)
	GETCHX=CHAR
	IF (GETCHX.GT.96) GETCHX=GETCHX-32

	END

	FUNCTION ICORR(N)
	IMPLICIT INTEGER(A-Z)
C
	ICORR=N
	IF (ICORR.GT.8) ICORR=ICORR-8
	IF (ICORR.LT.1) ICORR=ICORR+8
	RETURN
	END
C
	FUNCTION IDIST(N1,N2)
C
C RETURN DISTANCE BETWEEN LOCATION N1 AND N2
C
	IMPLICIT INTEGER(A-Z)
C
	X1=IABS(MOD(N1-1,100)-MOD(N2-1,100))
	Y1=IABS(((N1-1)/100)-((N2-1)/100))
	IDIST=MAX0(X1,Y1)
	RETURN
	END
C
	SUBROUTINE STASIS(Z6,LOC)
C
C CHECK IF ARMY #LOC, AT Z6, IS NEAR THE ENEMY, IF SO WAKE HIM UP
C
	INCLUDE 'EMPIRE.INC/NOLIST'
C
	DO 200 I=1,8
	AB=RMAP(Z6+IARROW(I+1))		!**
	IF ((AB.GE.'a').AND.(AB.LE.'t')) GOTO 100
	IF (AB.EQ.'X') GOTO 100
	IF (AB.NE.'*') GOTO 200
	IF (RMAP(Z6).EQ.'F') GOTO 200
100	MYCODE(LOC)=0
	GOTO 300
200	CONTINUE
300	RETURN
	END
C 
	SUBROUTINE DIST(Z6,ILA)
C
C THIS SUBROUTINE SETS AR2S SO THAT THE ARMY WON'T GET
C OFF THE TROOP TRANSPORT PREMATURELY
C 
	INCLUDE 'EMPIRE.INC/NOLIST'
C
	ID=2*IDIST(Z6,ILA)+1
	DO 100 L=1+IAR2,LIMIT(9)+IAR2
100	IF (RLMAP(L).EQ.Z6) AR2S(L-IAR2)=ID
	RETURN
	END
C 
	FUNCTION ORDER(I6)
C
C RETURN =1 IF OFF THE EDGE OF THE MAP
C
	IMPLICIT INTEGER(A-Z)
C
	ORDER=1
	IF ((I6.LE.101).OR.(I6.GE.5900)) RETURN
	IF (MOD(I6,100).LE.1) RETURN
	ORDER=0
	RETURN
	END
C
	SUBROUTINE DIREC
	CALL LIB$SET_CURSOR(2,40)
	CALL STROUT('  H for Help!',2)
	END

	FUNCTION EDGER(I)
C
C RETURN NUMBER OF SEA SQUARES THAT ARE ADJACENT TO LOCATION I
C
	INCLUDE 'EMPIRE.INC/NOLIST'
C
	EDGER=0
	DO 100 IA=1,8
100	IF (OMAP(I+IARROW(IA+1)).EQ.'.') EDGER=EDGER+1
	RETURN
	END
C 
	FUNCTION IPHASE(I)
C
C RETURN INTEGER OF ASCII I AS A SECTOR NUMBER
C
	IMPLICIT INTEGER(A-Z)
C
	IPHASE=0
	I=I.AND.127
	IF (I.GE.48 .AND. I.LE.57) IPHASE=I-48
	RETURN
	END
C 
	FUNCTION KLINE(KI,JECTOR)
	IMPLICIT INTEGER(A-Z)
	COMMON/SCREEN/GIGI,SWIDTH
C
	KI=0
	JECT=JECTOR
	IF (JECTOR.GT.4) THEN
	  KI=100-SWIDTH
	  JECT=JECT-5
	ENDIF
	KLINE=(JECT*10)*100
	RETURN
	END
C 
	FUNCTION ISCAPE(I,M)
	IMPLICIT INTEGER(A-Z)
C
C: I = NUMBER OF TIMES ONE HAS TRIED TO ESCAPE
CM: DIRECTION IN WHICH DANGER LIES
C
	INTEGER ITAB(8)
	BYTE PASS
	COMMON/PASS/PASS
	DATA ITAB/4,5,3,6,2,7,1,0/
C
	ISC=M
	IF ((PASS).AND.((I.LT.1).OR.(I.GT.8))) GOTO 100
	IF ((PASS).AND.((ISC.LT.1).OR.(ISC.GT.8))) GOTO 100
	ISC=ICORR(M+ITAB(I))
	ISCAPE=ISC
	RETURN
100	TYPE 999,ISC,I,M
999	FORMAT(' ISCAPE- ISC,M,I:',3I)
	RETURN
	END

	FUNCTION RND(IHIGH)
C
	IMPLICIT INTEGER(A-Z)
	INTEGER*2 TIME(4)
	EQUIVALENCE (TIME(2),SEED)
	REAL MTH$RANDOM
	DATA SEED/0/
	IF (SEED.EQ.0) CALL SYS$GETTIM(TIME)
	RND=IFIX(MTH$RANDOM(SEED)*IHIGH)
	END

	BYTE FUNCTION DECODE(Z6)
C
C UNPACK MAP DEFINITION FILE
C	D() = MAP DEFINITION FROM MAP FILE
C	Z6 = LOCATION
C	DECODE = CHARACTER AT Z6
C
C MAPS ARE ENCODED USING MOD 3 ARITHMETIC TO FIT 9 CHARACTERS INTO ONE 16-BIT
C  WORD.
C
	IMPLICIT INTEGER(A-Z)
	INTEGER MSKTAB(9)
	INTEGER*2 D(667)
	BYTE ASCII(3)
	DATA ASCII/'.','+','*'/
	DATA MSKTAB/1,3,9,27,81,243,729,2187,6561/
	COMMON/MAP/D
C
	IX=((Z6-1)/9)+1
	IY=MOD(Z6-1,9)+1
	DECODE=ASCII(MOD(D(IX)/MSKTAB(IY),3)+1)
	RETURN
	END

C
C RANDOM MAP GENERATION SUBROUTINES
C
	SUBROUTINE GEN
	IMPLICIT INTEGER(A-Z)
	PARAMETER WIDTH=100,HEIGHT=60
	BYTE MAP(WIDTH,HEIGHT)
	BYTE SUBMAP(39,39)
	BYTE OWNER(WIDTH,HEIGHT)
	INTEGER SIZES(128)
	COMMON/CITIES/CITIES(128)
	COMMON/SMAP/SUBMAP
	BYTE	EMAP(6000),RMAP(6000),PMAP(6000),OMAP(6000)
	INTEGER RLMAP(3000)
	COMMON/MAPBLK/EMAP,RMAP,PMAP,RLMAP
	COMMON/OMAP/OMAP
	EQUIVALENCE (MAP(1,1),OMAP(1)),(OWNER(1,1),RMAP(1))

100	DO 200 I=1,WIDTH
	DO 200 J=1,HEIGHT
200	MAP(I,J)='.'

	HSECTS=3+RND(4)
	VSECTS=3+RND(3)

	HSPACE=WIDTH/HSECTS
	VSPACE=HEIGHT/VSECTS
	DO 400 I=1,HSECTS
	DO 400 J=1,VSECTS
	DO 400 K=1,RND(2)+RND(3)
	CALL MAKELAND
	YPOS=(J-1)*VSPACE+RND(VSPACE)
	XPOS=(I-1)*HSPACE+RND(HSPACE)
	DO 300 L=1,39
	DO 300 M=1,39
	IF (SUBMAP(L,M).EQ.' ') GOTO 300
	IF (((XPOS+L-20).LE.0).OR.((XPOS+L-20).GT.100)) GOTO 300
	IF (((YPOS+M-20).LE.0).OR.((YPOS+M-20).GT.60)) GOTO 300
	MAP(XPOS+L-20,YPOS+M-20)=SUBMAP(L,M)
300	CONTINUE

400	CONTINUE

	COUNT=0
	DO 500 I=1,100
	DO 500 J=1,60
	IF (MAP(I,J).EQ.'.') COUNT=COUNT+1
500	CONTINUE

	IF (COUNT.LT.4000.AND.COUNT.GT.2500) GOTO 600
C	TYPE 999,COUNT
C	WRITE (1,999) COUNT
C999	FORMAT(' FAILED SEA CHECK, COUNT=',I5)
	GOTO 100

C600	TYPE 998,COUNT
C	WRITE (1,998) COUNT
C998	FORMAT(' COUNT=',I5)

600	DO 800 I=1,100
	DO 800 J=1,60
	OWNER(I,J)=0
800	CONTINUE
	LAREA=1
	WAREA=33
	DO 1000 I=2,99
	DO 1000 J=2,59
	IF (OWNER(I,J).NE.0) GOTO 1000
	 IF (MAP(I,J).EQ.'.') THEN
	   IF (SET(I,J,WAREA,'.',12000).EQ.0) GOTO 100
	   WAREA=WAREA+1
	   GOTO 1000
	  ELSE
	   IF (SET(I,J,LAREA,'+',1200).EQ.1) GOTO 900
C	   TYPE 997
C	   WRITE (1,997)
C997	   FORMAT(' FAILED SINGLE LAND MASS TEST')
	   GOTO 100
	 ENDIF
900	LAREA=LAREA+1
1000	CONTINUE

	IF (LAREA.GE.10.AND.LAREA.LE.30) GOTO 1100
C	TYPE 996
C	WRITE(1,996)
C996	FORMAT(' FAILED SEPARATION TEST')
	GOTO 100

C1100	TYPE 995,(('@'+OWNER(I,J),I=1,100),J=1,60)
C	WRITE(1,995) (('@'+OWNER(I,J),I=1,100),J=1,60)
C995	FORMAT(1X,100A1)

1100	DO 1300 I=1,128
1300	SIZES(I)=0

	DO 1400 I=2,99
	DO 1400 J=2,59
	SIZES(OWNER(I,J))=SIZES(OWNER(I,J))+1
1400	CONTINUE

	SCOUNT=COUNT*40/50
	DO 1500 SEA=33,WAREA
1500	IF (SIZES(SEA).GE.SCOUNT) GOTO 1600
C	TYPE 994
C	WRITE (1,994)
C994	FORMAT(' FAILURE- OCEANS ARE SEPARATED')
	GOTO 100

1600	CITS=(6000-COUNT)/50+1
	CITS=MAX(52,CITS)
	CITS=MIN(70,CITS)
	SEACITS=CITS*60/100+RND(12)
	LANDCITS=CITS-SEACITS
	DO 2100 K=1,SEACITS
1700	I=RND(98)+2
	J=RND(58)+2
	IF (MAP(I,J).NE.'+') GOTO 1700
	DO 1800 L=MAX(2,I-1),MIN(99,I+1)
	DO 1800 M=MAX(2,J-1),MIN(59,J+1)
	IF (OWNER(L,M).EQ.SEA) GOTO 1900
1800	CONTINUE
	GOTO 1700
1900	DO 2000 L=MAX(2,I-3),MIN(99,I+3)
	DO 2000 M=MAX(2,J-3),MIN(59,J+3)
	IF (OWNER(L,M).NE.OWNER(I,J)) GOTO 2000
	IF (MAP(L,M).EQ.'*') GOTO 1700
2000	CONTINUE
	MAP(I,J)='*'
	CITIES(OWNER(I,J))=CITIES(OWNER(I,J))+100
2100	CONTINUE

	DO 2500 K=1,LANDCITS
2200	I=RND(98)+2
	J=RND(58)+2
	IF (MAP(I,J).NE.'+') GOTO 2200
	DO 2300 L=MAX(2,I-1),MIN(99,I+1)
	DO 2300 M=MAX(2,J-1),MIN(59,J+1)
	IF (MAP(L,M).EQ.'.') GOTO 2200
2300	CONTINUE
	DO 2400 L=MAX(2,I-2),MIN(99,I+2)
	DO 2400 M=MAX(2,J-2),MIN(59,J+2)
	IF (OWNER(L,M).NE.OWNER(I,J)) GOTO 2400
	IF (MAP(L,M).EQ.'*') GOTO 2200
2400	CONTINUE
	MAP(I,J)='*'
	CITIES(OWNER(I,J))=CITIES(OWNER(I,J))+1
2500	CONTINUE

C	TYPE 993,((MAP(I,J),I=1,100),J=1,60)
D	WRITE(1,993) ((MAP(I,J),I=1,100),J=1,60)
D993	FORMAT(1X,100A1)

	END

	SUBROUTINE MAKELAND
	IMPLICIT INTEGER(A-Z)
	BYTE SUBMAP(39,39)
	REAL DIVER,RAD,COSANG,SINANG
	COMMON/SMAP/SUBMAP

	DO 100 I=1,39
	DO 100 J=1,39
	SUBMAP(I,J)=' '
100	CONTINUE

	SUBMAP(20,20)='+'
	VARY=2+RND(3)
	RADIUS=RND(4)+RND(3)
	START=90-RND(180)
	DO 400 ROT=START,START+360,3
	IF (RADIUS.LE.0) GOTO 300
	COSANG=COS(FLOAT(ROT)/3.14159)
	SINANG=SIN(FLOAT(ROT)/3.14159)
	RAD=0
	DIVER=.5/(ABS(COSANG)+ABS(SINANG))
200	IF (RAD.GT.RADIUS) GOTO 300
	RAD=RAD+DIVER
	SUBMAP(20+RAD*COSANG,20+RAD*SINANG)='+'
	GOTO 200
300	IF (MOD(ROT,10).NE.0) GOTO 400
	RADIUS=RADIUS+RND(VARY)-(VARY/2)
	IF ((VARY.AND.1).EQ.0) RADIUS=RADIUS+RND(2)
	IF (RADIUS.GE.12) RADIUS=11
400	CONTINUE

	RETURN
	END

	FUNCTION SET(XPOS,YPOS,AREA,LS,LIMIT)
	IMPLICIT INTEGER(A-Z)
	PARAMETER WIDTH=100,HEIGHT=60
	BYTE MAP(WIDTH,HEIGHT)
	BYTE OWNER(WIDTH,HEIGHT)
	BYTE XSTACK(12000)
	BYTE YSTACK(12000)
	BYTE CSTACK(12000)
	BYTE LS
	INTEGER XADDS(8),YADDS(8)
	DATA XADDS/-1,0,1,-1,1,-1,0,1/
	DATA YADDS/-1,-1,-1,0,0,1,1,1/
	BYTE	EMAP(6000),RMAP(6000),PMAP(6000),OMAP(6000)
	INTEGER RLMAP(3000)
	COMMON/MAPBLK/EMAP,RMAP,PMAP,RLMAP
	COMMON/OMAP/OMAP
	EQUIVALENCE (MAP(1,1),OMAP(1)),(OWNER(1,1),RMAP(1))

	OWNER(XPOS,YPOS)=AREA
	LEVEL=1
	X=XPOS
	Y=YPOS

100	K=1
200	IF ((X+XADDS(K).LT.2).OR.(X+XADDS(K).GT.99)) GOTO 300
	IF ((Y+YADDS(K).LT.2).OR.(Y+YADDS(K).GT.59)) GOTO 300
	IF (MAP(X+XADDS(K),Y+YADDS(K)).NE.LS) GOTO 300
	IF (OWNER(X+XADDS(K),Y+YADDS(K)).NE.0) GOTO 300
	OWNER(X+XADDS(K),Y+YADDS(K))=AREA
	XSTACK(LEVEL)=X
	YSTACK(LEVEL)=Y
	CSTACK(LEVEL)=K
	LEVEL=LEVEL+1
	 IF (LEVEL.GT.LIMIT) THEN
	   SET=0
	   RETURN
	 ENDIF
	X=X+XADDS(K)
    	Y=Y+YADDS(K)
	GOTO 100
300	K=K+1
	IF (K.LE.8) GOTO 200
	LEVEL=LEVEL-1
	 IF (LEVEL.EQ.0) THEN
	   SET=1
	   RETURN
	 ENDIF
	X=XSTACK(LEVEL)
	Y=YSTACK(LEVEL)
	K=CSTACK(LEVEL)
	GOTO 300

	END
	SUBROUTINE GDECPRT(I)
	INCLUDE 'EMPIRE.INC/NOLIST'
	IF (GIGI.EQ.0) THEN
	 CALL DECPRT(I)
	 RETURN
	ENDIF
	if (i.eq.100) then
	 type 992,I
	else if (i.lt.10) then
	 type 993,I
	else
	 type 994,I
	ENDIF
992	format('+T"',I3,'"',$)
993	format('+T"',I1,'"',$)
994	format('+T"',I2,'"',$)
	END

	SUBROUTINE CENTER_CURSOR
	INCLUDE 'EMPIRE.INC/NOLIST'
	IF (GIGI.EQ.1) TYPE 999
	IF (GIGI.EQ.-1) TYPE 998
999	FORMAT('+P[+6,+10]',$)
998	FORMAT('+P[+5,+10]',$)
	END

	SUBROUTINE ERASE_PAGE
	INCLUDE 'EMPIRE.INC/NOLIST'
	IF (GIGI.NE.0) TYPE 999,27,27
999	FORMAT('+',A,'PpS(E)',A,'\',$)
	CALL LIB$ERASE_PAGE(1,1)
	END

	SUBROUTINE SET_CURSOR(YROW,XCOL)
	INCLUDE 'EMPIRE.INC/NOLIST'
	IF (GIGI.EQ.0) CALL LIB$SET_CURSOR(YROW,XCOL)
	IF (GIGI.EQ.1) TYPE 998,MAX(0,XCOL*12-1),YROW*20-21
	IF (GIGI.EQ.-1) TYPE 998,MAX(0,XCOL*9-1),YROW*20-21
998	FORMAT('+P[',I3,',',I3,']',$)
	END

	SUBROUTINE REGIS_ON
	TYPE 999,27
999	FORMAT('+',A,'Pp',$)
	END
	SUBROUTINE REGIS_OFF
	TYPE 999,27
999	FORMAT('+',A,'\',$)
	END

	SUBROUTINE SENSOR(Z6)
C
C UPDATES PLAYER'S MAP AROUND LOCATION Z6 
C	AND SCREEN IF CURRENT SECTOR IS DISPLAYED
C
	INCLUDE 'EMPIRE.INC/NOLIST'
	BYTE COLOR
C
	IBEFOR=-100
	DO 100 I=1,9
	I1=Z6+ARROW(I)
	AB=RMAP(I1)
	IF (AB.EQ.PMAP(I1)) GOTO 100
	PMAP(I1)=AB
	IF (JECTOR.EQ.-1) GOTO 100
	IF (ISEC.EQ.-1) GOTO 100
	LINE=KLINE(KI,ISEC)
	IY=(I1-1)/100*100
	IX=I1-IY
	IF ((IY.LT.LINE).OR.(IY.GT.LINE+1900)
	1	.OR.(IX.LE.KI).OR.(IX.GT.KI+SWIDTH)) GOTO 100
	I1=I1-LINE-KI
	IF ((GIGI.NE.0).AND.(IBEFOR.EQ.-100)) CALL REGIS_ON
	IF (IBEFOR+1.NE.I1) CALL CURSOR(I1+300)
	IBEFOR=I1
	IF (GIGI.EQ.0) GOTO 200
	IF (GIGI.EQ.1) GOTO 150
	if ((ab.ge.'a'.and.ab.le.'z').OR.ab.eq.'X')
	1 TYPE 995,'T(W(I1R))"',AB,'"'
	if (AB.GE.'A'.AND.AB.LE.'Z') TYPE 995,'T(W(I3R))"',AB,'"'
	if (ab.eq.'+') TYPE 995,'T(W(I2RN1))"+"'
	if (ab.eq.'*') TYPE 995,'T(W(I1RN1))"*"'
	if (ab.eq.'.') TYPE 995,'T(W(I3RN1))" "'
	GOTO 100
150	COLOR='7'
	IF (AB.EQ.'+') COLOR='4'
	IF (AB.EQ.'.') COLOR='5'
	IF (AB.EQ.'X') COLOR='2'
	IF (AB.EQ.'*') COLOR='6'
	IF (AB.GE.'a'.AND.AB.LE.'z') COLOR='2'
	type 995,'T(W(I0N0R)S[12])" "'
	CALL CURSOR(i1+300)	!POSITION CURSOR
	if (color.eq.'4'.or.color.eq.'5') then
	if (ab.eq.'.') ab=' '
	type 995,'T(W(I',COLOR,'N1)S[12])"',ab,'"T(S[9])'
	else
	type 995,'T(W(I',COLOR,'N0R)S[9])"',ab,'"'
	end if
	GOTO 100
995	format('+',$,100(A))
200	TYPE 999,AB
999	FORMAT('+',A1$)
100	CONTINUE
	IF (IBEFOR.EQ.-100) RETURN
	IF (GIGI) CALL REGIS_OFF
	END

	SUBROUTINE SECTOR(AMAP)
C
C THIS SUBROUTINE DISPLAY SECTOR JECTOR FROM MAP II
C  IF ISEC=JECTOR, MAP WILL NOT BE DISPLAYED AGAIN
C
	INCLUDE 'EMPIRE.INC/NOLIST'
	BYTE AMAP(6000)
	BYTE MCHAR(9),SIZE(9),COLOR
	DATA MCHAR/'Z','Y','T',0,'X','W','V','U',0/
	DATA SIZE/10,4,1,0,30,10,3,1,0/
C
	IF (JECTOR.EQ.-1) GOTO 200
	IF (MODE.NE.1) RETURN
	IF (ISEC.NE.JECTOR) GOTO 100
	IF (NEWRND.EQ.1) GOTO 1300
	RETURN
100	ISEC=JECTOR
	GOTO 300
200	CALL STROUT('Sector?',12)
	JECTOR=IPHASE(GETCHX())
	IF ((JECTOR.LT.0).OR.(JECTOR.GT.9)) GOTO 200
	ISEC=JECTOR
	JECTOR=-1		!LET MAIN KNOW THAT UPDATING SECTOR ISNT USED
300	CALL ERASE_PAGE(1,1)
	IF (GIGI.NE.0) CALL REGIS_ON
	LINE=KLINE(KI,ISEC)
	LINEFI=LINE+2000	!LINEFI=LINE AFTER LAST LINE OF SECTOR
	LINEC=LINE-100		!GET SET FOR LINE 400
400	LINEC=LINEC+100		!GOTO NEXT LINE
	IF (LINEC.GE.LINEFI) GOTO 1000 !CHECK FOR END OF SECTOR
	KSTART=KI+1		!IF LINE IS BROKEN, KSTART WILL BE MODIFIED
500	DO 600 J=KSTART,KI+SWIDTH !KI ITSELF IS NOT IN SECTOR
	AB=AMAP(J+LINEC)	!GET CHARACTER
600	IF (AB.NE.' ') GOTO 700	!FIND FIRST NON-BLANK SPOT
	GOTO 400		!NO CHARACTERS IN THIS LINE
700	KINIT=J			!AB IS ALREADY CALCULATED
	G2(J)=AB		!AVOIDS REPITITION
	DO 800 J=KINIT+1,KI+SWIDTH !LOOK FOR BLANK CHARACTER
	AB=AMAP(J+LINEC)	!GET CHARACTER
	IF (AB.EQ.' ') GOTO 900	!EXIT LOOP IF BLANK
800	G2(J)=AB		!PUT CHAR. STRING IN AN ARRAY
900	KFINAL=J-1		!SET END  OF CHAR. STRING
	CALL CURSOR(KINIT-LINE+LINEC-KI+300)	!POSITION CURSOR
	IF (GIGI.EQ.0) GOTO 970
	j=kinit
905	ab=g2(j)
	if ((ab.NE.'+').AND.(ab.NE.'.')) goto 950
	do 940 i=j+1,kfinal
	if (g2(i).ne.g2(j)) goto 945
940	continue
	i=kfinal+1
945	J=I-J
	POS=1
	IF (AB.EQ.'.') POS=5
	DO 948 POS=POS,10
	IF (SIZE(POS).EQ.0) THEN
	 J=I-1
	 GOTO 980
	ENDIF
947	IF (J.GE.SIZE(POS)) THEN	
	  TYPE 995,'@',MCHAR(POS)
	  J=J-SIZE(POS)
	  GOTO 947
	ENDIF
948	CONTINUE
	goto 980
995	format('+',$,100(A))
950	if (ab.eq.'a') type 995,'@A'
	if (ab.eq.'b') type 995,'@B'
	if (ab.eq.'c') type 995,'@C'
	if (ab.eq.'d') type 995,'@D'
	if (ab.eq.'f') type 995,'@E'
	if (ab.eq.'r') type 995,'@F'
	if (ab.eq.'s') type 995,'@G'
	if (ab.eq.'t') type 995,'@H'
	if (ab.eq.'X') type 995,'@I'
	if (ab.eq.'A') type 995,'@J'
	if (ab.eq.'B') type 995,'@K'
	if (ab.eq.'C') type 995,'@L'
	if (ab.eq.'D') type 995,'@M'
	if (ab.eq.'F') type 995,'@N'
	if (ab.eq.'R') type 995,'@O'
	if (ab.eq.'S') type 995,'@P'
	if (ab.eq.'T') type 995,'@Q'
	if (ab.eq.'O') type 995,'@R'
	if (ab.eq.'*') type 995,'@S'
980	j=j+1
	if (j.le.kfinal) goto 905
	GOTO 990
970	TYPE 999,(G2(J),J=KINIT,KFINAL)
999	FORMAT('+',<KFINAL-KINIT+1>A1,$)
990	IF (KFINAL.GE.KI+SWIDTH) GOTO 400 !NEXT LINE
	KSTART=KFINAL+1		!LOOK AT REST OF LINE
	GOTO 500

1000	KURSOR=2300
	DO 1100 I=KI,KI+SWIDTH,SWIDTH/7	!PRINT X COORDINATES
	CALL CURSOR(KURSOR)
	CALL GDECPRT(I)
	KURSOR=KURSOR+SWIDTH/7
1100	CONTINUE
C 
	KURSOR=302+SWIDTH
	IF (GIGI.EQ.1) KURSOR=KURSOR-1
	DO 1200 I=LINE/100,LINE/100+19,2	!PRINT Y COORDINATES
	CALL CURSOR(KURSOR)
	CALL GDECPRT(I)
	KURSOR=KURSOR+200
1200	CONTINUE
C 
	IF (GIGI.NE.0) CALL REGIS_OFF
	SCOL=78
	IF (GIGI.EQ.1) SCOL=83
	CALL LIB$SET_CURSOR(5,SCOL)
	TYPE 998,'S',10,8,'e',10,8,'c',10,8,'t',10,8,'o',10,8,'r',10,10,8,
	1 ISEC,10,10,10,8,'R',10,8,'o',10,8,'u',10,8,'n',10,8,'d'
998	FORMAT('+',$,19A1,I1,17A1)
1300	CALL LIB$SET_CURSOR(20,SCOL+1)
	K=0
	DO 1400 I=3,0,-1
	J=MDATE/(10**I)
	IF (K.EQ.0.AND.J.EQ.0) GOTO 1400
	K=1
	TYPE 997,10,8,MOD(J,10)
997	FORMAT('+',$,2A1,I1)
1400	CONTINUE
C
	NEWRND=0
	CALL LIB$SET_CURSOR(1,1)		!SET CURSOR TO BEG. OF SCREEN
	RETURN
	END

	SUBROUTINE VT125_ON
	CALL REGIS_ON
	TYPE 999,'S(M0 (L0) (A L0)'		!DARK
	TYPE 999,'1 (L100) (A H120 L50 S100)'	!RED
	TYPE 999,'2 (L65) (A H240 L50 S100)'	!GREEN
	TYPE 999,'3 (L35) (A H300 L50 S100))'	!CYAN
	TYPE 999,'S[0,0] (A[0,0][767,479],I(D),S1,T0)'
	TYPE 999,'T[9]'
	TYPE 999,'@.'
	TYPE 999,'@:AT(W(I1))"a"@;'
	TYPE 999,'@:BT(W(I1))"b"@;'
	TYPE 999,'@:CT(W(I1))"c"@;'
	TYPE 999,'@:DT(W(I1))"d"@;'
	TYPE 999,'@:ET(W(I1))"f"@;'
	TYPE 999,'@:FT(W(I1))"r"@;'
	TYPE 999,'@:GT(W(I1))"s"@;'
	TYPE 999,'@:HT(W(I1))"t"@;'
	TYPE 999,'@:IT(W(I1))"X"@;'
	TYPE 999,'@:JT(W(I3))"A"@;'
	TYPE 999,'@:KT(W(I3))"B"@;'
	TYPE 999,'@:LT(W(I3))"C"@;'
	TYPE 999,'@:MT(W(I3))"D"@;'
	TYPE 999,'@:NT(W(I3))"F"@;'
	TYPE 999,'@:OT(W(I3))"R"@;'
	TYPE 999,'@:PT(W(I3))"S"@;'
	TYPE 999,'@:QT(W(I3))"T"@;'
	TYPE 999,'@:RT(W(I3))"O"@;'
	TYPE 999,'@:ST(W(I1N1))"*"@;'
	TYPE 999,'@:TT(W(I2N1))"+"@;'
	TYPE 999,'@:UT(W(I3N1))" "@;'
	TYPE 999,'@:VT(W(I3N1))"   "@;'
	TYPE 999,'@:WT(W(I3N1))"          "@;'
	TYPE 999,'@:XT(W(I3N1))"                              "@;'
	TYPE 999,'@:YT(W(I2N1))"++++"@;'
	TYPE 999,'@:ZT(W(I2N1))"++++++++++"@;'
999	FORMAT('+',A,$)
	CALL REGIS_OFF
	END

	SUBROUTINE VT125_OFF
	END

	SUBROUTINE GIGI_ON
	CALL REGIS_ON
	TYPE 999,'T[12]'
	TYPE 999,'@.'
	TYPE 999,'@:AT(W(I2))"a"@;'
	TYPE 999,'@:BT(W(I2))"b"@;'
	TYPE 999,'@:CT(W(I2))"c"@;'
	TYPE 999,'@:DT(W(I2))"d"@;'
	TYPE 999,'@:ET(W(I2))"f"@;'
	TYPE 999,'@:FT(W(I2))"r"@;'
	TYPE 999,'@:GT(W(I2))"s"@;'
	TYPE 999,'@:HT(W(I2))"t"@;'
	TYPE 999,'@:IT(W(I2))"X"@;'
	TYPE 999,'@:JT(W(I7))"A"@;'
	TYPE 999,'@:KT(W(I7))"B"@;'
	TYPE 999,'@:LT(W(I7))"C"@;'
	TYPE 999,'@:MT(W(I7))"D"@;'
	TYPE 999,'@:NT(W(I7))"F"@;'
	TYPE 999,'@:OT(W(I7))"R"@;'
	TYPE 999,'@:PT(W(I7))"S"@;'
	TYPE 999,'@:QT(W(I7))"T"@;'
	TYPE 999,'@:RT(W(I7))"O"@;'
	TYPE 999,'@:ST(W(I6))"*"@;'
	TYPE 999,'@:TT(W(I4N1)S[12])"+"T(S[9])@;'
	TYPE 999,'@:UT(W(I5N1)S[12])" "T(S[9])@;'
	TYPE 999,'@:VT(W(I5N1)S[12])"   "T(S[9])@;'
	TYPE 999,'@:WT(W(I5N1)S[12])"          "T(S[9])@;'
	TYPE 999,'@:XT(W(I5N1)S[12])"                              "T(S[9])@;'
	TYPE 999,'@:YT(W(I4N1)S[12])"++++"T(S[9])@;'
	TYPE 999,'@:ZT(W(I4N1)S[12])"++++++++++"T(S[9])@;'
999	FORMAT('+',A,$)
	CALL REGIS_OFF
	END

	SUBROUTINE GIGI_OFF
	END
